//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(IPS.Data.IPSData),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsb6db2749d3f8cda976a2ebdf3b5bbab37fd38b694409f46c3a7e60a957459c95))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsb6db2749d3f8cda976a2ebdf3b5bbab37fd38b694409f46c3a7e60a957459c95 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "b6db2749d3f8cda976a2ebdf3b5bbab37fd38b694409f46c3a7e60a957459c95"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "IPSModelStoreContainer.Answers")
            {
                return GetView0();
            }

            if (extentName == "IPSModelStoreContainer.AnswerType")
            {
                return GetView1();
            }

            if (extentName == "IPSModelStoreContainer.Cultures")
            {
                return GetView2();
            }

            if (extentName == "IPSModelStoreContainer.Departments")
            {
                return GetView3();
            }

            if (extentName == "IPSModelStoreContainer.DurationMetrics")
            {
                return GetView4();
            }

            if (extentName == "IPSModelStoreContainer.EvaluationRoles")
            {
                return GetView5();
            }

            if (extentName == "IPSModelStoreContainer.Industries")
            {
                return GetView6();
            }

            if (extentName == "IPSModelStoreContainer.KTMedalRules")
            {
                return GetView7();
            }

            if (extentName == "IPSModelStoreContainer.Link_TeamUsers")
            {
                return GetView8();
            }

            if (extentName == "IPSModelStoreContainer.Link_TrainingParticipants")
            {
                return GetView9();
            }

            if (extentName == "IPSModelStoreContainer.MeasureUnits")
            {
                return GetView10();
            }

            if (extentName == "IPSModelStoreContainer.ProfileCategories")
            {
                return GetView11();
            }

            if (extentName == "IPSModelStoreContainer.ProfileScaleSettingsRules")
            {
                return GetView12();
            }

            if (extentName == "IPSModelStoreContainer.ProfileTypes")
            {
                return GetView13();
            }

            if (extentName == "IPSModelStoreContainer.ScorecardGoals")
            {
                return GetView14();
            }

            if (extentName == "IPSModelStoreContainer.ScorecardPerspectives")
            {
                return GetView15();
            }

            if (extentName == "IPSModelStoreContainer.StructureLevels")
            {
                return GetView16();
            }

            if (extentName == "IPSModelStoreContainer.TaskCategoryLists")
            {
                return GetView17();
            }

            if (extentName == "IPSModelStoreContainer.TaskPriorityListItems")
            {
                return GetView18();
            }

            if (extentName == "IPSModelStoreContainer.TaskPriorityLists")
            {
                return GetView19();
            }

            if (extentName == "IPSModelStoreContainer.TaskStatusListItems")
            {
                return GetView20();
            }

            if (extentName == "IPSModelStoreContainer.TaskStatusLists")
            {
                return GetView21();
            }

            if (extentName == "IPSModelStoreContainer.UserTypes")
            {
                return GetView22();
            }

            if (extentName == "IPSModelStoreContainer.Users")
            {
                return GetView23();
            }

            if (extentName == "IPSModelStoreContainer.JobPositions")
            {
                return GetView24();
            }

            if (extentName == "IPSModelStoreContainer.Countries")
            {
                return GetView25();
            }

            if (extentName == "IPSModelStoreContainer.ScaleCategories")
            {
                return GetView26();
            }

            if (extentName == "IPSModelStoreContainer.Teams")
            {
                return GetView27();
            }

            if (extentName == "IPSModelStoreContainer.Scales")
            {
                return GetView28();
            }

            if (extentName == "IPSModelStoreContainer.TrainingLevels")
            {
                return GetView29();
            }

            if (extentName == "IPSModelStoreContainer.TrainingTypes")
            {
                return GetView30();
            }

            if (extentName == "IPSModelStoreContainer.TrainingDescriptions")
            {
                return GetView31();
            }

            if (extentName == "IPSModelStoreContainer.LookupItems")
            {
                return GetView32();
            }

            if (extentName == "IPSModelStoreContainer.Skills")
            {
                return GetView33();
            }

            if (extentName == "IPSModelStoreContainer.Questions")
            {
                return GetView34();
            }

            if (extentName == "IPSModelStoreContainer.PerformanceGroups")
            {
                return GetView35();
            }

            if (extentName == "IPSModelStoreContainer.TrainingMaterials")
            {
                return GetView36();
            }

            if (extentName == "IPSModelStoreContainer.Profiles")
            {
                return GetView37();
            }

            if (extentName == "IPSModelStoreContainer.TaskLists")
            {
                return GetView38();
            }

            if (extentName == "IPSModelStoreContainer.Organizations")
            {
                return GetView39();
            }

            if (extentName == "IPSModelStoreContainer.Trainings")
            {
                return GetView40();
            }

            if (extentName == "IPSModelStoreContainer.Link_PerformanceGroupSkills")
            {
                return GetView41();
            }

            if (extentName == "IPSModelStoreContainer.EvaluationParticipants")
            {
                return GetView42();
            }

            if (extentName == "IPSModelStoreContainer.EvaluationAgreements")
            {
                return GetView43();
            }

            if (extentName == "IPSModelStoreContainer.Bookmarks")
            {
                return GetView44();
            }

            if (extentName == "IPSModelStoreContainer.TaskCategoryListItems")
            {
                return GetView45();
            }

            if (extentName == "IPSModelStoreContainer.NotificationTemplates")
            {
                return GetView46();
            }

            if (extentName == "IPSModelStoreContainer.KPITypes")
            {
                return GetView47();
            }

            if (extentName == "IPSModelStoreContainer.Link_ProjectUsers")
            {
                return GetView48();
            }

            if (extentName == "IPSModelStoreContainer.ExerciseMetrics")
            {
                return GetView49();
            }

            if (extentName == "IPSModelStoreContainer.Link_Training_NotificationType_NotificationInterval")
            {
                return GetView50();
            }

            if (extentName == "IPSModelStoreContainer.NotificationIntervals")
            {
                return GetView51();
            }

            if (extentName == "IPSModelStoreContainer.NotificationTypes")
            {
                return GetView52();
            }

            if (extentName == "IPSModelStoreContainer.CmsPages")
            {
                return GetView53();
            }

            if (extentName == "IPSModelStoreContainer.IpsPlanRoles")
            {
                return GetView54();
            }

            if (extentName == "IPSModelStoreContainer.IpsPlans")
            {
                return GetView55();
            }

            if (extentName == "IPSModelStoreContainer.IPSPlanFields")
            {
                return GetView56();
            }

            if (extentName == "IPSModelStoreContainer.IPSPlanFieldsLookup")
            {
                return GetView57();
            }

            if (extentName == "IPSModelStoreContainer.IPSPlanFeatures")
            {
                return GetView58();
            }

            if (extentName == "IPSModelStoreContainer.ScaleRanges")
            {
                return GetView59();
            }

            if (extentName == "IPSModelStoreContainer.PlanFeaturesKeys")
            {
                return GetView60();
            }

            if (extentName == "IPSModelStoreContainer.PossibleAnswers")
            {
                return GetView61();
            }

            if (extentName == "IPSModelStoreContainer.StagesEvolution")
            {
                return GetView62();
            }

            if (extentName == "IPSModelStoreContainer.StagesEvolutionQuestions")
            {
                return GetView63();
            }

            if (extentName == "IPSModelStoreContainer.SurveyResults")
            {
                return GetView64();
            }

            if (extentName == "IPSModelStoreContainer.EvaluationStatuses")
            {
                return GetView65();
            }

            if (extentName == "IPSModelStoreContainer.Documents")
            {
                return GetView66();
            }

            if (extentName == "IPSModelStoreContainer.QuestionMaterials")
            {
                return GetView67();
            }

            if (extentName == "IPSModelStoreContainer.SurveyAnswers")
            {
                return GetView68();
            }

            if (extentName == "IPSModelStoreContainer.TaskScaleRanges")
            {
                return GetView69();
            }

            if (extentName == "IPSModelStoreContainer.TaskScales")
            {
                return GetView70();
            }

            if (extentName == "IPSModelStoreContainer.TrainingMaterialRatings")
            {
                return GetView71();
            }

            if (extentName == "IPSModelStoreContainer.TaskActivity")
            {
                return GetView72();
            }

            if (extentName == "IPSModelStoreContainer.ProjectRoles")
            {
                return GetView73();
            }

            if (extentName == "IPSModelStoreContainer.ProjectGoals")
            {
                return GetView74();
            }

            if (extentName == "IPSModelStoreContainer.ProjectSteeringGroups")
            {
                return GetView75();
            }

            if (extentName == "IPSModelStoreContainer.Tags")
            {
                return GetView76();
            }

            if (extentName == "IPSModelStoreContainer.Link_ProfileTags")
            {
                return GetView77();
            }

            if (extentName == "IPSModelStoreContainer.ProjectGlobalSettings")
            {
                return GetView78();
            }

            if (extentName == "IPSModelStoreContainer.UserRecurrentNotificationSetting")
            {
                return GetView79();
            }

            if (extentName == "IPSModelStoreContainer.Projects")
            {
                return GetView80();
            }

            if (extentName == "IPSModelStoreContainer.NotificationTemplateTypes")
            {
                return GetView81();
            }

            if (extentName == "IPSModelStoreContainer.TrainingNote")
            {
                return GetView82();
            }

            if (extentName == "IPSModelStoreContainer.MilestoneAgreementGoals")
            {
                return GetView83();
            }

            if (extentName == "IPSModelStoreContainer.ProjectDefaultNotificationSettings")
            {
                return GetView84();
            }

            if (extentName == "IPSModelStoreContainer.StageGroups")
            {
                return GetView85();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingActivities")
            {
                return GetView86();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingGoalActivityInfo")
            {
                return GetView87();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingSkillGoals")
            {
                return GetView88();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingCustomerResult")
            {
                return GetView89();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingSchedule")
            {
                return GetView90();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingActivityLog")
            {
                return GetView91();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingGoalInfo")
            {
                return GetView92();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingGoalScaleRanges")
            {
                return GetView93();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingGoalScales")
            {
                return GetView94();
            }

            if (extentName == "IPSModelStoreContainer.Customers")
            {
                return GetView95();
            }

            if (extentName == "IPSModelStoreContainer.CustomerSalesData")
            {
                return GetView96();
            }

            if (extentName == "IPSModelStoreContainer.TrainingFeedback")
            {
                return GetView97();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingActivityFeedback")
            {
                return GetView98();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingCustomers")
            {
                return GetView99();
            }

            if (extentName == "IPSModelStoreContainer.ExpiredProspectingActivityReason")
            {
                return GetView100();
            }

            if (extentName == "IPSModelStoreContainer.Tasks")
            {
                return GetView101();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingCustomerOfferDetail")
            {
                return GetView102();
            }

            if (extentName == "IPSModelStoreContainer.OfferClosingDetail")
            {
                return GetView103();
            }

            if (extentName == "IPSModelStoreContainer.ProspectingCustomerSalesAgreedData")
            {
                return GetView104();
            }

            if (extentName == "IPSModelStoreContainer.IpsAttachmentFileDetail")
            {
                return GetView105();
            }

            if (extentName == "IPSModelStoreContainer.IpsAttachments")
            {
                return GetView106();
            }

            if (extentName == "IPSModelStoreContainer.IpsAttachmentUser")
            {
                return GetView107();
            }

            if (extentName == "IPSModelStoreContainer.Stages")
            {
                return GetView108();
            }

            if (extentName == "IPSModelStoreContainer.Link_DepartmentUsers")
            {
                return GetView109();
            }

            if (extentName == "IPSModelStoreContainer.Link_UsersJobPositions")
            {
                return GetView110();
            }

            if (extentName == "IPSModelStoreContainer.Link_IndustrySkills")
            {
                return GetView111();
            }

            if (extentName == "IPSModelStoreContainer.Link_SkillTargetAudience")
            {
                return GetView112();
            }

            if (extentName == "IPSModelStoreContainer.Link_SkillQuestions")
            {
                return GetView113();
            }

            if (extentName == "IPSModelStoreContainer.Link_PerformanceGroupGoals")
            {
                return GetView114();
            }

            if (extentName == "IPSModelStoreContainer.Link_PerformanceGroupProfileTypes")
            {
                return GetView115();
            }

            if (extentName == "IPSModelStoreContainer.Link_PerformanceGroupTargetAudience")
            {
                return GetView116();
            }

            if (extentName == "IPSModelStoreContainer.Link_ProfileTargetAudience")
            {
                return GetView117();
            }

            if (extentName == "IPSModelStoreContainer.Link_OrganizationPartners")
            {
                return GetView118();
            }

            if (extentName == "IPSModelStoreContainer.Link_SkillTrainings")
            {
                return GetView119();
            }

            if (extentName == "IPSModelStoreContainer.Link_PerformanceGroupQuestions")
            {
                return GetView120();
            }

            if (extentName == "IPSModelStoreContainer.Link_PerformancGroupTrainings")
            {
                return GetView121();
            }

            if (extentName == "IPSModelStoreContainer.Link_EvaluationAgreementTrainings")
            {
                return GetView122();
            }

            if (extentName == "IPSModelStoreContainer.Link_SurveyAnswersTrainings")
            {
                return GetView123();
            }

            if (extentName == "IPSModelStoreContainer.Link_ProfileStageGroups")
            {
                return GetView124();
            }

            if (extentName == "IPSData.Answers")
            {
                return GetView125();
            }

            if (extentName == "IPSData.AnswerTypes")
            {
                return GetView126();
            }

            if (extentName == "IPSData.Cultures")
            {
                return GetView127();
            }

            if (extentName == "IPSData.Departments")
            {
                return GetView128();
            }

            if (extentName == "IPSData.DurationMetrics")
            {
                return GetView129();
            }

            if (extentName == "IPSData.EvaluationRoles")
            {
                return GetView130();
            }

            if (extentName == "IPSData.Industries")
            {
                return GetView131();
            }

            if (extentName == "IPSData.KTMedalRules")
            {
                return GetView132();
            }

            if (extentName == "IPSData.Link_TeamUsers")
            {
                return GetView133();
            }

            if (extentName == "IPSData.Link_TrainingParticipants")
            {
                return GetView134();
            }

            if (extentName == "IPSData.MeasureUnits")
            {
                return GetView135();
            }

            if (extentName == "IPSData.ProfileCategories")
            {
                return GetView136();
            }

            if (extentName == "IPSData.ProfileScaleSettingsRules")
            {
                return GetView137();
            }

            if (extentName == "IPSData.ProfileTypes")
            {
                return GetView138();
            }

            if (extentName == "IPSData.ScorecardGoals")
            {
                return GetView139();
            }

            if (extentName == "IPSData.ScorecardPerspectives")
            {
                return GetView140();
            }

            if (extentName == "IPSData.StructureLevels")
            {
                return GetView141();
            }

            if (extentName == "IPSData.TaskCategoryLists")
            {
                return GetView142();
            }

            if (extentName == "IPSData.TaskPriorityListItems")
            {
                return GetView143();
            }

            if (extentName == "IPSData.TaskPriorityLists")
            {
                return GetView144();
            }

            if (extentName == "IPSData.TaskStatusListItems")
            {
                return GetView145();
            }

            if (extentName == "IPSData.TaskStatusLists")
            {
                return GetView146();
            }

            if (extentName == "IPSData.UserTypes")
            {
                return GetView147();
            }

            if (extentName == "IPSData.Users")
            {
                return GetView148();
            }

            if (extentName == "IPSData.JobPositions")
            {
                return GetView149();
            }

            if (extentName == "IPSData.Countries")
            {
                return GetView150();
            }

            if (extentName == "IPSData.ScaleCategories")
            {
                return GetView151();
            }

            if (extentName == "IPSData.Teams")
            {
                return GetView152();
            }

            if (extentName == "IPSData.Scales")
            {
                return GetView153();
            }

            if (extentName == "IPSData.TrainingLevels")
            {
                return GetView154();
            }

            if (extentName == "IPSData.TrainingTypes")
            {
                return GetView155();
            }

            if (extentName == "IPSData.TrainingDescriptions")
            {
                return GetView156();
            }

            if (extentName == "IPSData.LookupItems")
            {
                return GetView157();
            }

            if (extentName == "IPSData.Skills")
            {
                return GetView158();
            }

            if (extentName == "IPSData.Questions")
            {
                return GetView159();
            }

            if (extentName == "IPSData.PerformanceGroups")
            {
                return GetView160();
            }

            if (extentName == "IPSData.TrainingMaterials")
            {
                return GetView161();
            }

            if (extentName == "IPSData.Profiles")
            {
                return GetView162();
            }

            if (extentName == "IPSData.TaskLists")
            {
                return GetView163();
            }

            if (extentName == "IPSData.Organizations")
            {
                return GetView164();
            }

            if (extentName == "IPSData.Trainings")
            {
                return GetView165();
            }

            if (extentName == "IPSData.Link_PerformanceGroupSkills")
            {
                return GetView166();
            }

            if (extentName == "IPSData.EvaluationParticipants")
            {
                return GetView167();
            }

            if (extentName == "IPSData.EvaluationAgreements")
            {
                return GetView168();
            }

            if (extentName == "IPSData.Bookmarks")
            {
                return GetView169();
            }

            if (extentName == "IPSData.TaskCategoryListItems")
            {
                return GetView170();
            }

            if (extentName == "IPSData.NotificationTemplates")
            {
                return GetView171();
            }

            if (extentName == "IPSData.KPITypes")
            {
                return GetView172();
            }

            if (extentName == "IPSData.Link_ProjectUsers")
            {
                return GetView173();
            }

            if (extentName == "IPSData.ExerciseMetrics")
            {
                return GetView174();
            }

            if (extentName == "IPSData.Link_Training_NotificationType_NotificationInterval")
            {
                return GetView175();
            }

            if (extentName == "IPSData.NotificationIntervals")
            {
                return GetView176();
            }

            if (extentName == "IPSData.NotificationTypes")
            {
                return GetView177();
            }

            if (extentName == "IPSData.CmsPages")
            {
                return GetView178();
            }

            if (extentName == "IPSData.IpsPlanRoles")
            {
                return GetView179();
            }

            if (extentName == "IPSData.IpsPlans")
            {
                return GetView180();
            }

            if (extentName == "IPSData.IPSPlanFields")
            {
                return GetView181();
            }

            if (extentName == "IPSData.IPSPlanFieldsLookups")
            {
                return GetView182();
            }

            if (extentName == "IPSData.IPSPlanFeatures")
            {
                return GetView183();
            }

            if (extentName == "IPSData.ScaleRanges")
            {
                return GetView184();
            }

            if (extentName == "IPSData.PlanFeaturesKeys")
            {
                return GetView185();
            }

            if (extentName == "IPSData.PossibleAnswers")
            {
                return GetView186();
            }

            if (extentName == "IPSData.StagesEvolutions")
            {
                return GetView187();
            }

            if (extentName == "IPSData.StagesEvolutionQuestions")
            {
                return GetView188();
            }

            if (extentName == "IPSData.SurveyResults")
            {
                return GetView189();
            }

            if (extentName == "IPSData.EvaluationStatuses")
            {
                return GetView190();
            }

            if (extentName == "IPSData.Documents")
            {
                return GetView191();
            }

            if (extentName == "IPSData.QuestionMaterials")
            {
                return GetView192();
            }

            if (extentName == "IPSData.SurveyAnswers")
            {
                return GetView193();
            }

            if (extentName == "IPSData.TaskScaleRanges")
            {
                return GetView194();
            }

            if (extentName == "IPSData.TaskScales")
            {
                return GetView195();
            }

            if (extentName == "IPSData.TrainingMaterialRatings")
            {
                return GetView196();
            }

            if (extentName == "IPSData.TaskActivities")
            {
                return GetView197();
            }

            if (extentName == "IPSData.ProjectRoles")
            {
                return GetView198();
            }

            if (extentName == "IPSData.ProjectGoals")
            {
                return GetView199();
            }

            if (extentName == "IPSData.ProjectSteeringGroups")
            {
                return GetView200();
            }

            if (extentName == "IPSData.Tags")
            {
                return GetView201();
            }

            if (extentName == "IPSData.Link_ProfileTags")
            {
                return GetView202();
            }

            if (extentName == "IPSData.ProjectGlobalSettings")
            {
                return GetView203();
            }

            if (extentName == "IPSData.UserRecurrentNotificationSettings")
            {
                return GetView204();
            }

            if (extentName == "IPSData.Projects")
            {
                return GetView205();
            }

            if (extentName == "IPSData.NotificationTemplateTypes")
            {
                return GetView206();
            }

            if (extentName == "IPSData.TrainingNotes")
            {
                return GetView207();
            }

            if (extentName == "IPSData.MilestoneAgreementGoals")
            {
                return GetView208();
            }

            if (extentName == "IPSData.ProjectDefaultNotificationSettings")
            {
                return GetView209();
            }

            if (extentName == "IPSData.StageGroups")
            {
                return GetView210();
            }

            if (extentName == "IPSData.ProspectingActivities")
            {
                return GetView211();
            }

            if (extentName == "IPSData.ProspectingGoalActivityInfoes")
            {
                return GetView212();
            }

            if (extentName == "IPSData.ProspectingSkillGoals")
            {
                return GetView213();
            }

            if (extentName == "IPSData.ProspectingCustomerResults")
            {
                return GetView214();
            }

            if (extentName == "IPSData.ProspectingSchedules")
            {
                return GetView215();
            }

            if (extentName == "IPSData.ProspectingActivityLogs")
            {
                return GetView216();
            }

            if (extentName == "IPSData.ProspectingGoalInfoes")
            {
                return GetView217();
            }

            if (extentName == "IPSData.ProspectingGoalScaleRanges")
            {
                return GetView218();
            }

            if (extentName == "IPSData.ProspectingGoalScales")
            {
                return GetView219();
            }

            if (extentName == "IPSData.Customers")
            {
                return GetView220();
            }

            if (extentName == "IPSData.CustomerSalesDatas")
            {
                return GetView221();
            }

            if (extentName == "IPSData.TrainingFeedbacks")
            {
                return GetView222();
            }

            if (extentName == "IPSData.ProspectingActivityFeedbacks")
            {
                return GetView223();
            }

            if (extentName == "IPSData.ProspectingCustomers")
            {
                return GetView224();
            }

            if (extentName == "IPSData.ExpiredProspectingActivityReasons")
            {
                return GetView225();
            }

            if (extentName == "IPSData.Tasks")
            {
                return GetView226();
            }

            if (extentName == "IPSData.ProspectingCustomerOfferDetails")
            {
                return GetView227();
            }

            if (extentName == "IPSData.OfferClosingDetails")
            {
                return GetView228();
            }

            if (extentName == "IPSData.ProspectingCustomerSalesAgreedDatas")
            {
                return GetView229();
            }

            if (extentName == "IPSData.IpsAttachmentFileDetails")
            {
                return GetView230();
            }

            if (extentName == "IPSData.IpsAttachments")
            {
                return GetView231();
            }

            if (extentName == "IPSData.IpsAttachmentUsers")
            {
                return GetView232();
            }

            if (extentName == "IPSData.Stages")
            {
                return GetView233();
            }

            if (extentName == "IPSData.Link_DepartmentUsers")
            {
                return GetView234();
            }

            if (extentName == "IPSData.Link_UsersJobPositions")
            {
                return GetView235();
            }

            if (extentName == "IPSData.Link_IndustrySkills")
            {
                return GetView236();
            }

            if (extentName == "IPSData.Link_SkillTargetAudience")
            {
                return GetView237();
            }

            if (extentName == "IPSData.Link_SkillQuestions")
            {
                return GetView238();
            }

            if (extentName == "IPSData.Link_PerformanceGroupGoals")
            {
                return GetView239();
            }

            if (extentName == "IPSData.Link_PerformanceGroupProfileTypes")
            {
                return GetView240();
            }

            if (extentName == "IPSData.Link_PerformanceGroupTargetAudience")
            {
                return GetView241();
            }

            if (extentName == "IPSData.Link_ProfileTargetAudience")
            {
                return GetView242();
            }

            if (extentName == "IPSData.Link_OrganizationPartners")
            {
                return GetView243();
            }

            if (extentName == "IPSData.Link_SkillTrainings")
            {
                return GetView244();
            }

            if (extentName == "IPSData.Link_PerformanceGroupQuestions")
            {
                return GetView245();
            }

            if (extentName == "IPSData.Link_PerformancGroupTrainings")
            {
                return GetView246();
            }

            if (extentName == "IPSData.Link_EvaluationAgreementTrainings")
            {
                return GetView247();
            }

            if (extentName == "IPSData.Link_SurveyAnswersTrainings")
            {
                return GetView248();
            }

            if (extentName == "IPSData.Link_ProfileStageGroups")
            {
                return GetView249();
            }

            if (extentName == "IPSModelStoreContainer.Reminders")
            {
                return GetView250();
            }

            if (extentName == "IPSModelStoreContainer.ReminderTypes")
            {
                return GetView251();
            }

            if (extentName == "IPSData.Reminders")
            {
                return GetView252();
            }

            if (extentName == "IPSData.ReminderTypes")
            {
                return GetView253();
            }

            if (extentName == "IPSModelStoreContainer.Trends")
            {
                return GetView254();
            }

            if (extentName == "IPSData.Trends")
            {
                return GetView255();
            }

            if (extentName == "IPSModelStoreContainer.HelpCategory")
            {
                return GetView256();
            }

            if (extentName == "IPSModelStoreContainer.HelpContent")
            {
                return GetView257();
            }

            if (extentName == "IPSData.HelpCategories")
            {
                return GetView258();
            }

            if (extentName == "IPSData.HelpContents")
            {
                return GetView259();
            }

            if (extentName == "IPSModelStoreContainer.ContactUs")
            {
                return GetView260();
            }

            if (extentName == "IPSData.ContactUs")
            {
                return GetView261();
            }

            if (extentName == "IPSModelStoreContainer.Testimonials")
            {
                return GetView262();
            }

            if (extentName == "IPSData.Testimonials")
            {
                return GetView263();
            }

            if (extentName == "IPSModelStoreContainer.PortfolioCategory")
            {
                return GetView264();
            }

            if (extentName == "IPSModelStoreContainer.PortfolioImages")
            {
                return GetView265();
            }

            if (extentName == "IPSModelStoreContainer.PortfolioProjects")
            {
                return GetView266();
            }

            if (extentName == "IPSData.PortfolioCategories")
            {
                return GetView267();
            }

            if (extentName == "IPSData.PortfolioImages")
            {
                return GetView268();
            }

            if (extentName == "IPSData.PortfolioProjects")
            {
                return GetView269();
            }

            if (extentName == "IPSModelStoreContainer.TemplateCategory")
            {
                return GetView270();
            }

            if (extentName == "IPSModelStoreContainer.TemplateContent")
            {
                return GetView271();
            }

            if (extentName == "IPSModelStoreContainer.TemplateContentImage")
            {
                return GetView272();
            }

            if (extentName == "IPSData.TemplateCategories")
            {
                return GetView273();
            }

            if (extentName == "IPSData.TemplateContents")
            {
                return GetView274();
            }

            if (extentName == "IPSData.TemplateContentImages")
            {
                return GetView275();
            }

            if (extentName == "IPSModelStoreContainer.IpsEmails")
            {
                return GetView276();
            }

            if (extentName == "IPSModelStoreContainer.IPSEMailAttachments")
            {
                return GetView277();
            }

            if (extentName == "IPSData.IpsEmails")
            {
                return GetView278();
            }

            if (extentName == "IPSData.IPSEMailAttachments")
            {
                return GetView279();
            }

            if (extentName == "IPSModelStoreContainer.DailyEvaluation")
            {
                return GetView280();
            }

            if (extentName == "IPSData.DailyEvaluations")
            {
                return GetView281();
            }

            if (extentName == "IPSModelStoreContainer.SensorData")
            {
                return GetView282();
            }

            if (extentName == "IPSData.SensorDatas")
            {
                return GetView283();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Answers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Answers
        [IPSModel.Store.Answers](T1.Answers_Id, T1.Answers_ParticipantId, T1.Answers_QuestionId, T1.Answers_IsCorrect, T1.Answers_StageId, T1.Answers_Answer, T1.Answers_KPIType, T1.Answers_Comment)
    FROM (
        SELECT 
            T.Id AS Answers_Id, 
            T.ParticipantId AS Answers_ParticipantId, 
            T.QuestionId AS Answers_QuestionId, 
            T.IsCorrect AS Answers_IsCorrect, 
            T.StageId AS Answers_StageId, 
            T.Answer1 AS Answers_Answer, 
            T.KPIType AS Answers_KPIType, 
            T.Comment AS Answers_Comment, 
            True AS _from0
        FROM IPSData.Answers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.AnswerType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AnswerType
        [IPSModel.Store.AnswerType](T1.AnswerType_Id, T1.AnswerType_TypeName)
    FROM (
        SELECT 
            T.Id AS AnswerType_Id, 
            T.TypeName AS AnswerType_TypeName, 
            True AS _from0
        FROM IPSData.AnswerTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Cultures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Cultures
        [IPSModel.Store.Cultures](T1.Cultures_Id, T1.Cultures_CultureName, T1.Cultures_CultureIdentifier, T1.Cultures_Region, T1.Cultures_IsActive)
    FROM (
        SELECT 
            T.Id AS Cultures_Id, 
            T.CultureName AS Cultures_CultureName, 
            T.CultureIdentifier AS Cultures_CultureIdentifier, 
            T.Region AS Cultures_Region, 
            T.IsActive AS Cultures_IsActive, 
            True AS _from0
        FROM IPSData.Cultures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Departments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Departments
        [IPSModel.Store.Departments](T1.Departments_Id, T1.Departments_Name, T1.Departments_OrganizationId, T1.Departments_Description, T1.Departments_ManagerId, T1.Departments_Phone, T1.Departments_Email, T1.Departments_IsActive, T1.Departments_ParentId)
    FROM (
        SELECT 
            T.Id AS Departments_Id, 
            T.Name AS Departments_Name, 
            T.OrganizationId AS Departments_OrganizationId, 
            T.Description AS Departments_Description, 
            T.ManagerId AS Departments_ManagerId, 
            T.Phone AS Departments_Phone, 
            T.Email AS Departments_Email, 
            T.IsActive AS Departments_IsActive, 
            T.ParentId AS Departments_ParentId, 
            True AS _from0
        FROM IPSData.Departments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.DurationMetrics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DurationMetrics
        [IPSModel.Store.DurationMetrics](T1.DurationMetrics_Id, T1.DurationMetrics_Name)
    FROM (
        SELECT 
            T.Id AS DurationMetrics_Id, 
            T.Name AS DurationMetrics_Name, 
            True AS _from0
        FROM IPSData.DurationMetrics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.EvaluationRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationRoles
        [IPSModel.Store.EvaluationRoles](T1.EvaluationRoles_Id, T1.EvaluationRoles_Name)
    FROM (
        SELECT 
            T.Id AS EvaluationRoles_Id, 
            T.Name AS EvaluationRoles_Name, 
            True AS _from0
        FROM IPSData.EvaluationRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Industries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Industries
        [IPSModel.Store.Industries](T1.Industries_Id, T1.Industries_Name, T1.Industries_Description, T1.Industries_ParentId, T1.Industries_OrganizationId)
    FROM (
        SELECT 
            T.Id AS Industries_Id, 
            T.Name AS Industries_Name, 
            T.Description AS Industries_Description, 
            T.ParentId AS Industries_ParentId, 
            T.OrganizationId AS Industries_OrganizationId, 
            True AS _from0
        FROM IPSData.Industries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.KTMedalRules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing KTMedalRules
        [IPSModel.Store.KTMedalRules](T1.KTMedalRules_Id, T1.KTMedalRules_Name, T1.KTMedalRules_BronzeStart, T1.KTMedalRules_BronzeEnd, T1.KTMedalRules_SilverEnd)
    FROM (
        SELECT 
            T.Id AS KTMedalRules_Id, 
            T.Name AS KTMedalRules_Name, 
            T.BronzeStart AS KTMedalRules_BronzeStart, 
            T.BronzeEnd AS KTMedalRules_BronzeEnd, 
            T.SilverEnd AS KTMedalRules_SilverEnd, 
            True AS _from0
        FROM IPSData.KTMedalRules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_TeamUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_TeamUsers
        [IPSModel.Store.Link_TeamUsers](T1.[Link_TeamUsers.TeamId], T1.[Link_TeamUsers.UserId], T1.[Link_TeamUsers.RoleInTeam])
    FROM (
        SELECT 
            T.TeamId AS [Link_TeamUsers.TeamId], 
            T.UserId AS [Link_TeamUsers.UserId], 
            T.RoleInTeam AS [Link_TeamUsers.RoleInTeam], 
            True AS _from0
        FROM IPSData.Link_TeamUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_TrainingParticipants.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_TrainingParticipants
        [IPSModel.Store.Link_TrainingParticipants](T1.[Link_TrainingParticipants.TrainingId], T1.[Link_TrainingParticipants.UserId])
    FROM (
        SELECT 
            T.TrainingId AS [Link_TrainingParticipants.TrainingId], 
            T.UserId AS [Link_TrainingParticipants.UserId], 
            True AS _from0
        FROM IPSData.Link_TrainingParticipants AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.MeasureUnits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MeasureUnits
        [IPSModel.Store.MeasureUnits](T1.MeasureUnits_Id, T1.MeasureUnits_Name)
    FROM (
        SELECT 
            T.Id AS MeasureUnits_Id, 
            T.Name AS MeasureUnits_Name, 
            True AS _from0
        FROM IPSData.MeasureUnits AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProfileCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProfileCategories
        [IPSModel.Store.ProfileCategories](T1.ProfileCategories_Id, T1.ProfileCategories_Name, T1.ProfileCategories_OrganizationId)
    FROM (
        SELECT 
            T.Id AS ProfileCategories_Id, 
            T.Name AS ProfileCategories_Name, 
            T.OrganizationId AS ProfileCategories_OrganizationId, 
            True AS _from0
        FROM IPSData.ProfileCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProfileScaleSettingsRules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProfileScaleSettingsRules
        [IPSModel.Store.ProfileScaleSettingsRules](T1.ProfileScaleSettingsRules_Id, T1.ProfileScaleSettingsRules_Name)
    FROM (
        SELECT 
            T.Id AS ProfileScaleSettingsRules_Id, 
            T.Name AS ProfileScaleSettingsRules_Name, 
            True AS _from0
        FROM IPSData.ProfileScaleSettingsRules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProfileTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProfileTypes
        [IPSModel.Store.ProfileTypes](T1.ProfileTypes_Id, T1.ProfileTypes_Name, T1.ProfileTypes_IsStandard, T1.ProfileTypes_OrganizationId)
    FROM (
        SELECT 
            T.Id AS ProfileTypes_Id, 
            T.Name AS ProfileTypes_Name, 
            T.IsStandard AS ProfileTypes_IsStandard, 
            T.OrganizationId AS ProfileTypes_OrganizationId, 
            True AS _from0
        FROM IPSData.ProfileTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ScorecardGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScorecardGoals
        [IPSModel.Store.ScorecardGoals](T1.ScorecardGoals_Id, T1.ScorecardGoals_Title, T1.ScorecardGoals_Description, T1.ScorecardGoals_OrganizationId, T1.ScorecardGoals_IsActive)
    FROM (
        SELECT 
            T.Id AS ScorecardGoals_Id, 
            T.Title AS ScorecardGoals_Title, 
            T.Description AS ScorecardGoals_Description, 
            T.OrganizationId AS ScorecardGoals_OrganizationId, 
            T.IsActive AS ScorecardGoals_IsActive, 
            True AS _from0
        FROM IPSData.ScorecardGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ScorecardPerspectives.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScorecardPerspectives
        [IPSModel.Store.ScorecardPerspectives](T1.ScorecardPerspectives_Id, T1.ScorecardPerspectives_Name, T1.ScorecardPerspectives_OrganizationId)
    FROM (
        SELECT 
            T.Id AS ScorecardPerspectives_Id, 
            T.Name AS ScorecardPerspectives_Name, 
            T.OrganizationId AS ScorecardPerspectives_OrganizationId, 
            True AS _from0
        FROM IPSData.ScorecardPerspectives AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.StructureLevels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StructureLevels
        [IPSModel.Store.StructureLevels](T1.StructureLevels_Id, T1.StructureLevels_Name)
    FROM (
        SELECT 
            T.Id AS StructureLevels_Id, 
            T.Name AS StructureLevels_Name, 
            True AS _from0
        FROM IPSData.StructureLevels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskCategoryLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskCategoryLists
        [IPSModel.Store.TaskCategoryLists](T1.TaskCategoryLists_Id, T1.TaskCategoryLists_Name, T1.TaskCategoryLists_Description, T1.TaskCategoryLists_IsTemplate, T1.TaskCategoryLists_OrganizationId, T1.TaskCategoryLists_DepartmentId, T1.TaskCategoryLists_TeamId, T1.TaskCategoryLists_UserId)
    FROM (
        SELECT 
            T.Id AS TaskCategoryLists_Id, 
            T.Name AS TaskCategoryLists_Name, 
            T.Description AS TaskCategoryLists_Description, 
            T.IsTemplate AS TaskCategoryLists_IsTemplate, 
            T.OrganizationId AS TaskCategoryLists_OrganizationId, 
            T.DepartmentId AS TaskCategoryLists_DepartmentId, 
            T.TeamId AS TaskCategoryLists_TeamId, 
            T.UserId AS TaskCategoryLists_UserId, 
            True AS _from0
        FROM IPSData.TaskCategoryLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskPriorityListItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskPriorityListItems
        [IPSModel.Store.TaskPriorityListItems](T1.TaskPriorityListItems_Id, T1.TaskPriorityListItems_PriorityNo, T1.TaskPriorityListItems_Name, T1.TaskPriorityListItems_PriorityListId, T1.TaskPriorityListItems_Description)
    FROM (
        SELECT 
            T.Id AS TaskPriorityListItems_Id, 
            T.PriorityNo AS TaskPriorityListItems_PriorityNo, 
            T.Name AS TaskPriorityListItems_Name, 
            T.PriorityListId AS TaskPriorityListItems_PriorityListId, 
            T.Description AS TaskPriorityListItems_Description, 
            True AS _from0
        FROM IPSData.TaskPriorityListItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskPriorityLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskPriorityLists
        [IPSModel.Store.TaskPriorityLists](T1.TaskPriorityLists_Id, T1.TaskPriorityLists_Name, T1.TaskPriorityLists_Description, T1.TaskPriorityLists_IsTemplate, T1.TaskPriorityLists_OrganizationId, T1.TaskPriorityLists_DepartmentId, T1.TaskPriorityLists_TeamId, T1.TaskPriorityLists_UserId)
    FROM (
        SELECT 
            T.Id AS TaskPriorityLists_Id, 
            T.Name AS TaskPriorityLists_Name, 
            T.Description AS TaskPriorityLists_Description, 
            T.IsTemplate AS TaskPriorityLists_IsTemplate, 
            T.OrganizationId AS TaskPriorityLists_OrganizationId, 
            T.DepartmentId AS TaskPriorityLists_DepartmentId, 
            T.TeamId AS TaskPriorityLists_TeamId, 
            T.UserId AS TaskPriorityLists_UserId, 
            True AS _from0
        FROM IPSData.TaskPriorityLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskStatusListItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskStatusListItems
        [IPSModel.Store.TaskStatusListItems](T1.TaskStatusListItems_Id, T1.TaskStatusListItems_Name, T1.TaskStatusListItems_Description, T1.TaskStatusListItems_TaskStatusListId, T1.TaskStatusListItems_SeqNo)
    FROM (
        SELECT 
            T.Id AS TaskStatusListItems_Id, 
            T.Name AS TaskStatusListItems_Name, 
            T.Description AS TaskStatusListItems_Description, 
            T.TaskStatusListId AS TaskStatusListItems_TaskStatusListId, 
            T.SeqNo AS TaskStatusListItems_SeqNo, 
            True AS _from0
        FROM IPSData.TaskStatusListItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskStatusLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskStatusLists
        [IPSModel.Store.TaskStatusLists](T1.TaskStatusLists_Id, T1.TaskStatusLists_Name, T1.TaskStatusLists_Description, T1.TaskStatusLists_IsTemplate, T1.TaskStatusLists_OrganizationId, T1.TaskStatusLists_DepartmentId, T1.TaskStatusLists_TeamId, T1.TaskStatusLists_UserId)
    FROM (
        SELECT 
            T.Id AS TaskStatusLists_Id, 
            T.Name AS TaskStatusLists_Name, 
            T.Description AS TaskStatusLists_Description, 
            T.IsTemplate AS TaskStatusLists_IsTemplate, 
            T.OrganizationId AS TaskStatusLists_OrganizationId, 
            T.DepartmentId AS TaskStatusLists_DepartmentId, 
            T.TeamId AS TaskStatusLists_TeamId, 
            T.UserId AS TaskStatusLists_UserId, 
            True AS _from0
        FROM IPSData.TaskStatusLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.UserTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserTypes
        [IPSModel.Store.UserTypes](T1.UserTypes_Id, T1.UserTypes_UserType)
    FROM (
        SELECT 
            T.Id AS UserTypes_Id, 
            T.UserType1 AS UserTypes_UserType, 
            True AS _from0
        FROM IPSData.UserTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [IPSModel.Store.Users](T1.Users_Id, T1.Users_UserKey, T1.Users_UserTypeId, T1.Users_OrganizationId, T1.Users_FirstName, T1.Users_LastName, T1.Users_BirthDate, T1.Users_Gender, T1.Users_Country, T1.Users_City, T1.Users_State, T1.Users_Address1, T1.Users_Address2, T1.Users_Zip, T1.Users_ImagePath, T1.Users_Skype, T1.Users_Twitter, T1.Users_Facebook, T1.Users_Linkedin, T1.Users_MobileNo, T1.Users_WorkPhoneNo, T1.Users_PrivatePhoneNo, T1.Users_WorkEmail, T1.Users_PrivateEmail, T1.Users_CultureId, T1.Users_WebSite, T1.Users_Remarks, T1.Users_IsActive)
    FROM (
        SELECT 
            T.Id AS Users_Id, 
            T.UserKey AS Users_UserKey, 
            T.UserTypeId AS Users_UserTypeId, 
            T.OrganizationId AS Users_OrganizationId, 
            T.FirstName AS Users_FirstName, 
            T.LastName AS Users_LastName, 
            T.BirthDate AS Users_BirthDate, 
            T.Gender AS Users_Gender, 
            T.Country AS Users_Country, 
            T.City AS Users_City, 
            T.State AS Users_State, 
            T.Address1 AS Users_Address1, 
            T.Address2 AS Users_Address2, 
            T.Zip AS Users_Zip, 
            T.ImagePath AS Users_ImagePath, 
            T.Skype AS Users_Skype, 
            T.Twitter AS Users_Twitter, 
            T.Facebook AS Users_Facebook, 
            T.Linkedin AS Users_Linkedin, 
            T.MobileNo AS Users_MobileNo, 
            T.WorkPhoneNo AS Users_WorkPhoneNo, 
            T.PrivatePhoneNo AS Users_PrivatePhoneNo, 
            T.WorkEmail AS Users_WorkEmail, 
            T.PrivateEmail AS Users_PrivateEmail, 
            T.CultureId AS Users_CultureId, 
            T.WebSite AS Users_WebSite, 
            T.Remarks AS Users_Remarks, 
            T.IsActive AS Users_IsActive, 
            True AS _from0
        FROM IPSData.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.JobPositions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JobPositions
        [IPSModel.Store.JobPositions](T1.JobPositions_Id, T1.JobPositions_JobPosition)
    FROM (
        SELECT 
            T.Id AS JobPositions_Id, 
            T.JobPosition1 AS JobPositions_JobPosition, 
            True AS _from0
        FROM IPSData.JobPositions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Countries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Countries
        [IPSModel.Store.Countries](T1.Countries_Id, T1.Countries_CountryName, T1.Countries_FlagImage)
    FROM (
        SELECT 
            T.Id AS Countries_Id, 
            T.CountryName AS Countries_CountryName, 
            T.FlagImage AS Countries_FlagImage, 
            True AS _from0
        FROM IPSData.Countries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ScaleCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScaleCategories
        [IPSModel.Store.ScaleCategories](T1.ScaleCategories_Id, T1.ScaleCategories_Name)
    FROM (
        SELECT 
            T.Id AS ScaleCategories_Id, 
            T.Name AS ScaleCategories_Name, 
            True AS _from0
        FROM IPSData.ScaleCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Teams.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Teams
        [IPSModel.Store.Teams](T1.Teams_Id, T1.Teams_Name, T1.Teams_DepartmentId, T1.Teams_OrganizationId, T1.Teams_Description, T1.Teams_TeamLeadId, T1.Teams_Phone, T1.Teams_Email, T1.Teams_IsActive)
    FROM (
        SELECT 
            T.Id AS Teams_Id, 
            T.Name AS Teams_Name, 
            T.DepartmentId AS Teams_DepartmentId, 
            T.OrganizationId AS Teams_OrganizationId, 
            T.Description AS Teams_Description, 
            T.TeamLeadId AS Teams_TeamLeadId, 
            T.Phone AS Teams_Phone, 
            T.Email AS Teams_Email, 
            T.IsActive AS Teams_IsActive, 
            True AS _from0
        FROM IPSData.Teams AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Scales.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Scales
        [IPSModel.Store.Scales](T1.Scales_Id, T1.Scales_Name, T1.Scales_Description, T1.Scales_ScaleCategoryId, T1.Scales_MeasureUnitId, T1.Scales_IncludeNotRelevant, T1.Scales_IsTemplate, T1.Scales_ProfileType)
    FROM (
        SELECT 
            T.Id AS Scales_Id, 
            T.Name AS Scales_Name, 
            T.Description AS Scales_Description, 
            T.ScaleCategoryId AS Scales_ScaleCategoryId, 
            T.MeasureUnitId AS Scales_MeasureUnitId, 
            T.IncludeNotRelevant AS Scales_IncludeNotRelevant, 
            T.IsTemplate AS Scales_IsTemplate, 
            T.ProfileType AS Scales_ProfileType, 
            True AS _from0
        FROM IPSData.Scales AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TrainingLevels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingLevels
        [IPSModel.Store.TrainingLevels](T1.TrainingLevels_Id, T1.TrainingLevels_Name)
    FROM (
        SELECT 
            T.Id AS TrainingLevels_Id, 
            T.Name AS TrainingLevels_Name, 
            True AS _from0
        FROM IPSData.TrainingLevels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TrainingTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingTypes
        [IPSModel.Store.TrainingTypes](T1.TrainingTypes_Id, T1.TrainingTypes_Name)
    FROM (
        SELECT 
            T.Id AS TrainingTypes_Id, 
            T.Name AS TrainingTypes_Name, 
            True AS _from0
        FROM IPSData.TrainingTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TrainingDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingDescriptions
        [IPSModel.Store.TrainingDescriptions](T1.TrainingDescriptions_Id, T1.TrainingDescriptions_DescriptionType, T1.TrainingDescriptions_Description, T1.TrainingDescriptions_SkillId)
    FROM (
        SELECT 
            T.Id AS TrainingDescriptions_Id, 
            T.DescriptionType AS TrainingDescriptions_DescriptionType, 
            T.Description AS TrainingDescriptions_Description, 
            T.SkillId AS TrainingDescriptions_SkillId, 
            True AS _from0
        FROM IPSData.TrainingDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.LookupItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LookupItems
        [IPSModel.Store.LookupItems](T1.LookupItems_Id, T1.LookupItems_LookupItemType, T1.LookupItems_Name, T1.LookupItems_Description)
    FROM (
        SELECT 
            T.Id AS LookupItems_Id, 
            T.LookupItemType AS LookupItems_LookupItemType, 
            T.Name AS LookupItems_Name, 
            T.Description AS LookupItems_Description, 
            True AS _from0
        FROM IPSData.LookupItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Skills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Skills
        [IPSModel.Store.Skills](T1.Skills_Id, T1.Skills_Name, T1.Skills_Description, T1.Skills_ParentId, T1.Skills_OrganizationId, T1.Skills_IsTemplate, T1.Skills_StructureLevelId, T1.Skills_IsActive, T1.Skills_ProfileTypeId, T1.Skills_CreatedBy, T1.Skills_CreatedOn, T1.Skills_ModifiedBy, T1.Skills_ModifiedOn, T1.Skills_CreatedAsRoleId, T1.Skills_ModifiedAsRoleId, T1.Skills_SeqNo)
    FROM (
        SELECT 
            T.Id AS Skills_Id, 
            T.Name AS Skills_Name, 
            T.Description AS Skills_Description, 
            T.ParentId AS Skills_ParentId, 
            T.OrganizationId AS Skills_OrganizationId, 
            T.IsTemplate AS Skills_IsTemplate, 
            T.StructureLevelId AS Skills_StructureLevelId, 
            T.IsActive AS Skills_IsActive, 
            T.ProfileTypeId AS Skills_ProfileTypeId, 
            T.CreatedBy AS Skills_CreatedBy, 
            T.CreatedOn AS Skills_CreatedOn, 
            T.ModifiedBy AS Skills_ModifiedBy, 
            T.ModifiedOn AS Skills_ModifiedOn, 
            T.CreatedAsRoleId AS Skills_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Skills_ModifiedAsRoleId, 
            T.SeqNo AS Skills_SeqNo, 
            True AS _from0
        FROM IPSData.Skills AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Questions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Questions
        [IPSModel.Store.Questions](T1.Questions_Id, T1.Questions_QuestionText, T1.Questions_Description, T1.Questions_AnswerTypeId, T1.Questions_IsActive, T1.Questions_IsTemplate, T1.Questions_OrganizationId, T1.Questions_ProfileTypeId, T1.Questions_ScaleId, T1.Questions_QuestionSettings, T1.Questions_StructureLevelId, T1.Questions_IndustryId, T1.Questions_SeqNo, T1.Questions_Points, T1.Questions_TimeForQuestion, T1.Questions_ParentQuestionId)
    FROM (
        SELECT 
            T.Id AS Questions_Id, 
            T.QuestionText AS Questions_QuestionText, 
            T.Description AS Questions_Description, 
            T.AnswerTypeId AS Questions_AnswerTypeId, 
            T.IsActive AS Questions_IsActive, 
            T.IsTemplate AS Questions_IsTemplate, 
            T.OrganizationId AS Questions_OrganizationId, 
            T.ProfileTypeId AS Questions_ProfileTypeId, 
            T.ScaleId AS Questions_ScaleId, 
            T.QuestionSettings AS Questions_QuestionSettings, 
            T.StructureLevelId AS Questions_StructureLevelId, 
            T.IndustryId AS Questions_IndustryId, 
            T.SeqNo AS Questions_SeqNo, 
            T.Points AS Questions_Points, 
            T.TimeForQuestion AS Questions_TimeForQuestion, 
            T.ParentQuestionId AS Questions_ParentQuestionId, 
            True AS _from0
        FROM IPSData.Questions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.PerformanceGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PerformanceGroups
        [IPSModel.Store.PerformanceGroups](T1.PerformanceGroups_Id, T1.PerformanceGroups_Name, T1.PerformanceGroups_Description, T1.PerformanceGroups_OrganizationId, T1.PerformanceGroups_IsTemplate, T1.PerformanceGroups_ParentId, T1.PerformanceGroups_LevelId, T1.PerformanceGroups_IndustryId, T1.PerformanceGroups_ScorecardPerspectiveId, T1.PerformanceGroups_IsActive, T1.PerformanceGroups_SeqNo, T1.PerformanceGroups_ScaleId, T1.PerformanceGroups_ProfileId, T1.PerformanceGroups_TrainingComments)
    FROM (
        SELECT 
            T.Id AS PerformanceGroups_Id, 
            T.Name AS PerformanceGroups_Name, 
            T.Description AS PerformanceGroups_Description, 
            T.OrganizationId AS PerformanceGroups_OrganizationId, 
            T.IsTemplate AS PerformanceGroups_IsTemplate, 
            T.ParentId AS PerformanceGroups_ParentId, 
            T.LevelId AS PerformanceGroups_LevelId, 
            T.IndustryId AS PerformanceGroups_IndustryId, 
            T.ScorecardPerspectiveId AS PerformanceGroups_ScorecardPerspectiveId, 
            T.IsActive AS PerformanceGroups_IsActive, 
            T.SeqNo AS PerformanceGroups_SeqNo, 
            T.ScaleId AS PerformanceGroups_ScaleId, 
            T.ProfileId AS PerformanceGroups_ProfileId, 
            T.TrainingComments AS PerformanceGroups_TrainingComments, 
            True AS _from0
        FROM IPSData.PerformanceGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TrainingMaterials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingMaterials
        [IPSModel.Store.TrainingMaterials](T1.TrainingMaterials_Id, T1.TrainingMaterials_Title, T1.TrainingMaterials_Name, T1.TrainingMaterials_Description, T1.TrainingMaterials_TrainingId, T1.TrainingMaterials_MaterialType, T1.TrainingMaterials_ResourceType, T1.TrainingMaterials_Link, T1.TrainingMaterials_CreatedBy, T1.TrainingMaterials_CreatedOn)
    FROM (
        SELECT 
            T.Id AS TrainingMaterials_Id, 
            T.Title AS TrainingMaterials_Title, 
            T.Name AS TrainingMaterials_Name, 
            T.Description AS TrainingMaterials_Description, 
            T.TrainingId AS TrainingMaterials_TrainingId, 
            T.MaterialType AS TrainingMaterials_MaterialType, 
            T.ResourceType AS TrainingMaterials_ResourceType, 
            T.Link AS TrainingMaterials_Link, 
            T.CreatedBy AS TrainingMaterials_CreatedBy, 
            T.CreatedOn AS TrainingMaterials_CreatedOn, 
            True AS _from0
        FROM IPSData.TrainingMaterials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Profiles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Profiles
        [IPSModel.Store.Profiles](T1.Profiles_Id, T1.Profiles_OrganizationId, T1.Profiles_ProfileTypeId, T1.Profiles_IndustryId, T1.Profiles_CategoryId, T1.Profiles_Name, T1.Profiles_Description, T1.Profiles_MedalRuleId, T1.Profiles_ScaleId, T1.Profiles_ScaleSettingsRuleId, T1.Profiles_LevelId, T1.Profiles_IsActive, T1.Profiles_KPIWeak, T1.Profiles_KPIStrong, T1.Profiles_IsTemplate, T1.Profiles_QuestionDisplayRuleId, T1.Profiles_SetKPIInSurvey, T1.Profiles_RandomizeQuestions, T1.Profiles_AllowRevisitAnsweredQuestions, T1.Profiles_PassScore, T1.Profiles_ProjectId, T1.Profiles_CreatedBy, T1.Profiles_CreatedOn, T1.Profiles_ModifiedBy, T1.Profiles_ModifiedOn, T1.Profiles_CreatedAsRoleId, T1.Profiles_ModifiedAsRoleId)
    FROM (
        SELECT 
            T.Id AS Profiles_Id, 
            T.OrganizationId AS Profiles_OrganizationId, 
            T.ProfileTypeId AS Profiles_ProfileTypeId, 
            T.IndustryId AS Profiles_IndustryId, 
            T.CategoryId AS Profiles_CategoryId, 
            T.Name AS Profiles_Name, 
            T.Description AS Profiles_Description, 
            T.MedalRuleId AS Profiles_MedalRuleId, 
            T.ScaleId AS Profiles_ScaleId, 
            T.ScaleSettingsRuleId AS Profiles_ScaleSettingsRuleId, 
            T.LevelId AS Profiles_LevelId, 
            T.IsActive AS Profiles_IsActive, 
            T.KPIWeak AS Profiles_KPIWeak, 
            T.KPIStrong AS Profiles_KPIStrong, 
            T.IsTemplate AS Profiles_IsTemplate, 
            T.QuestionDisplayRuleId AS Profiles_QuestionDisplayRuleId, 
            T.SetKPIInSurvey AS Profiles_SetKPIInSurvey, 
            T.RandomizeQuestions AS Profiles_RandomizeQuestions, 
            T.AllowRevisitAnsweredQuestions AS Profiles_AllowRevisitAnsweredQuestions, 
            T.PassScore AS Profiles_PassScore, 
            T.ProjectId AS Profiles_ProjectId, 
            T.CreatedBy AS Profiles_CreatedBy, 
            T.CreatedOn AS Profiles_CreatedOn, 
            T.ModifiedBy AS Profiles_ModifiedBy, 
            T.ModifiedOn AS Profiles_ModifiedOn, 
            T.CreatedAsRoleId AS Profiles_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Profiles_ModifiedAsRoleId, 
            True AS _from0
        FROM IPSData.Profiles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskLists
        [IPSModel.Store.TaskLists](T1.TaskLists_Id, T1.TaskLists_Name, T1.TaskLists_TaskStatusListId, T1.TaskLists_TaskPriorityListId, T1.TaskLists_UserId, T1.TaskLists_TaskCategoryListsId)
    FROM (
        SELECT 
            T.Id AS TaskLists_Id, 
            T.Name AS TaskLists_Name, 
            T.TaskStatusListId AS TaskLists_TaskStatusListId, 
            T.TaskPriorityListId AS TaskLists_TaskPriorityListId, 
            T.UserId AS TaskLists_UserId, 
            T.TaskCategoryListsId AS TaskLists_TaskCategoryListsId, 
            True AS _from0
        FROM IPSData.TaskLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Organizations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Organizations
        [IPSModel.Store.Organizations](T1.Organizations_Id, T1.Organizations_Name, T1.Organizations_ParentId, T1.Organizations_IndustryId, T1.Organizations_ZipPostalCode, T1.Organizations_City, T1.Organizations_Phone, T1.Organizations_Fax, T1.Organizations_Email, T1.Organizations_Website, T1.Organizations_LogoLink, T1.Organizations_OrgCode, T1.Organizations_PostAddressLine1, T1.Organizations_PostAddressLine2, T1.Organizations_PostAddressLine3, T1.Organizations_PostZipPostalCode, T1.Organizations_PostCity, T1.Organizations_PostCountry, T1.Organizations_CountryId, T1.Organizations_Address, T1.Organizations_ContactName, T1.Organizations_State, T1.Organizations_VisitingAddress, T1.Organizations_VisitingZip, T1.Organizations_VisitingCity, T1.Organizations_VisitingCountryId, T1.Organizations_Skype, T1.Organizations_ContactEmail, T1.Organizations_ContactPhone, T1.Organizations_Twitter, T1.Organizations_Facebook, T1.Organizations_LinkedIn, T1.Organizations_Pinterest, T1.Organizations_IPSGroup, T1.Organizations_VisitingState, T1.Organizations_ContactTitleId, T1.Organizations_ContactRoleId, T1.Organizations_ParentOrganizationId, T1.Organizations_OrganizationTypeId, T1.Organizations_CreatedOn, T1.Organizations_CreatedBy, T1.Organizations_UpdatedOn, T1.Organizations_UpdatedBy, T1.Organizations_CSVFile)
    FROM (
        SELECT 
            T.Id AS Organizations_Id, 
            T.Name AS Organizations_Name, 
            T.ParentId AS Organizations_ParentId, 
            T.IndustryId AS Organizations_IndustryId, 
            T.ZipPostalCode AS Organizations_ZipPostalCode, 
            T.City AS Organizations_City, 
            T.Phone AS Organizations_Phone, 
            T.Fax AS Organizations_Fax, 
            T.Email AS Organizations_Email, 
            T.Website AS Organizations_Website, 
            T.LogoLink AS Organizations_LogoLink, 
            T.OrgCode AS Organizations_OrgCode, 
            T.PostAddressLine1 AS Organizations_PostAddressLine1, 
            T.PostAddressLine2 AS Organizations_PostAddressLine2, 
            T.PostAddressLine3 AS Organizations_PostAddressLine3, 
            T.PostZipPostalCode AS Organizations_PostZipPostalCode, 
            T.PostCity AS Organizations_PostCity, 
            T.PostCountry AS Organizations_PostCountry, 
            T.CountryId AS Organizations_CountryId, 
            T.Address AS Organizations_Address, 
            T.ContactName AS Organizations_ContactName, 
            T.State AS Organizations_State, 
            T.VisitingAddress AS Organizations_VisitingAddress, 
            T.VisitingZip AS Organizations_VisitingZip, 
            T.VisitingCity AS Organizations_VisitingCity, 
            T.VisitingCountryId AS Organizations_VisitingCountryId, 
            T.Skype AS Organizations_Skype, 
            T.ContactEmail AS Organizations_ContactEmail, 
            T.ContactPhone AS Organizations_ContactPhone, 
            T.Twitter AS Organizations_Twitter, 
            T.Facebook AS Organizations_Facebook, 
            T.LinkedIn AS Organizations_LinkedIn, 
            T.Pinterest AS Organizations_Pinterest, 
            T.IPSGroup AS Organizations_IPSGroup, 
            T.VisitingState AS Organizations_VisitingState, 
            T.ContactTitleId AS Organizations_ContactTitleId, 
            T.ContactRoleId AS Organizations_ContactRoleId, 
            T.ParentOrganizationId AS Organizations_ParentOrganizationId, 
            T.OrganizationTypeId AS Organizations_OrganizationTypeId, 
            T.CreatedOn AS Organizations_CreatedOn, 
            T.CreatedBy AS Organizations_CreatedBy, 
            T.UpdatedOn AS Organizations_UpdatedOn, 
            T.UpdatedBy AS Organizations_UpdatedBy, 
            T.CSVFile AS Organizations_CSVFile, 
            True AS _from0
        FROM IPSData.Organizations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Trainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Trainings
        [IPSModel.Store.Trainings](T1.Trainings_Id, T1.Trainings_Name, T1.Trainings_What, T1.Trainings_How, T1.Trainings_Why, T1.Trainings_AdditionalInfo, T1.Trainings_LevelId, T1.Trainings_Frequency, T1.Trainings_Duration, T1.Trainings_DurationMetricId, T1.Trainings_TypeId, T1.Trainings_IsTemplate, T1.Trainings_IsActive, T1.Trainings_OrganizationId, T1.Trainings_StartDate, T1.Trainings_EndDate, T1.Trainings_HowMany, T1.Trainings_ExerciseMetricId, T1.Trainings_HowManySets, T1.Trainings_HowManyActions, T1.Trainings_UserId, T1.Trainings_IsNotificationBySMS, T1.Trainings_IsNotificationByEmail, T1.Trainings_NotificationTemplateId, T1.Trainings_EmailBefore, T1.Trainings_SmsBefore, T1.Trainings_EvaluatorFeedbackRecurrence, T1.Trainings_CreatedBy, T1.Trainings_CreatedOn, T1.Trainings_ModifiedBy, T1.Trainings_ModifiedOn, T1.Trainings_CreatedAsRoleId, T1.Trainings_ModifiedAsRoleId, T1.Trainings_DescriptiveFrequency)
    FROM (
        SELECT 
            T.Id AS Trainings_Id, 
            T.Name AS Trainings_Name, 
            T.What AS Trainings_What, 
            T.How AS Trainings_How, 
            T.Why AS Trainings_Why, 
            T.AdditionalInfo AS Trainings_AdditionalInfo, 
            T.LevelId AS Trainings_LevelId, 
            T.Frequency AS Trainings_Frequency, 
            T.Duration AS Trainings_Duration, 
            T.DurationMetricId AS Trainings_DurationMetricId, 
            T.TypeId AS Trainings_TypeId, 
            T.IsTemplate AS Trainings_IsTemplate, 
            T.IsActive AS Trainings_IsActive, 
            T.OrganizationId AS Trainings_OrganizationId, 
            T.StartDate AS Trainings_StartDate, 
            T.EndDate AS Trainings_EndDate, 
            T.HowMany AS Trainings_HowMany, 
            T.ExerciseMetricId AS Trainings_ExerciseMetricId, 
            T.HowManySets AS Trainings_HowManySets, 
            T.HowManyActions AS Trainings_HowManyActions, 
            T.UserId AS Trainings_UserId, 
            T.IsNotificationBySMS AS Trainings_IsNotificationBySMS, 
            T.IsNotificationByEmail AS Trainings_IsNotificationByEmail, 
            T.NotificationTemplateId AS Trainings_NotificationTemplateId, 
            T.EmailBefore AS Trainings_EmailBefore, 
            T.SmsBefore AS Trainings_SmsBefore, 
            T.EvaluatorFeedbackRecurrence AS Trainings_EvaluatorFeedbackRecurrence, 
            T.CreatedBy AS Trainings_CreatedBy, 
            T.CreatedOn AS Trainings_CreatedOn, 
            T.ModifiedBy AS Trainings_ModifiedBy, 
            T.ModifiedOn AS Trainings_ModifiedOn, 
            T.CreatedAsRoleId AS Trainings_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Trainings_ModifiedAsRoleId, 
            T.DescriptiveFrequency AS Trainings_DescriptiveFrequency, 
            True AS _from0
        FROM IPSData.Trainings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_PerformanceGroupSkills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupSkills
        [IPSModel.Store.Link_PerformanceGroupSkills](T1.[Link_PerformanceGroupSkills.Id], T1.[Link_PerformanceGroupSkills.PerformanceGroupId], T1.[Link_PerformanceGroupSkills.SkillId], T1.[Link_PerformanceGroupSkills.SubSkillId], T1.[Link_PerformanceGroupSkills.Benchmark], T1.[Link_PerformanceGroupSkills.Weight], T1.[Link_PerformanceGroupSkills.CSF], T1.[Link_PerformanceGroupSkills.Action])
    FROM (
        SELECT 
            T.Id AS [Link_PerformanceGroupSkills.Id], 
            T.PerformanceGroupId AS [Link_PerformanceGroupSkills.PerformanceGroupId], 
            T.SkillId AS [Link_PerformanceGroupSkills.SkillId], 
            T.SubSkillId AS [Link_PerformanceGroupSkills.SubSkillId], 
            T.Benchmark AS [Link_PerformanceGroupSkills.Benchmark], 
            T.Weight AS [Link_PerformanceGroupSkills.Weight], 
            T.CSF AS [Link_PerformanceGroupSkills.CSF], 
            T.Action AS [Link_PerformanceGroupSkills.Action], 
            True AS _from0
        FROM IPSData.Link_PerformanceGroupSkills AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.EvaluationParticipants.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationParticipants
        [IPSModel.Store.EvaluationParticipants](T1.EvaluationParticipants_StageGroupId, T1.EvaluationParticipants_UserId, T1.EvaluationParticipants_IsLocked, T1.EvaluationParticipants_EvaluationRoleId, T1.EvaluationParticipants_Id, T1.EvaluationParticipants_EvaluateeId, T1.EvaluationParticipants_IsSelfEvaluation, T1.EvaluationParticipants_Invited, T1.EvaluationParticipants_IsScoreManager, T1.EvaluationParticipants_ResultSendOutAt, T1.EvaluationParticipants_IsResultSendOut)
    FROM (
        SELECT 
            T.StageGroupId AS EvaluationParticipants_StageGroupId, 
            T.UserId AS EvaluationParticipants_UserId, 
            T.IsLocked AS EvaluationParticipants_IsLocked, 
            T.EvaluationRoleId AS EvaluationParticipants_EvaluationRoleId, 
            T.Id AS EvaluationParticipants_Id, 
            T.EvaluateeId AS EvaluationParticipants_EvaluateeId, 
            T.IsSelfEvaluation AS EvaluationParticipants_IsSelfEvaluation, 
            T.Invited AS EvaluationParticipants_Invited, 
            T.IsScoreManager AS EvaluationParticipants_IsScoreManager, 
            T.ResultSendOutAt AS EvaluationParticipants_ResultSendOutAt, 
            T.IsResultSendOut AS EvaluationParticipants_IsResultSendOut, 
            True AS _from0
        FROM IPSData.EvaluationParticipants AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.EvaluationAgreements.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationAgreements
        [IPSModel.Store.EvaluationAgreements](T1.EvaluationAgreements_StageId, T1.EvaluationAgreements_ParticipantId, T1.EvaluationAgreements_QuestionId, T1.EvaluationAgreements_KPIType, T1.EvaluationAgreements_ShortGoal, T1.EvaluationAgreements_Comment, T1.EvaluationAgreements_Id, T1.EvaluationAgreements_FinalScore, T1.EvaluationAgreements_MidGoal, T1.EvaluationAgreements_LongGoal, T1.EvaluationAgreements_FinalGoal, T1.EvaluationAgreements_IsFinalScoreCopied)
    FROM (
        SELECT 
            T.StageId AS EvaluationAgreements_StageId, 
            T.ParticipantId AS EvaluationAgreements_ParticipantId, 
            T.QuestionId AS EvaluationAgreements_QuestionId, 
            T.KPIType AS EvaluationAgreements_KPIType, 
            T.ShortGoal AS EvaluationAgreements_ShortGoal, 
            T.Comment AS EvaluationAgreements_Comment, 
            T.Id AS EvaluationAgreements_Id, 
            T.FinalScore AS EvaluationAgreements_FinalScore, 
            T.MidGoal AS EvaluationAgreements_MidGoal, 
            T.LongGoal AS EvaluationAgreements_LongGoal, 
            T.FinalGoal AS EvaluationAgreements_FinalGoal, 
            T.IsFinalScoreCopied AS EvaluationAgreements_IsFinalScoreCopied, 
            True AS _from0
        FROM IPSData.EvaluationAgreements AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Bookmarks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Bookmarks
        [IPSModel.Store.Bookmarks](T1.Bookmarks_Id, T1.Bookmarks_Title, T1.Bookmarks_URL, T1.Bookmarks_SeqNo, T1.Bookmarks_UserId)
    FROM (
        SELECT 
            T.Id AS Bookmarks_Id, 
            T.Title AS Bookmarks_Title, 
            T.URL AS Bookmarks_URL, 
            T.SeqNo AS Bookmarks_SeqNo, 
            T.UserId AS Bookmarks_UserId, 
            True AS _from0
        FROM IPSData.Bookmarks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskCategoryListItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskCategoryListItems
        [IPSModel.Store.TaskCategoryListItems](T1.TaskCategoryListItems_Id, T1.TaskCategoryListItems_Name, T1.TaskCategoryListItems_Description, T1.TaskCategoryListItems_CategoryListId, T1.TaskCategoryListItems_Color, T1.TaskCategoryListItems_TextColor)
    FROM (
        SELECT 
            T.Id AS TaskCategoryListItems_Id, 
            T.Name AS TaskCategoryListItems_Name, 
            T.Description AS TaskCategoryListItems_Description, 
            T.CategoryListId AS TaskCategoryListItems_CategoryListId, 
            T.Color AS TaskCategoryListItems_Color, 
            T.TextColor AS TaskCategoryListItems_TextColor, 
            True AS _from0
        FROM IPSData.TaskCategoryListItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.NotificationTemplates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationTemplates
        [IPSModel.Store.NotificationTemplates](T1.NotificationTemplates_Id, T1.NotificationTemplates_Name, T1.NotificationTemplates_CultureId, T1.NotificationTemplates_EmailSubject, T1.NotificationTemplates_EmailBody, T1.NotificationTemplates_SMSMessage, T1.NotificationTemplates_EvaluationRoleId, T1.NotificationTemplates_UIMessage, T1.NotificationTemplates_StageTypeId, T1.NotificationTemplates_OrganizationId, T1.NotificationTemplates_NotificationTemplateTypeId, T1.NotificationTemplates_CreatedBy, T1.NotificationTemplates_CreatedOn, T1.NotificationTemplates_ModifiedBy, T1.NotificationTemplates_ModifiedOn, T1.NotificationTemplates_CreatedAsRoleId, T1.NotificationTemplates_ModifiedAsRoleId, T1.NotificationTemplates_IsDefualt, T1.NotificationTemplates_StateTypeId, T1.NotificationTemplates_ProjectTypeId, T1.NotificationTemplates_ProfileTypeId)
    FROM (
        SELECT 
            T.Id AS NotificationTemplates_Id, 
            T.Name AS NotificationTemplates_Name, 
            T.CultureId AS NotificationTemplates_CultureId, 
            T.EmailSubject AS NotificationTemplates_EmailSubject, 
            T.EmailBody AS NotificationTemplates_EmailBody, 
            T.SMSMessage AS NotificationTemplates_SMSMessage, 
            T.EvaluationRoleId AS NotificationTemplates_EvaluationRoleId, 
            T.UIMessage AS NotificationTemplates_UIMessage, 
            T.StageTypeId AS NotificationTemplates_StageTypeId, 
            T.OrganizationId AS NotificationTemplates_OrganizationId, 
            T.NotificationTemplateTypeId AS NotificationTemplates_NotificationTemplateTypeId, 
            T.CreatedBy AS NotificationTemplates_CreatedBy, 
            T.CreatedOn AS NotificationTemplates_CreatedOn, 
            T.ModifiedBy AS NotificationTemplates_ModifiedBy, 
            T.ModifiedOn AS NotificationTemplates_ModifiedOn, 
            T.CreatedAsRoleId AS NotificationTemplates_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS NotificationTemplates_ModifiedAsRoleId, 
            T.IsDefualt AS NotificationTemplates_IsDefualt, 
            T.StateTypeId AS NotificationTemplates_StateTypeId, 
            T.ProjectTypeId AS NotificationTemplates_ProjectTypeId, 
            T.ProfileTypeId AS NotificationTemplates_ProfileTypeId, 
            True AS _from0
        FROM IPSData.NotificationTemplates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.KPITypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing KPITypes
        [IPSModel.Store.KPITypes](T1.KPITypes_Id, T1.KPITypes_Name)
    FROM (
        SELECT 
            T.Id AS KPITypes_Id, 
            T.Name AS KPITypes_Name, 
            True AS _from0
        FROM IPSData.KPITypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_ProjectUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProjectUsers
        [IPSModel.Store.Link_ProjectUsers](T1.[Link_ProjectUsers.ProjectId], T1.[Link_ProjectUsers.UserId], T1.[Link_ProjectUsers.RoleId], T1.[Link_ProjectUsers.SteeringGroupId])
    FROM (
        SELECT 
            T.ProjectId AS [Link_ProjectUsers.ProjectId], 
            T.UserId AS [Link_ProjectUsers.UserId], 
            T.RoleId AS [Link_ProjectUsers.RoleId], 
            T.SteeringGroupId AS [Link_ProjectUsers.SteeringGroupId], 
            True AS _from0
        FROM IPSData.Link_ProjectUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ExerciseMetrics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExerciseMetrics
        [IPSModel.Store.ExerciseMetrics](T1.ExerciseMetrics_Id, T1.ExerciseMetrics_Name)
    FROM (
        SELECT 
            T.Id AS ExerciseMetrics_Id, 
            T.Name AS ExerciseMetrics_Name, 
            True AS _from0
        FROM IPSData.ExerciseMetrics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_Training_NotificationType_NotificationInterval.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_Training_NotificationType_NotificationInterval
        [IPSModel.Store.Link_Training_NotificationType_NotificationInterval](T1.[Link_Training_NotificationType_NotificationInterval.TrainingId], T1.[Link_Training_NotificationType_NotificationInterval.NotificationTypeId], T1.[Link_Training_NotificationType_NotificationInterval.NotificationIntervalId])
    FROM (
        SELECT 
            T.TrainingId AS [Link_Training_NotificationType_NotificationInterval.TrainingId], 
            T.NotificationTypeId AS [Link_Training_NotificationType_NotificationInterval.NotificationTypeId], 
            T.NotificationIntervalId AS [Link_Training_NotificationType_NotificationInterval.NotificationIntervalId], 
            True AS _from0
        FROM IPSData.Link_Training_NotificationType_NotificationInterval AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.NotificationIntervals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationIntervals
        [IPSModel.Store.NotificationIntervals](T1.NotificationIntervals_NotificationIntervalId, T1.NotificationIntervals_Name)
    FROM (
        SELECT 
            T.NotificationIntervalId AS NotificationIntervals_NotificationIntervalId, 
            T.Name AS NotificationIntervals_Name, 
            True AS _from0
        FROM IPSData.NotificationIntervals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.NotificationTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationTypes
        [IPSModel.Store.NotificationTypes](T1.NotificationTypes_NotificationTypeId, T1.NotificationTypes_Name)
    FROM (
        SELECT 
            T.NotificationTypeId AS NotificationTypes_NotificationTypeId, 
            T.Name AS NotificationTypes_Name, 
            True AS _from0
        FROM IPSData.NotificationTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.CmsPages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CmsPages
        [IPSModel.Store.CmsPages](T1.CmsPages_PageID, T1.CmsPages_Title, T1.CmsPages_MetaTitle, T1.CmsPages_MetaKeyWord, T1.CmsPages_MetaDescription, T1.CmsPages_Heading, T1.CmsPages_Description, T1.CmsPages_PageContent, T1.CmsPages_LanguageID, T1.CmsPages_PageAccessCode)
    FROM (
        SELECT 
            T.PageID AS CmsPages_PageID, 
            T.Title AS CmsPages_Title, 
            T.MetaTitle AS CmsPages_MetaTitle, 
            T.MetaKeyWord AS CmsPages_MetaKeyWord, 
            T.MetaDescription AS CmsPages_MetaDescription, 
            T.Heading AS CmsPages_Heading, 
            T.Description AS CmsPages_Description, 
            T.PageContent AS CmsPages_PageContent, 
            T.LanguageID AS CmsPages_LanguageID, 
            T.PageAccessCode AS CmsPages_PageAccessCode, 
            True AS _from0
        FROM IPSData.CmsPages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IpsPlanRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsPlanRoles
        [IPSModel.Store.IpsPlanRoles](T1.IpsPlanRoles_PlanRoleID, T1.IpsPlanRoles_PlanID, T1.IpsPlanRoles_RoleID, T1.IpsPlanRoles_NoOfPersonAllowed, T1.IpsPlanRoles_IsDeleted)
    FROM (
        SELECT 
            T.PlanRoleID AS IpsPlanRoles_PlanRoleID, 
            T.PlanID AS IpsPlanRoles_PlanID, 
            T.RoleID AS IpsPlanRoles_RoleID, 
            T.NoOfPersonAllowed AS IpsPlanRoles_NoOfPersonAllowed, 
            T.IsDeleted AS IpsPlanRoles_IsDeleted, 
            True AS _from0
        FROM IPSData.IpsPlanRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IpsPlans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsPlans
        [IPSModel.Store.IpsPlans](T1.IpsPlans_PlanID, T1.IpsPlans_PlanType, T1.IpsPlans_Name, T1.IpsPlans_Description, T1.IpsPlans_MonthlyPrice, T1.IpsPlans_AnualPrice, T1.IpsPlans_CreatedDate, T1.IpsPlans_CreatedBy, T1.IpsPlans_IsDeleted)
    FROM (
        SELECT 
            T.PlanID AS IpsPlans_PlanID, 
            T.PlanType AS IpsPlans_PlanType, 
            T.Name AS IpsPlans_Name, 
            T.Description AS IpsPlans_Description, 
            T.MonthlyPrice AS IpsPlans_MonthlyPrice, 
            T.AnualPrice AS IpsPlans_AnualPrice, 
            T.CreatedDate AS IpsPlans_CreatedDate, 
            T.CreatedBy AS IpsPlans_CreatedBy, 
            T.IsDeleted AS IpsPlans_IsDeleted, 
            True AS _from0
        FROM IPSData.IpsPlans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IPSPlanFields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSPlanFields
        [IPSModel.Store.IPSPlanFields](T1.IPSPlanFields_IpsPlanLabelID, T1.IPSPlanFields_PlanTypeID, T1.IPSPlanFields_PlanLabelID)
    FROM (
        SELECT 
            T.IpsPlanLabelID AS IPSPlanFields_IpsPlanLabelID, 
            T.PlanTypeID AS IPSPlanFields_PlanTypeID, 
            T.PlanLabelID AS IPSPlanFields_PlanLabelID, 
            True AS _from0
        FROM IPSData.IPSPlanFields AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IPSPlanFieldsLookup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSPlanFieldsLookup
        [IPSModel.Store.IPSPlanFieldsLookup](T1.IPSPlanFieldsLookup_PlanFieldMappingID, T1.IPSPlanFieldsLookup_IpsPlanLabelID, T1.IPSPlanFieldsLookup_LabelText, T1.IPSPlanFieldsLookup_LanguageID)
    FROM (
        SELECT 
            T.PlanFieldMappingID AS IPSPlanFieldsLookup_PlanFieldMappingID, 
            T.IpsPlanLabelID AS IPSPlanFieldsLookup_IpsPlanLabelID, 
            T.LabelText AS IPSPlanFieldsLookup_LabelText, 
            T.LanguageID AS IPSPlanFieldsLookup_LanguageID, 
            True AS _from0
        FROM IPSData.IPSPlanFieldsLookups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IPSPlanFeatures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSPlanFeatures
        [IPSModel.Store.IPSPlanFeatures](T1.IPSPlanFeatures_IpsPlanFeatureID, T1.IPSPlanFeatures_PlanID, T1.IPSPlanFeatures_PlanTypeID, T1.IPSPlanFeatures_PlanFieldID, T1.IPSPlanFeatures_Value, T1.IPSPlanFeatures_IsDeleted)
    FROM (
        SELECT 
            T.IpsPlanFeatureID AS IPSPlanFeatures_IpsPlanFeatureID, 
            T.PlanID AS IPSPlanFeatures_PlanID, 
            T.PlanTypeID AS IPSPlanFeatures_PlanTypeID, 
            T.PlanFieldID AS IPSPlanFeatures_PlanFieldID, 
            T.[Value] AS IPSPlanFeatures_Value, 
            T.IsDeleted AS IPSPlanFeatures_IsDeleted, 
            True AS _from0
        FROM IPSData.IPSPlanFeatures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ScaleRanges.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScaleRanges
        [IPSModel.Store.ScaleRanges](T1.ScaleRanges_Id, T1.ScaleRanges_ScaleId, T1.ScaleRanges_Min, T1.ScaleRanges_Max, T1.ScaleRanges_Description, T1.ScaleRanges_Color)
    FROM (
        SELECT 
            T.Id AS ScaleRanges_Id, 
            T.ScaleId AS ScaleRanges_ScaleId, 
            T.Min AS ScaleRanges_Min, 
            T.Max AS ScaleRanges_Max, 
            T.Description AS ScaleRanges_Description, 
            T.Color AS ScaleRanges_Color, 
            True AS _from0
        FROM IPSData.ScaleRanges AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.PlanFeaturesKeys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PlanFeaturesKeys
        [IPSModel.Store.PlanFeaturesKeys](T1.PlanFeaturesKeys_PlanFeatureID, T1.PlanFeaturesKeys_Description, T1.PlanFeaturesKeys_CategoryID, T1.PlanFeaturesKeys_LanguageID, T1.PlanFeaturesKeys_IsDeleted)
    FROM (
        SELECT 
            T.PlanFeatureID AS PlanFeaturesKeys_PlanFeatureID, 
            T.Description AS PlanFeaturesKeys_Description, 
            T.CategoryID AS PlanFeaturesKeys_CategoryID, 
            T.LanguageID AS PlanFeaturesKeys_LanguageID, 
            T.IsDeleted AS PlanFeaturesKeys_IsDeleted, 
            True AS _from0
        FROM IPSData.PlanFeaturesKeys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.PossibleAnswers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PossibleAnswers
        [IPSModel.Store.PossibleAnswers](T1.PossibleAnswers_QuestionId, T1.PossibleAnswers_Answer)
    FROM (
        SELECT 
            T.QuestionId AS PossibleAnswers_QuestionId, 
            T.Answer AS PossibleAnswers_Answer, 
            True AS _from0
        FROM IPSData.PossibleAnswers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.StagesEvolution.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StagesEvolution
        [IPSModel.Store.StagesEvolution](T1.StagesEvolution_Id, T1.StagesEvolution_OriginalStageId, T1.StagesEvolution_ParentStageEvolutionId, T1.StagesEvolution_Name, T1.StagesEvolution_StartDate, T1.StagesEvolution_DueDate, T1.StagesEvolution_ParticipantId)
    FROM (
        SELECT 
            T.Id AS StagesEvolution_Id, 
            T.OriginalStageId AS StagesEvolution_OriginalStageId, 
            T.ParentStageEvolutionId AS StagesEvolution_ParentStageEvolutionId, 
            T.Name AS StagesEvolution_Name, 
            T.StartDate AS StagesEvolution_StartDate, 
            T.DueDate AS StagesEvolution_DueDate, 
            T.ParticipantId AS StagesEvolution_ParticipantId, 
            True AS _from0
        FROM IPSData.StagesEvolutions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.StagesEvolutionQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StagesEvolutionQuestions
        [IPSModel.Store.StagesEvolutionQuestions](T1.StagesEvolutionQuestions_Id, T1.StagesEvolutionQuestions_StageEvolutionId, T1.StagesEvolutionQuestions_QuestionId)
    FROM (
        SELECT 
            T.Id AS StagesEvolutionQuestions_Id, 
            T.StageEvolutionId AS StagesEvolutionQuestions_StageEvolutionId, 
            T.QuestionId AS StagesEvolutionQuestions_QuestionId, 
            True AS _from0
        FROM IPSData.StagesEvolutionQuestions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.SurveyResults.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SurveyResults
        [IPSModel.Store.SurveyResults](T1.SurveyResults_Id, T1.SurveyResults_ParticipantId, T1.SurveyResults_StageId, T1.SurveyResults_TimeSpent, T1.SurveyResults_StageEvolutionId)
    FROM (
        SELECT 
            T.Id AS SurveyResults_Id, 
            T.ParticipantId AS SurveyResults_ParticipantId, 
            T.StageId AS SurveyResults_StageId, 
            T.TimeSpent AS SurveyResults_TimeSpent, 
            T.StageEvolutionId AS SurveyResults_StageEvolutionId, 
            True AS _from0
        FROM IPSData.SurveyResults AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.EvaluationStatuses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationStatuses
        [IPSModel.Store.EvaluationStatuses](T1.EvaluationStatuses_StageId, T1.EvaluationStatuses_ParticipantId, T1.EvaluationStatuses_StartedAt, T1.EvaluationStatuses_EndedAt, T1.EvaluationStatuses_DurationMinutes, T1.EvaluationStatuses_InvitedAt, T1.EvaluationStatuses_RemindAt, T1.EvaluationStatuses_IsOpen, T1.EvaluationStatuses_StageEvolutionId, T1.EvaluationStatuses_Id)
    FROM (
        SELECT 
            T.StageId AS EvaluationStatuses_StageId, 
            T.ParticipantId AS EvaluationStatuses_ParticipantId, 
            T.StartedAt AS EvaluationStatuses_StartedAt, 
            T.EndedAt AS EvaluationStatuses_EndedAt, 
            T.DurationMinutes AS EvaluationStatuses_DurationMinutes, 
            T.InvitedAt AS EvaluationStatuses_InvitedAt, 
            T.RemindAt AS EvaluationStatuses_RemindAt, 
            T.IsOpen AS EvaluationStatuses_IsOpen, 
            T.StageEvolutionId AS EvaluationStatuses_StageEvolutionId, 
            T.Id AS EvaluationStatuses_Id, 
            True AS _from0
        FROM IPSData.EvaluationStatuses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Documents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Documents
        [IPSModel.Store.Documents](T1.Documents_Id, T1.Documents_Title, T1.Documents_Extension, T1.Documents_ResourceType)
    FROM (
        SELECT 
            T.Id AS Documents_Id, 
            T.Title AS Documents_Title, 
            T.Extension AS Documents_Extension, 
            T.ResourceType AS Documents_ResourceType, 
            True AS _from0
        FROM IPSData.Documents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.QuestionMaterials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionMaterials
        [IPSModel.Store.QuestionMaterials](T1.QuestionMaterials_QuestionId, T1.QuestionMaterials_DocumentId, T1.QuestionMaterials_MaterialType, T1.QuestionMaterials_Link)
    FROM (
        SELECT 
            T.QuestionId AS QuestionMaterials_QuestionId, 
            T.DocumentId AS QuestionMaterials_DocumentId, 
            T.MaterialType AS QuestionMaterials_MaterialType, 
            T.Link AS QuestionMaterials_Link, 
            True AS _from0
        FROM IPSData.QuestionMaterials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.SurveyAnswers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SurveyAnswers
        [IPSModel.Store.SurveyAnswers](T1.SurveyAnswers_Id, T1.SurveyAnswers_SurveyResultId, T1.SurveyAnswers_QuestionId, T1.SurveyAnswers_IsCorrect, T1.SurveyAnswers_Answer, T1.SurveyAnswers_Comment, T1.SurveyAnswers_InDevContract)
    FROM (
        SELECT 
            T.Id AS SurveyAnswers_Id, 
            T.SurveyResultId AS SurveyAnswers_SurveyResultId, 
            T.QuestionId AS SurveyAnswers_QuestionId, 
            T.IsCorrect AS SurveyAnswers_IsCorrect, 
            T.Answer AS SurveyAnswers_Answer, 
            T.Comment AS SurveyAnswers_Comment, 
            T.InDevContract AS SurveyAnswers_InDevContract, 
            True AS _from0
        FROM IPSData.SurveyAnswers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskScaleRanges.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskScaleRanges
        [IPSModel.Store.TaskScaleRanges](T1.TaskScaleRanges_Id, T1.TaskScaleRanges_TaskScalesId, T1.TaskScaleRanges_Min, T1.TaskScaleRanges_Max, T1.TaskScaleRanges_Description, T1.TaskScaleRanges_Color)
    FROM (
        SELECT 
            T.Id AS TaskScaleRanges_Id, 
            T.TaskScalesId AS TaskScaleRanges_TaskScalesId, 
            T.Min AS TaskScaleRanges_Min, 
            T.Max AS TaskScaleRanges_Max, 
            T.Description AS TaskScaleRanges_Description, 
            T.Color AS TaskScaleRanges_Color, 
            True AS _from0
        FROM IPSData.TaskScaleRanges AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskScales.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskScales
        [IPSModel.Store.TaskScales](T1.TaskScales_Id, T1.TaskScales_Name, T1.TaskScales_Description, T1.TaskScales_OrganizationId, T1.TaskScales_DepartmentId, T1.TaskScales_TeamId, T1.TaskScales_UserId, T1.TaskScales_ScaleStart, T1.TaskScales_ScaleEnd, T1.TaskScales_ScaleInterval)
    FROM (
        SELECT 
            T.Id AS TaskScales_Id, 
            T.Name AS TaskScales_Name, 
            T.Description AS TaskScales_Description, 
            T.OrganizationId AS TaskScales_OrganizationId, 
            T.DepartmentId AS TaskScales_DepartmentId, 
            T.TeamId AS TaskScales_TeamId, 
            T.UserId AS TaskScales_UserId, 
            T.ScaleStart AS TaskScales_ScaleStart, 
            T.ScaleEnd AS TaskScales_ScaleEnd, 
            T.ScaleInterval AS TaskScales_ScaleInterval, 
            True AS _from0
        FROM IPSData.TaskScales AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TrainingMaterialRatings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingMaterialRatings
        [IPSModel.Store.TrainingMaterialRatings](T1.TrainingMaterialRatings_Id, T1.TrainingMaterialRatings_TrainingMaterialId, T1.TrainingMaterialRatings_Rating, T1.TrainingMaterialRatings_RatingBy, T1.TrainingMaterialRatings_RatingSubmitDate)
    FROM (
        SELECT 
            T.Id AS TrainingMaterialRatings_Id, 
            T.TrainingMaterialId AS TrainingMaterialRatings_TrainingMaterialId, 
            T.Rating AS TrainingMaterialRatings_Rating, 
            T.RatingBy AS TrainingMaterialRatings_RatingBy, 
            T.RatingSubmitDate AS TrainingMaterialRatings_RatingSubmitDate, 
            True AS _from0
        FROM IPSData.TrainingMaterialRatings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TaskActivity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView72()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskActivity
        [IPSModel.Store.TaskActivity](T1.TaskActivity_Id, T1.TaskActivity_TaskId, T1.TaskActivity_RecurrenceStartTime, T1.TaskActivity_RecurrenceEndTime, T1.TaskActivity_RecurrencesRule, T1.TaskActivity_ActivityDateTime)
    FROM (
        SELECT 
            T.Id AS TaskActivity_Id, 
            T.TaskId AS TaskActivity_TaskId, 
            T.RecurrenceStartTime AS TaskActivity_RecurrenceStartTime, 
            T.RecurrenceEndTime AS TaskActivity_RecurrenceEndTime, 
            T.RecurrencesRule AS TaskActivity_RecurrencesRule, 
            T.ActivityDateTime AS TaskActivity_ActivityDateTime, 
            True AS _from0
        FROM IPSData.TaskActivities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProjectRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView73()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectRoles
        [IPSModel.Store.ProjectRoles](T1.ProjectRoles_Id, T1.ProjectRoles_Name, T1.ProjectRoles_Description)
    FROM (
        SELECT 
            T.Id AS ProjectRoles_Id, 
            T.Name AS ProjectRoles_Name, 
            T.Description AS ProjectRoles_Description, 
            True AS _from0
        FROM IPSData.ProjectRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProjectGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView74()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectGoals
        [IPSModel.Store.ProjectGoals](T1.ProjectGoals_Id, T1.ProjectGoals_Goal, T1.ProjectGoals_Strategy, T1.ProjectGoals_ProjectId)
    FROM (
        SELECT 
            T.Id AS ProjectGoals_Id, 
            T.Goal AS ProjectGoals_Goal, 
            T.Strategy AS ProjectGoals_Strategy, 
            T.ProjectId AS ProjectGoals_ProjectId, 
            True AS _from0
        FROM IPSData.ProjectGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProjectSteeringGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView75()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectSteeringGroups
        [IPSModel.Store.ProjectSteeringGroups](T1.ProjectSteeringGroups_Id, T1.ProjectSteeringGroups_Name, T1.ProjectSteeringGroups_ProjectId, T1.ProjectSteeringGroups_OrganizationId, T1.ProjectSteeringGroups_RoleId)
    FROM (
        SELECT 
            T.Id AS ProjectSteeringGroups_Id, 
            T.Name AS ProjectSteeringGroups_Name, 
            T.ProjectId AS ProjectSteeringGroups_ProjectId, 
            T.OrganizationId AS ProjectSteeringGroups_OrganizationId, 
            T.RoleId AS ProjectSteeringGroups_RoleId, 
            True AS _from0
        FROM IPSData.ProjectSteeringGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Tags.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView76()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tags
        [IPSModel.Store.Tags](T1.Tags_Id, T1.Tags_Name, T1.Tags_OrganizationId)
    FROM (
        SELECT 
            T.Id AS Tags_Id, 
            T.Name AS Tags_Name, 
            T.OrganizationId AS Tags_OrganizationId, 
            True AS _from0
        FROM IPSData.Tags AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_ProfileTags.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView77()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProfileTags
        [IPSModel.Store.Link_ProfileTags](T1.[Link_ProfileTags.Id], T1.[Link_ProfileTags.ProfileId], T1.[Link_ProfileTags.TagId])
    FROM (
        SELECT 
            T.Id AS [Link_ProfileTags.Id], 
            T.ProfileId AS [Link_ProfileTags.ProfileId], 
            T.TagId AS [Link_ProfileTags.TagId], 
            True AS _from0
        FROM IPSData.Link_ProfileTags AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProjectGlobalSettings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView78()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectGlobalSettings
        [IPSModel.Store.ProjectGlobalSettings](T1.ProjectGlobalSettings_Id, T1.ProjectGlobalSettings_ProjectId, T1.ProjectGlobalSettings_SoftProfileActualTimeSpan, T1.ProjectGlobalSettings_SoftProfileMonthSpan, T1.ProjectGlobalSettings_SoftProfileWeekSpan, T1.ProjectGlobalSettings_SoftProfileDaySpan, T1.ProjectGlobalSettings_SoftProfileHourSpan, T1.ProjectGlobalSettings_SoftProfileMinuteSpan, T1.ProjectGlobalSettings_KnowledgeProfileActualTimeSpan, T1.ProjectGlobalSettings_KnowledgeProfileMonthSpan, T1.ProjectGlobalSettings_KnowledgeProfileWeekSpan, T1.ProjectGlobalSettings_KnowledgeProfileDaySpan, T1.ProjectGlobalSettings_KnowledgeProfileHourSpan, T1.ProjectGlobalSettings_KnowledgeProfileMinuteSpan, T1.ProjectGlobalSettings_SoftProfileStartExternalStartNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileExternalStartNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileTrainerStartNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileExternalCompletedNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileExternalResultsNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileTrainerResultsNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileGreenAlarmParticipantTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileGreenAlarmManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileGreenAlarmTrainerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileYellowAlarmParticipantTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileYellowAlarmManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileYellowAlarmTrainerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileRedAlarmParticipantTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileRedAlarmManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileRedAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileRecurrentTrainingTimeSpan, T1.ProjectGlobalSettings_KnowledgeProfileRecurrentTrainingTimeSpan, T1.ProjectGlobalSettings_SoftProfileStartEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartTrainerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartExternalCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartExternalResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartTrainerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartGreenAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileStartGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileStartGreenAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartGreenAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartYellowAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileStartYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileStartYellowAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartYellowAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartRedAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileStartRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileStartRedAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartRedAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartEmailNotification, T1.ProjectGlobalSettings_SoftProfileStartSmsNotification, T1.ProjectGlobalSettings_SoftProfileShortGoalEmailNotification, T1.ProjectGlobalSettings_SoftProfileShortGoalSmsNotification, T1.ProjectGlobalSettings_SoftProfileMidGoalEmailNotification, T1.ProjectGlobalSettings_SoftProfileMidGoalSmsNotification, T1.ProjectGlobalSettings_SoftProfileLongTermGoalEmailNotification, T1.ProjectGlobalSettings_SoftProfileLongTermGoalSmsNotification, T1.ProjectGlobalSettings_SoftProfileFinalTermGoalEmailNotification, T1.ProjectGlobalSettings_SoftProfileFinalTermGoalSmsNotification, T1.ProjectGlobalSettings_KnowledgeProfileEmailNotification, T1.ProjectGlobalSettings_KnowledgeProfileSmsNotification, T1.ProjectGlobalSettings_SoftProfileHowMany, T1.ProjectGlobalSettings_SoftProfileMetricId, T1.ProjectGlobalSettings_SoftProfileHowManySets, T1.ProjectGlobalSettings_SoftProfileHowManyActions, T1.ProjectGlobalSettings_KnowledgeProfileHowMany, T1.ProjectGlobalSettings_KnowledgeProfileMetricId, T1.ProjectGlobalSettings_KnowledgeProfileHowManySets, T1.ProjectGlobalSettings_KnowledgeProfileHowManyActions, T1.ProjectGlobalSettings_SoftProfilePersonalTrainingReminderNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileProfileTrainingReminderNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfilePersonalTrainingReminderNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileProfileTrainingReminderNotificationTemplateId, T1.ProjectGlobalSettings_StartStageStartDate, T1.ProjectGlobalSettings_StartStageEndDate, T1.ProjectGlobalSettings_ShortGoalStartDate, T1.ProjectGlobalSettings_ShortGoalEndDate, T1.ProjectGlobalSettings_MidGoalStartDate, T1.ProjectGlobalSettings_MidGoalEndDate, T1.ProjectGlobalSettings_LongTermGoalStartDate, T1.ProjectGlobalSettings_LongTermGoalEndDate, T1.ProjectGlobalSettings_FinalGoalStartDate, T1.ProjectGlobalSettings_FinalGoalEndDate, T1.ProjectGlobalSettings_KnowledgeProfileStartDate, T1.ProjectGlobalSettings_KnowledgeProfileEndDate, T1.ProjectGlobalSettings_TrainerId, T1.ProjectGlobalSettings_ManagerId, T1.ProjectGlobalSettings_SoftProfileStartGreenAlarmTime, T1.ProjectGlobalSettings_SoftProfileStartYellowAlarmTime, T1.ProjectGlobalSettings_SoftProfileStartRedAlarmTime, T1.ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmTime, T1.ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmTime, T1.ProjectGlobalSettings_SoftProfileShortGoalRedAlarmTime, T1.ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmTime, T1.ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmTime, T1.ProjectGlobalSettings_SoftProfileMidGoalRedAlarmTime, T1.ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmTime, T1.ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmTime, T1.ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmTime, T1.ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmTime, T1.ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmTime, T1.ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmTime, T1.ProjectGlobalSettings_KnowledgeProfileGreenAlarmTime, T1.ProjectGlobalSettings_KnowledgeProfileYellowAlarmTime, T1.ProjectGlobalSettings_KnowledgeProfileRedAlarmTime, T1.ProjectGlobalSettings_KnowledgeProfileProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_KnowledgeProfileRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileStartGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileStartRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileShortGoalRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileMidGoalRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmFinalScoreManagerTemplateId)
    FROM (
        SELECT 
            T.Id AS ProjectGlobalSettings_Id, 
            T.ProjectId AS ProjectGlobalSettings_ProjectId, 
            T.SoftProfileActualTimeSpan AS ProjectGlobalSettings_SoftProfileActualTimeSpan, 
            T.SoftProfileMonthSpan AS ProjectGlobalSettings_SoftProfileMonthSpan, 
            T.SoftProfileWeekSpan AS ProjectGlobalSettings_SoftProfileWeekSpan, 
            T.SoftProfileDaySpan AS ProjectGlobalSettings_SoftProfileDaySpan, 
            T.SoftProfileHourSpan AS ProjectGlobalSettings_SoftProfileHourSpan, 
            T.SoftProfileMinuteSpan AS ProjectGlobalSettings_SoftProfileMinuteSpan, 
            T.KnowledgeProfileActualTimeSpan AS ProjectGlobalSettings_KnowledgeProfileActualTimeSpan, 
            T.KnowledgeProfileMonthSpan AS ProjectGlobalSettings_KnowledgeProfileMonthSpan, 
            T.KnowledgeProfileWeekSpan AS ProjectGlobalSettings_KnowledgeProfileWeekSpan, 
            T.KnowledgeProfileDaySpan AS ProjectGlobalSettings_KnowledgeProfileDaySpan, 
            T.KnowledgeProfileHourSpan AS ProjectGlobalSettings_KnowledgeProfileHourSpan, 
            T.KnowledgeProfileMinuteSpan AS ProjectGlobalSettings_KnowledgeProfileMinuteSpan, 
            T.SoftProfileStartExternalStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartExternalStartNotificationTemplateId, 
            T.KnowledgeProfileExternalStartNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileExternalStartNotificationTemplateId, 
            T.KnowledgeProfileEvaluatorStartNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileEvaluatorStartNotificationTemplateId, 
            T.KnowledgeProfileTrainerStartNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileTrainerStartNotificationTemplateId, 
            T.KnowledgeProfileManagerStartNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileManagerStartNotificationTemplateId, 
            T.KnowledgeProfileExternalCompletedNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileExternalCompletedNotificationTemplateId, 
            T.KnowledgeProfileEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileEvaluatorCompletedNotificationTemplateId, 
            T.KnowledgeProfileTrainerCompletedNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileTrainerCompletedNotificationTemplateId, 
            T.KnowledgeProfileManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileManagerCompletedNotificationTemplateId, 
            T.KnowledgeProfileExternalResultsNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileExternalResultsNotificationTemplateId, 
            T.KnowledgeProfileEvaluatorResultsNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileEvaluatorResultsNotificationTemplateId, 
            T.KnowledgeProfileTrainerResultsNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileTrainerResultsNotificationTemplateId, 
            T.KnowledgeProfileManagerResultsNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileManagerResultsNotificationTemplateId, 
            T.KnowledgeProfileGreenAlarmParticipantTemplateId AS ProjectGlobalSettings_KnowledgeProfileGreenAlarmParticipantTemplateId, 
            T.KnowledgeProfileGreenAlarmEvaluatorTemplateId AS ProjectGlobalSettings_KnowledgeProfileGreenAlarmEvaluatorTemplateId, 
            T.KnowledgeProfileGreenAlarmManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileGreenAlarmManagerTemplateId, 
            T.KnowledgeProfileGreenAlarmTrainerTemplateId AS ProjectGlobalSettings_KnowledgeProfileGreenAlarmTrainerTemplateId, 
            T.KnowledgeProfileYellowAlarmParticipantTemplateId AS ProjectGlobalSettings_KnowledgeProfileYellowAlarmParticipantTemplateId, 
            T.KnowledgeProfileYellowAlarmEvaluatorTemplateId AS ProjectGlobalSettings_KnowledgeProfileYellowAlarmEvaluatorTemplateId, 
            T.KnowledgeProfileYellowAlarmManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileYellowAlarmManagerTemplateId, 
            T.KnowledgeProfileYellowAlarmTrainerTemplateId AS ProjectGlobalSettings_KnowledgeProfileYellowAlarmTrainerTemplateId, 
            T.KnowledgeProfileRedAlarmParticipantTemplateId AS ProjectGlobalSettings_KnowledgeProfileRedAlarmParticipantTemplateId, 
            T.KnowledgeProfileRedAlarmEvaluatorTemplateId AS ProjectGlobalSettings_KnowledgeProfileRedAlarmEvaluatorTemplateId, 
            T.KnowledgeProfileRedAlarmManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileRedAlarmManagerTemplateId, 
            T.KnowledgeProfileRedAlarmTrainerTemplateId AS ProjectGlobalSettings_KnowledgeProfileRedAlarmTrainerTemplateId, 
            T.SoftProfileRecurrentTrainingTimeSpan AS ProjectGlobalSettings_SoftProfileRecurrentTrainingTimeSpan, 
            T.KnowledgeProfileRecurrentTrainingTimeSpan AS ProjectGlobalSettings_KnowledgeProfileRecurrentTrainingTimeSpan, 
            T.SoftProfileStartEvaluatorStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartEvaluatorStartNotificationTemplateId, 
            T.SoftProfileStartTrainerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartTrainerStartNotificationTemplateId, 
            T.SoftProfileStartManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartManagerStartNotificationTemplateId, 
            T.SoftProfileStartExternalCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartExternalCompletedNotificationTemplateId, 
            T.SoftProfileStartEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileStartTrainerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartTrainerCompletedNotificationTemplateId, 
            T.SoftProfileStartManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartManagerCompletedNotificationTemplateId, 
            T.SoftProfileStartExternalResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartExternalResultsNotificationTemplateId, 
            T.SoftProfileStartEvaluatorResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileStartTrainerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartTrainerResultsNotificationTemplateId, 
            T.SoftProfileStartManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartManagerResultsNotificationTemplateId, 
            T.SoftProfileStartGreenAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileStartGreenAlarmParticipantTemplateId, 
            T.SoftProfileStartGreenAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileStartGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileStartGreenAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartGreenAlarmManagerTemplateId, 
            T.SoftProfileStartGreenAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileStartGreenAlarmTrainerTemplateId, 
            T.SoftProfileStartYellowAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileStartYellowAlarmParticipantTemplateId, 
            T.SoftProfileStartYellowAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileStartYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileStartYellowAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartYellowAlarmManagerTemplateId, 
            T.SoftProfileStartYellowAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileStartYellowAlarmTrainerTemplateId, 
            T.SoftProfileStartRedAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileStartRedAlarmParticipantTemplateId, 
            T.SoftProfileStartRedAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileStartRedAlarmEvaluatorTemplateId, 
            T.SoftProfileStartRedAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartRedAlarmManagerTemplateId, 
            T.SoftProfileStartRedAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileStartRedAlarmTrainerTemplateId, 
            T.SoftProfileShortGoalExternalStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalExternalStartNotificationTemplateId, 
            T.SoftProfileShortGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileShortGoalTrainerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileShortGoalManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalManagerStartNotificationTemplateId, 
            T.SoftProfileShortGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalExternalResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileShortGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileShortGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileShortGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileShortGoalGreenAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileShortGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileShortGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileShortGoalYellowAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileShortGoalRedAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileShortGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileShortGoalRedAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalRedAlarmManagerTemplateId, 
            T.SoftProfileShortGoalRedAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileMidGoalExternalStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalExternalStartNotificationTemplateId, 
            T.SoftProfileMidGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileMidGoalTrainerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileMidGoalManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalManagerStartNotificationTemplateId, 
            T.SoftProfileMidGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalExternalResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileMidGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileMidGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileMidGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileMidGoalGreenAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileMidGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileMidGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileMidGoalYellowAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileMidGoalRedAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileMidGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileMidGoalRedAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalRedAlarmManagerTemplateId, 
            T.SoftProfileMidGoalRedAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileLongTermGoalExternalStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalExternalStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalTrainerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalManagerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalExternalResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmManagerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileFinalGoalExternalStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalExternalStartNotificationTemplateId, 
            T.SoftProfileFinalGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileFinalGoalTrainerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalManagerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalExternalResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmParticipantTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileFinalGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileFinalGoalRedAlarmManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmManagerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmTrainerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileStartEmailNotification AS ProjectGlobalSettings_SoftProfileStartEmailNotification, 
            T.SoftProfileStartSmsNotification AS ProjectGlobalSettings_SoftProfileStartSmsNotification, 
            T.SoftProfileShortGoalEmailNotification AS ProjectGlobalSettings_SoftProfileShortGoalEmailNotification, 
            T.SoftProfileShortGoalSmsNotification AS ProjectGlobalSettings_SoftProfileShortGoalSmsNotification, 
            T.SoftProfileMidGoalEmailNotification AS ProjectGlobalSettings_SoftProfileMidGoalEmailNotification, 
            T.SoftProfileMidGoalSmsNotification AS ProjectGlobalSettings_SoftProfileMidGoalSmsNotification, 
            T.SoftProfileLongTermGoalEmailNotification AS ProjectGlobalSettings_SoftProfileLongTermGoalEmailNotification, 
            T.SoftProfileLongTermGoalSmsNotification AS ProjectGlobalSettings_SoftProfileLongTermGoalSmsNotification, 
            T.SoftProfileFinalTermGoalEmailNotification AS ProjectGlobalSettings_SoftProfileFinalTermGoalEmailNotification, 
            T.SoftProfileFinalTermGoalSmsNotification AS ProjectGlobalSettings_SoftProfileFinalTermGoalSmsNotification, 
            T.KnowledgeProfileEmailNotification AS ProjectGlobalSettings_KnowledgeProfileEmailNotification, 
            T.KnowledgeProfileSmsNotification AS ProjectGlobalSettings_KnowledgeProfileSmsNotification, 
            T.SoftProfileHowMany AS ProjectGlobalSettings_SoftProfileHowMany, 
            T.SoftProfileMetricId AS ProjectGlobalSettings_SoftProfileMetricId, 
            T.SoftProfileHowManySets AS ProjectGlobalSettings_SoftProfileHowManySets, 
            T.SoftProfileHowManyActions AS ProjectGlobalSettings_SoftProfileHowManyActions, 
            T.KnowledgeProfileHowMany AS ProjectGlobalSettings_KnowledgeProfileHowMany, 
            T.KnowledgeProfileMetricId AS ProjectGlobalSettings_KnowledgeProfileMetricId, 
            T.KnowledgeProfileHowManySets AS ProjectGlobalSettings_KnowledgeProfileHowManySets, 
            T.KnowledgeProfileHowManyActions AS ProjectGlobalSettings_KnowledgeProfileHowManyActions, 
            T.SoftProfilePersonalTrainingReminderNotificationTemplateId AS ProjectGlobalSettings_SoftProfilePersonalTrainingReminderNotificationTemplateId, 
            T.SoftProfileProfileTrainingReminderNotificationTemplateId AS ProjectGlobalSettings_SoftProfileProfileTrainingReminderNotificationTemplateId, 
            T.KnowledgeProfilePersonalTrainingReminderNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfilePersonalTrainingReminderNotificationTemplateId, 
            T.KnowledgeProfileProfileTrainingReminderNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileProfileTrainingReminderNotificationTemplateId, 
            T.StartStageStartDate AS ProjectGlobalSettings_StartStageStartDate, 
            T.StartStageEndDate AS ProjectGlobalSettings_StartStageEndDate, 
            T.ShortGoalStartDate AS ProjectGlobalSettings_ShortGoalStartDate, 
            T.ShortGoalEndDate AS ProjectGlobalSettings_ShortGoalEndDate, 
            T.MidGoalStartDate AS ProjectGlobalSettings_MidGoalStartDate, 
            T.MidGoalEndDate AS ProjectGlobalSettings_MidGoalEndDate, 
            T.LongTermGoalStartDate AS ProjectGlobalSettings_LongTermGoalStartDate, 
            T.LongTermGoalEndDate AS ProjectGlobalSettings_LongTermGoalEndDate, 
            T.FinalGoalStartDate AS ProjectGlobalSettings_FinalGoalStartDate, 
            T.FinalGoalEndDate AS ProjectGlobalSettings_FinalGoalEndDate, 
            T.KnowledgeProfileStartDate AS ProjectGlobalSettings_KnowledgeProfileStartDate, 
            T.KnowledgeProfileEndDate AS ProjectGlobalSettings_KnowledgeProfileEndDate, 
            T.TrainerId AS ProjectGlobalSettings_TrainerId, 
            T.ManagerId AS ProjectGlobalSettings_ManagerId, 
            T.SoftProfileStartGreenAlarmTime AS ProjectGlobalSettings_SoftProfileStartGreenAlarmTime, 
            T.SoftProfileStartYellowAlarmTime AS ProjectGlobalSettings_SoftProfileStartYellowAlarmTime, 
            T.SoftProfileStartRedAlarmTime AS ProjectGlobalSettings_SoftProfileStartRedAlarmTime, 
            T.SoftProfileShortGoalGreenAlarmTime AS ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmTime, 
            T.SoftProfileShortGoalYellowAlarmTime AS ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmTime, 
            T.SoftProfileShortGoalRedAlarmTime AS ProjectGlobalSettings_SoftProfileShortGoalRedAlarmTime, 
            T.SoftProfileMidGoalGreenAlarmTime AS ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmTime, 
            T.SoftProfileMidGoalYellowAlarmTime AS ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmTime, 
            T.SoftProfileMidGoalRedAlarmTime AS ProjectGlobalSettings_SoftProfileMidGoalRedAlarmTime, 
            T.SoftProfileLongTermGoalGreenAlarmTime AS ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmTime, 
            T.SoftProfileLongTermGoalYellowAlarmTime AS ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmTime, 
            T.SoftProfileLongTermGoalRedAlarmTime AS ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmTime, 
            T.SoftProfileFinalGoalGreenAlarmTime AS ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmTime, 
            T.SoftProfileFinalGoalYellowAlarmTime AS ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmTime, 
            T.SoftProfileFinalGoalRedAlarmTime AS ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmTime, 
            T.KnowledgeProfileGreenAlarmTime AS ProjectGlobalSettings_KnowledgeProfileGreenAlarmTime, 
            T.KnowledgeProfileYellowAlarmTime AS ProjectGlobalSettings_KnowledgeProfileYellowAlarmTime, 
            T.KnowledgeProfileRedAlarmTime AS ProjectGlobalSettings_KnowledgeProfileRedAlarmTime, 
            T.KnowledgeProfileProjectManagerStartNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileProjectManagerStartNotificationTemplateId, 
            T.KnowledgeProfileFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileFinalScoreManagerStartNotificationTemplateId, 
            T.KnowledgeProfileProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileProjectManagerCompletedNotificationTemplateId, 
            T.KnowledgeProfileFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileFinalScoreManagerCompletedNotificationTemplateId, 
            T.KnowledgeProfileProjectManagerResultsNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileProjectManagerResultsNotificationTemplateId, 
            T.KnowledgeProfileFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSettings_KnowledgeProfileFinalScoreManagerResultsNotificationTemplateId, 
            T.KnowledgeProfileGreenAlarmProjectManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileGreenAlarmProjectManagerTemplateId, 
            T.KnowledgeProfileGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileGreenAlarmFinalScoreManagerTemplateId, 
            T.KnowledgeProfileYellowAlarmProjectManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileYellowAlarmProjectManagerTemplateId, 
            T.KnowledgeProfileYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileYellowAlarmFinalScoreManagerTemplateId, 
            T.KnowledgeProfileRedAlarmProjectManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileRedAlarmProjectManagerTemplateId, 
            T.KnowledgeProfileRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_KnowledgeProfileRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileStartProjectManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartProjectManagerStartNotificationTemplateId, 
            T.SoftProfileStartFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileStartProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileStartFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileStartProjectManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileStartFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileStartFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileStartGreenAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileStartGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileStartYellowAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileStartYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileStartRedAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartRedAlarmProjectManagerTemplateId, 
            T.SoftProfileStartRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileStartRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileShortGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileShortGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileShortGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileShortGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileShortGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileShortGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileShortGoalRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileMidGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileMidGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileMidGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileMidGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileMidGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileMidGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileMidGoalRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileLongTermGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileLongTermGoalRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileFinalGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSettings_SoftProfileFinalGoalRedAlarmFinalScoreManagerTemplateId, 
            True AS _from0
        FROM IPSData.ProjectGlobalSettings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.UserRecurrentNotificationSetting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView79()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserRecurrentNotificationSetting
        [IPSModel.Store.UserRecurrentNotificationSetting](T1.UserRecurrentNotificationSetting_Id, T1.UserRecurrentNotificationSetting_StageGroupId, T1.UserRecurrentNotificationSetting_StageId, T1.UserRecurrentNotificationSetting_UserId, T1.UserRecurrentNotificationSetting_EmailNotification, T1.UserRecurrentNotificationSetting_SMSNotification, T1.UserRecurrentNotificationSetting_GreenAlarmParticipantTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmTime, T1.UserRecurrentNotificationSetting_YellowAlarmParticipantTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmTime, T1.UserRecurrentNotificationSetting_RedAlarmParticipantTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmTime, T1.UserRecurrentNotificationSetting_ExternalStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_ExternalCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_ExternalResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_EvaluatorStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_EvaluatorCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_EvaluatorResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_TrainerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_TrainerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_TrainerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerId, T1.UserRecurrentNotificationSetting_TrainerId, T1.UserRecurrentNotificationSetting_InvitedAt, T1.UserRecurrentNotificationSetting_GreenAlarmEvaluatorTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmManagerTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmTrainerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmEvaluatorTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmManagerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmTrainerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmEvaluatorTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmManagerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmTrainerTemplateId, T1.UserRecurrentNotificationSetting_RecurrentTrainningFrequency, T1.UserRecurrentNotificationSetting_HowMany, T1.UserRecurrentNotificationSetting_MetricId, T1.UserRecurrentNotificationSetting_HowManyActions, T1.UserRecurrentNotificationSetting_HowManySet, T1.UserRecurrentNotificationSetting_PersonalTrainingReminderNotificationTemplateId, T1.UserRecurrentNotificationSetting_ProfileTrainingReminderNotificationTemplateId, T1.UserRecurrentNotificationSetting_CreatedAt, T1.UserRecurrentNotificationSetting_CreatedBy, T1.UserRecurrentNotificationSetting_ModifiedAt, T1.UserRecurrentNotificationSetting_ModifiedBy, T1.UserRecurrentNotificationSetting_ProjectManagerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_ProjectManagerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_ProjectManagerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_FinalScoreManagerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_FinalScoreManagerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_FinalScoreManagerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmProjectManagerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmProjectManagerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmProjectManagerTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmFinalScoreManagerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmFinalScoreManagerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmFinalScoreManagerTemplateId)
    FROM (
        SELECT 
            T.Id AS UserRecurrentNotificationSetting_Id, 
            T.StageGroupId AS UserRecurrentNotificationSetting_StageGroupId, 
            T.StageId AS UserRecurrentNotificationSetting_StageId, 
            T.UserId AS UserRecurrentNotificationSetting_UserId, 
            T.EmailNotification AS UserRecurrentNotificationSetting_EmailNotification, 
            T.SMSNotification AS UserRecurrentNotificationSetting_SMSNotification, 
            T.GreenAlarmParticipantTemplateId AS UserRecurrentNotificationSetting_GreenAlarmParticipantTemplateId, 
            T.GreenAlarmTime AS UserRecurrentNotificationSetting_GreenAlarmTime, 
            T.YellowAlarmParticipantTemplateId AS UserRecurrentNotificationSetting_YellowAlarmParticipantTemplateId, 
            T.YellowAlarmTime AS UserRecurrentNotificationSetting_YellowAlarmTime, 
            T.RedAlarmParticipantTemplateId AS UserRecurrentNotificationSetting_RedAlarmParticipantTemplateId, 
            T.RedAlarmTime AS UserRecurrentNotificationSetting_RedAlarmTime, 
            T.ExternalStartNotificationTemplateId AS UserRecurrentNotificationSetting_ExternalStartNotificationTemplateId, 
            T.ExternalCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_ExternalCompletedNotificationTemplateId, 
            T.ExternalResultsNotificationTemplateId AS UserRecurrentNotificationSetting_ExternalResultsNotificationTemplateId, 
            T.EvaluatorStartNotificationTemplateId AS UserRecurrentNotificationSetting_EvaluatorStartNotificationTemplateId, 
            T.EvaluatorCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_EvaluatorCompletedNotificationTemplateId, 
            T.EvaluatorResultsNotificationTemplateId AS UserRecurrentNotificationSetting_EvaluatorResultsNotificationTemplateId, 
            T.TrainerStartNotificationTemplateId AS UserRecurrentNotificationSetting_TrainerStartNotificationTemplateId, 
            T.TrainerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_TrainerCompletedNotificationTemplateId, 
            T.TrainerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_TrainerResultsNotificationTemplateId, 
            T.ManagerStartNotificationTemplateId AS UserRecurrentNotificationSetting_ManagerStartNotificationTemplateId, 
            T.ManagerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_ManagerCompletedNotificationTemplateId, 
            T.ManagerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_ManagerResultsNotificationTemplateId, 
            T.ManagerId AS UserRecurrentNotificationSetting_ManagerId, 
            T.TrainerId AS UserRecurrentNotificationSetting_TrainerId, 
            T.InvitedAt AS UserRecurrentNotificationSetting_InvitedAt, 
            T.GreenAlarmEvaluatorTemplateId AS UserRecurrentNotificationSetting_GreenAlarmEvaluatorTemplateId, 
            T.GreenAlarmManagerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmManagerTemplateId, 
            T.GreenAlarmTrainerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmTrainerTemplateId, 
            T.YellowAlarmEvaluatorTemplateId AS UserRecurrentNotificationSetting_YellowAlarmEvaluatorTemplateId, 
            T.YellowAlarmManagerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmManagerTemplateId, 
            T.YellowAlarmTrainerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmTrainerTemplateId, 
            T.RedAlarmEvaluatorTemplateId AS UserRecurrentNotificationSetting_RedAlarmEvaluatorTemplateId, 
            T.RedAlarmManagerTemplateId AS UserRecurrentNotificationSetting_RedAlarmManagerTemplateId, 
            T.RedAlarmTrainerTemplateId AS UserRecurrentNotificationSetting_RedAlarmTrainerTemplateId, 
            T.RecurrentTrainningFrequency AS UserRecurrentNotificationSetting_RecurrentTrainningFrequency, 
            T.HowMany AS UserRecurrentNotificationSetting_HowMany, 
            T.MetricId AS UserRecurrentNotificationSetting_MetricId, 
            T.HowManyActions AS UserRecurrentNotificationSetting_HowManyActions, 
            T.HowManySet AS UserRecurrentNotificationSetting_HowManySet, 
            T.PersonalTrainingReminderNotificationTemplateId AS UserRecurrentNotificationSetting_PersonalTrainingReminderNotificationTemplateId, 
            T.ProfileTrainingReminderNotificationTemplateId AS UserRecurrentNotificationSetting_ProfileTrainingReminderNotificationTemplateId, 
            T.CreatedAt AS UserRecurrentNotificationSetting_CreatedAt, 
            T.CreatedBy AS UserRecurrentNotificationSetting_CreatedBy, 
            T.ModifiedAt AS UserRecurrentNotificationSetting_ModifiedAt, 
            T.ModifiedBy AS UserRecurrentNotificationSetting_ModifiedBy, 
            T.ProjectManagerStartNotificationTemplateId AS UserRecurrentNotificationSetting_ProjectManagerStartNotificationTemplateId, 
            T.ProjectManagerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_ProjectManagerCompletedNotificationTemplateId, 
            T.ProjectManagerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_ProjectManagerResultsNotificationTemplateId, 
            T.FinalScoreManagerStartNotificationTemplateId AS UserRecurrentNotificationSetting_FinalScoreManagerStartNotificationTemplateId, 
            T.FinalScoreManagerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_FinalScoreManagerCompletedNotificationTemplateId, 
            T.FinalScoreManagerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_FinalScoreManagerResultsNotificationTemplateId, 
            T.GreenAlarmProjectManagerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmProjectManagerTemplateId, 
            T.YellowAlarmProjectManagerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmProjectManagerTemplateId, 
            T.RedAlarmProjectManagerTemplateId AS UserRecurrentNotificationSetting_RedAlarmProjectManagerTemplateId, 
            T.GreenAlarmFinalScoreManagerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmFinalScoreManagerTemplateId, 
            T.YellowAlarmFinalScoreManagerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmFinalScoreManagerTemplateId, 
            T.RedAlarmFinalScoreManagerTemplateId AS UserRecurrentNotificationSetting_RedAlarmFinalScoreManagerTemplateId, 
            True AS _from0
        FROM IPSData.UserRecurrentNotificationSettings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Projects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView80()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Projects
        [IPSModel.Store.Projects](T1.Projects_Id, T1.Projects_Name, T1.Projects_Summary, T1.Projects_VisionStatement, T1.Projects_IsActive, T1.Projects_ExpectedStartDate, T1.Projects_ExpectedEndDate, T1.Projects_MissionStatement, T1.Projects_OrganizationId, T1.Projects_CreatedBy, T1.Projects_ModifiedBy, T1.Projects_CreatedOn, T1.Projects_ModifiedOn, T1.Projects_StartedOn, T1.Projects_CreatedAsRoleId, T1.Projects_ModifiedAsRoleId)
    FROM (
        SELECT 
            T.Id AS Projects_Id, 
            T.Name AS Projects_Name, 
            T.Summary AS Projects_Summary, 
            T.VisionStatement AS Projects_VisionStatement, 
            T.IsActive AS Projects_IsActive, 
            T.ExpectedStartDate AS Projects_ExpectedStartDate, 
            T.ExpectedEndDate AS Projects_ExpectedEndDate, 
            T.MissionStatement AS Projects_MissionStatement, 
            T.OrganizationId AS Projects_OrganizationId, 
            T.CreatedBy AS Projects_CreatedBy, 
            T.ModifiedBy AS Projects_ModifiedBy, 
            T.CreatedOn AS Projects_CreatedOn, 
            T.ModifiedOn AS Projects_ModifiedOn, 
            T.StartedOn AS Projects_StartedOn, 
            T.CreatedAsRoleId AS Projects_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Projects_ModifiedAsRoleId, 
            True AS _from0
        FROM IPSData.Projects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.NotificationTemplateTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView81()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationTemplateTypes
        [IPSModel.Store.NotificationTemplateTypes](T1.NotificationTemplateTypes_Id, T1.NotificationTemplateTypes_Name, T1.NotificationTemplateTypes_Category)
    FROM (
        SELECT 
            T.Id AS NotificationTemplateTypes_Id, 
            T.Name AS NotificationTemplateTypes_Name, 
            T.Category AS NotificationTemplateTypes_Category, 
            True AS _from0
        FROM IPSData.NotificationTemplateTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TrainingNote.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView82()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingNote
        [IPSModel.Store.TrainingNote](T1.TrainingNote_Id, T1.TrainingNote_TrainingId, T1.TrainingNote_Goal, T1.TrainingNote_MeasureInfo, T1.TrainingNote_ProceedInfo, T1.TrainingNote_OtherInfo, T1.TrainingNote_CreatedOn, T1.TrainingNote_CreatedBy, T1.TrainingNote_ModifiedOn, T1.TrainingNote_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS TrainingNote_Id, 
            T.TrainingId AS TrainingNote_TrainingId, 
            T.Goal AS TrainingNote_Goal, 
            T.MeasureInfo AS TrainingNote_MeasureInfo, 
            T.ProceedInfo AS TrainingNote_ProceedInfo, 
            T.OtherInfo AS TrainingNote_OtherInfo, 
            T.CreatedOn AS TrainingNote_CreatedOn, 
            T.CreatedBy AS TrainingNote_CreatedBy, 
            T.ModifiedOn AS TrainingNote_ModifiedOn, 
            T.ModifiedBy AS TrainingNote_ModifiedBy, 
            True AS _from0
        FROM IPSData.TrainingNotes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.MilestoneAgreementGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView83()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MilestoneAgreementGoals
        [IPSModel.Store.MilestoneAgreementGoals](T1.MilestoneAgreementGoals_Id, T1.MilestoneAgreementGoals_StageId, T1.MilestoneAgreementGoals_ParticipantId, T1.MilestoneAgreementGoals_Goal, T1.MilestoneAgreementGoals_EvaluationAgreementId, T1.MilestoneAgreementGoals_CreatedOn, T1.MilestoneAgreementGoals_CreatedBy, T1.MilestoneAgreementGoals_ModifiedOn, T1.MilestoneAgreementGoals_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS MilestoneAgreementGoals_Id, 
            T.StageId AS MilestoneAgreementGoals_StageId, 
            T.ParticipantId AS MilestoneAgreementGoals_ParticipantId, 
            T.Goal AS MilestoneAgreementGoals_Goal, 
            T.EvaluationAgreementId AS MilestoneAgreementGoals_EvaluationAgreementId, 
            T.CreatedOn AS MilestoneAgreementGoals_CreatedOn, 
            T.CreatedBy AS MilestoneAgreementGoals_CreatedBy, 
            T.ModifiedOn AS MilestoneAgreementGoals_ModifiedOn, 
            T.ModifiedBy AS MilestoneAgreementGoals_ModifiedBy, 
            True AS _from0
        FROM IPSData.MilestoneAgreementGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProjectDefaultNotificationSettings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView84()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectDefaultNotificationSettings
        [IPSModel.Store.ProjectDefaultNotificationSettings](T1.ProjectDefaultNotificationSettings_Id, T1.ProjectDefaultNotificationSettings_ProjectId, T1.ProjectDefaultNotificationSettings_ParticipantsStartNotificationId, T1.ProjectDefaultNotificationSettings_ParticipantsCompletedNotificationId, T1.ProjectDefaultNotificationSettings_ParticipantsResultNotificationId, T1.ProjectDefaultNotificationSettings_EvaluatorsStartNotificationId, T1.ProjectDefaultNotificationSettings_EvaluatorsCompletedNotificationId, T1.ProjectDefaultNotificationSettings_EvaluatorsResultNotificationId, T1.ProjectDefaultNotificationSettings_TrainersStartNotificationId, T1.ProjectDefaultNotificationSettings_TrainersCompletedNotificationId, T1.ProjectDefaultNotificationSettings_TrainersResultNotificationId, T1.ProjectDefaultNotificationSettings_ManagersStartNotificationId, T1.ProjectDefaultNotificationSettings_ManagersCompletedNotificationId, T1.ProjectDefaultNotificationSettings_ManagersResultNotificationId, T1.ProjectDefaultNotificationSettings_FinalScoreManagersStartNotificationId, T1.ProjectDefaultNotificationSettings_FinalScoreManagersCompletedNotificationId, T1.ProjectDefaultNotificationSettings_FinalScoreManagersResultNotificationId, T1.ProjectDefaultNotificationSettings_ProjectManagersStartNotificationId, T1.ProjectDefaultNotificationSettings_ProjectManagersCompletedNotificationId, T1.ProjectDefaultNotificationSettings_ProjectManagersResultNotificationId, T1.ProjectDefaultNotificationSettings_ParticipantGreenNotificationId, T1.ProjectDefaultNotificationSettings_ParticipantYellowNotificationId, T1.ProjectDefaultNotificationSettings_ParticipantRedNotificationId, T1.ProjectDefaultNotificationSettings_EvaluatorGreenNotificationId, T1.ProjectDefaultNotificationSettings_EvaluatorYellowNotificationId, T1.ProjectDefaultNotificationSettings_EvaluatorRedNotificationId, T1.ProjectDefaultNotificationSettings_ManagerGreenNotificationId, T1.ProjectDefaultNotificationSettings_ManagerYellowNotificationId, T1.ProjectDefaultNotificationSettings_ManagerRedNotificationId, T1.ProjectDefaultNotificationSettings_TrainerGreenNotificationId, T1.ProjectDefaultNotificationSettings_TrainerYellowNotificationId, T1.ProjectDefaultNotificationSettings_TrainerRedNotificationId, T1.ProjectDefaultNotificationSettings_FinalScoreManagersGreenNotificationId, T1.ProjectDefaultNotificationSettings_FinalScoreManagersYellowNotificationId, T1.ProjectDefaultNotificationSettings_FinalScoreManagersRedNotificationId, T1.ProjectDefaultNotificationSettings_ProjectManagersGreenNotificationId, T1.ProjectDefaultNotificationSettings_ProjectManagersYellowNotificationId, T1.ProjectDefaultNotificationSettings_ProjectManagersRedNotificationId, T1.ProjectDefaultNotificationSettings_GreenAlarmBefore, T1.ProjectDefaultNotificationSettings_YellowAlarmBefore, T1.ProjectDefaultNotificationSettings_RedAlarmBefore, T1.ProjectDefaultNotificationSettings_EmailNotification, T1.ProjectDefaultNotificationSettings_SmsNotification, T1.ProjectDefaultNotificationSettings_CreatedOn, T1.ProjectDefaultNotificationSettings_CreatedBy, T1.ProjectDefaultNotificationSettings_ModifiedOn, T1.ProjectDefaultNotificationSettings_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS ProjectDefaultNotificationSettings_Id, 
            T.ProjectId AS ProjectDefaultNotificationSettings_ProjectId, 
            T.ParticipantsStartNotificationId AS ProjectDefaultNotificationSettings_ParticipantsStartNotificationId, 
            T.ParticipantsCompletedNotificationId AS ProjectDefaultNotificationSettings_ParticipantsCompletedNotificationId, 
            T.ParticipantsResultNotificationId AS ProjectDefaultNotificationSettings_ParticipantsResultNotificationId, 
            T.EvaluatorsStartNotificationId AS ProjectDefaultNotificationSettings_EvaluatorsStartNotificationId, 
            T.EvaluatorsCompletedNotificationId AS ProjectDefaultNotificationSettings_EvaluatorsCompletedNotificationId, 
            T.EvaluatorsResultNotificationId AS ProjectDefaultNotificationSettings_EvaluatorsResultNotificationId, 
            T.TrainersStartNotificationId AS ProjectDefaultNotificationSettings_TrainersStartNotificationId, 
            T.TrainersCompletedNotificationId AS ProjectDefaultNotificationSettings_TrainersCompletedNotificationId, 
            T.TrainersResultNotificationId AS ProjectDefaultNotificationSettings_TrainersResultNotificationId, 
            T.ManagersStartNotificationId AS ProjectDefaultNotificationSettings_ManagersStartNotificationId, 
            T.ManagersCompletedNotificationId AS ProjectDefaultNotificationSettings_ManagersCompletedNotificationId, 
            T.ManagersResultNotificationId AS ProjectDefaultNotificationSettings_ManagersResultNotificationId, 
            T.FinalScoreManagersStartNotificationId AS ProjectDefaultNotificationSettings_FinalScoreManagersStartNotificationId, 
            T.FinalScoreManagersCompletedNotificationId AS ProjectDefaultNotificationSettings_FinalScoreManagersCompletedNotificationId, 
            T.FinalScoreManagersResultNotificationId AS ProjectDefaultNotificationSettings_FinalScoreManagersResultNotificationId, 
            T.ProjectManagersStartNotificationId AS ProjectDefaultNotificationSettings_ProjectManagersStartNotificationId, 
            T.ProjectManagersCompletedNotificationId AS ProjectDefaultNotificationSettings_ProjectManagersCompletedNotificationId, 
            T.ProjectManagersResultNotificationId AS ProjectDefaultNotificationSettings_ProjectManagersResultNotificationId, 
            T.ParticipantGreenNotificationId AS ProjectDefaultNotificationSettings_ParticipantGreenNotificationId, 
            T.ParticipantYellowNotificationId AS ProjectDefaultNotificationSettings_ParticipantYellowNotificationId, 
            T.ParticipantRedNotificationId AS ProjectDefaultNotificationSettings_ParticipantRedNotificationId, 
            T.EvaluatorGreenNotificationId AS ProjectDefaultNotificationSettings_EvaluatorGreenNotificationId, 
            T.EvaluatorYellowNotificationId AS ProjectDefaultNotificationSettings_EvaluatorYellowNotificationId, 
            T.EvaluatorRedNotificationId AS ProjectDefaultNotificationSettings_EvaluatorRedNotificationId, 
            T.ManagerGreenNotificationId AS ProjectDefaultNotificationSettings_ManagerGreenNotificationId, 
            T.ManagerYellowNotificationId AS ProjectDefaultNotificationSettings_ManagerYellowNotificationId, 
            T.ManagerRedNotificationId AS ProjectDefaultNotificationSettings_ManagerRedNotificationId, 
            T.TrainerGreenNotificationId AS ProjectDefaultNotificationSettings_TrainerGreenNotificationId, 
            T.TrainerYellowNotificationId AS ProjectDefaultNotificationSettings_TrainerYellowNotificationId, 
            T.TrainerRedNotificationId AS ProjectDefaultNotificationSettings_TrainerRedNotificationId, 
            T.FinalScoreManagersGreenNotificationId AS ProjectDefaultNotificationSettings_FinalScoreManagersGreenNotificationId, 
            T.FinalScoreManagersYellowNotificationId AS ProjectDefaultNotificationSettings_FinalScoreManagersYellowNotificationId, 
            T.FinalScoreManagersRedNotificationId AS ProjectDefaultNotificationSettings_FinalScoreManagersRedNotificationId, 
            T.ProjectManagersGreenNotificationId AS ProjectDefaultNotificationSettings_ProjectManagersGreenNotificationId, 
            T.ProjectManagersYellowNotificationId AS ProjectDefaultNotificationSettings_ProjectManagersYellowNotificationId, 
            T.ProjectManagersRedNotificationId AS ProjectDefaultNotificationSettings_ProjectManagersRedNotificationId, 
            T.GreenAlarmBefore AS ProjectDefaultNotificationSettings_GreenAlarmBefore, 
            T.YellowAlarmBefore AS ProjectDefaultNotificationSettings_YellowAlarmBefore, 
            T.RedAlarmBefore AS ProjectDefaultNotificationSettings_RedAlarmBefore, 
            T.EmailNotification AS ProjectDefaultNotificationSettings_EmailNotification, 
            T.SmsNotification AS ProjectDefaultNotificationSettings_SmsNotification, 
            T.CreatedOn AS ProjectDefaultNotificationSettings_CreatedOn, 
            T.CreatedBy AS ProjectDefaultNotificationSettings_CreatedBy, 
            T.ModifiedOn AS ProjectDefaultNotificationSettings_ModifiedOn, 
            T.ModifiedBy AS ProjectDefaultNotificationSettings_ModifiedBy, 
            True AS _from0
        FROM IPSData.ProjectDefaultNotificationSettings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.StageGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView85()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StageGroups
        [IPSModel.Store.StageGroups](T1.StageGroups_Id, T1.StageGroups_Name, T1.StageGroups_Description, T1.StageGroups_StartDate, T1.StageGroups_EndDate, T1.StageGroups_ParentStageGroupId, T1.StageGroups_ParentParticipantId, T1.StageGroups_MonthsSpan, T1.StageGroups_WeeksSpan, T1.StageGroups_DaysSpan, T1.StageGroups_HoursSpan, T1.StageGroups_MinutesSpan, T1.StageGroups_ActualTimeSpan, T1.StageGroups_TotalMilestones, T1.StageGroups_CreatedOn, T1.StageGroups_CreatedBy, T1.StageGroups_ModifiedOn, T1.StageGroups_ModifiedBy, T1.StageGroups_StartStageStartDate, T1.StageGroups_StartStageEndDate, T1.StageGroups_MilestoneStartDate, T1.StageGroups_MilestoneEndDate)
    FROM (
        SELECT 
            T.Id AS StageGroups_Id, 
            T.Name AS StageGroups_Name, 
            T.Description AS StageGroups_Description, 
            T.StartDate AS StageGroups_StartDate, 
            T.EndDate AS StageGroups_EndDate, 
            T.ParentStageGroupId AS StageGroups_ParentStageGroupId, 
            T.ParentParticipantId AS StageGroups_ParentParticipantId, 
            T.MonthsSpan AS StageGroups_MonthsSpan, 
            T.WeeksSpan AS StageGroups_WeeksSpan, 
            T.DaysSpan AS StageGroups_DaysSpan, 
            T.HoursSpan AS StageGroups_HoursSpan, 
            T.MinutesSpan AS StageGroups_MinutesSpan, 
            T.ActualTimeSpan AS StageGroups_ActualTimeSpan, 
            T.TotalMilestones AS StageGroups_TotalMilestones, 
            T.CreatedOn AS StageGroups_CreatedOn, 
            T.CreatedBy AS StageGroups_CreatedBy, 
            T.ModifiedOn AS StageGroups_ModifiedOn, 
            T.ModifiedBy AS StageGroups_ModifiedBy, 
            T.StartStageStartDate AS StageGroups_StartStageStartDate, 
            T.StartStageEndDate AS StageGroups_StartStageEndDate, 
            T.MilestoneStartDate AS StageGroups_MilestoneStartDate, 
            T.MilestoneEndDate AS StageGroups_MilestoneEndDate, 
            True AS _from0
        FROM IPSData.StageGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingActivities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView86()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingActivities
        [IPSModel.Store.ProspectingActivities](T1.ProspectingActivities_Id, T1.ProspectingActivities_ProspectingGoalActivityId, T1.ProspectingActivities_Name, T1.ProspectingActivities_ActivityStart, T1.ProspectingActivities_ActivityEnd, T1.ProspectingActivities_CreatedOn, T1.ProspectingActivities_CreatedBy, T1.ProspectingActivities_ModifiedOn, T1.ProspectingActivities_ModifiedBy, T1.ProspectingActivities_StartTime, T1.ProspectingActivities_StopTime)
    FROM (
        SELECT 
            T.Id AS ProspectingActivities_Id, 
            T.ProspectingGoalActivityId AS ProspectingActivities_ProspectingGoalActivityId, 
            T.Name AS ProspectingActivities_Name, 
            T.ActivityStart AS ProspectingActivities_ActivityStart, 
            T.ActivityEnd AS ProspectingActivities_ActivityEnd, 
            T.CreatedOn AS ProspectingActivities_CreatedOn, 
            T.CreatedBy AS ProspectingActivities_CreatedBy, 
            T.ModifiedOn AS ProspectingActivities_ModifiedOn, 
            T.ModifiedBy AS ProspectingActivities_ModifiedBy, 
            T.StartTime AS ProspectingActivities_StartTime, 
            T.StopTime AS ProspectingActivities_StopTime, 
            True AS _from0
        FROM IPSData.ProspectingActivities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingGoalActivityInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView87()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalActivityInfo
        [IPSModel.Store.ProspectingGoalActivityInfo](T1.ProspectingGoalActivityInfo_Id, T1.ProspectingGoalActivityInfo_ProfileId, T1.ProspectingGoalActivityInfo_ProspectingGoalId, T1.ProspectingGoalActivityInfo_ActivityCalculationType, T1.ProspectingGoalActivityInfo_ActivityTime, T1.ProspectingGoalActivityInfo_BreakTime, T1.ProspectingGoalActivityInfo_TotalActivities, T1.ProspectingGoalActivityInfo_ActivityStartTime, T1.ProspectingGoalActivityInfo_ActivityEndTime, T1.ProspectingGoalActivityInfo_UserId, T1.ProspectingGoalActivityInfo_CreatedOn, T1.ProspectingGoalActivityInfo_CreatedBy, T1.ProspectingGoalActivityInfo_ModifiedOn, T1.ProspectingGoalActivityInfo_ModifiedBy, T1.ProspectingGoalActivityInfo_Frequency)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalActivityInfo_Id, 
            T.ProfileId AS ProspectingGoalActivityInfo_ProfileId, 
            T.ProspectingGoalId AS ProspectingGoalActivityInfo_ProspectingGoalId, 
            T.ActivityCalculationType AS ProspectingGoalActivityInfo_ActivityCalculationType, 
            T.ActivityTime AS ProspectingGoalActivityInfo_ActivityTime, 
            T.BreakTime AS ProspectingGoalActivityInfo_BreakTime, 
            T.TotalActivities AS ProspectingGoalActivityInfo_TotalActivities, 
            T.ActivityStartTime AS ProspectingGoalActivityInfo_ActivityStartTime, 
            T.ActivityEndTime AS ProspectingGoalActivityInfo_ActivityEndTime, 
            T.UserId AS ProspectingGoalActivityInfo_UserId, 
            T.CreatedOn AS ProspectingGoalActivityInfo_CreatedOn, 
            T.CreatedBy AS ProspectingGoalActivityInfo_CreatedBy, 
            T.ModifiedOn AS ProspectingGoalActivityInfo_ModifiedOn, 
            T.ModifiedBy AS ProspectingGoalActivityInfo_ModifiedBy, 
            T.Frequency AS ProspectingGoalActivityInfo_Frequency, 
            True AS _from0
        FROM IPSData.ProspectingGoalActivityInfoes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingSkillGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView88()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingSkillGoals
        [IPSModel.Store.ProspectingSkillGoals](T1.ProspectingSkillGoals_Id, T1.ProspectingSkillGoals_ProspectingGoalId, T1.ProspectingSkillGoals_SkillId, T1.ProspectingSkillGoals_Goal)
    FROM (
        SELECT 
            T.Id AS ProspectingSkillGoals_Id, 
            T.ProspectingGoalId AS ProspectingSkillGoals_ProspectingGoalId, 
            T.SkillId AS ProspectingSkillGoals_SkillId, 
            T.Goal AS ProspectingSkillGoals_Goal, 
            True AS _from0
        FROM IPSData.ProspectingSkillGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingCustomerResult.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView89()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomerResult
        [IPSModel.Store.ProspectingCustomerResult](T1.ProspectingCustomerResult_Id, T1.ProspectingCustomerResult_ProspectingCustomerId, T1.ProspectingCustomerResult_ProspectingActivityId, T1.ProspectingCustomerResult_SkillId, T1.ProspectingCustomerResult_IsDone, T1.ProspectingCustomerResult_Description, T1.ProspectingCustomerResult_Duration, T1.ProspectingCustomerResult_IsNoMeeting, T1.ProspectingCustomerResult_IsMeeting, T1.ProspectingCustomerResult_IsFollowUp, T1.ProspectingCustomerResult_IsServiceAgreed, T1.ProspectingCustomerResult_ServiceAmount, T1.ProspectingCustomerResult_CustomerInterestRate, T1.ProspectingCustomerResult_Reason, T1.ProspectingCustomerResult_CreatedOn, T1.ProspectingCustomerResult_CreatedBy, T1.ProspectingCustomerResult_ModifiedOn, T1.ProspectingCustomerResult_ModifiedBy, T1.ProspectingCustomerResult_ProspectingType, T1.ProspectingCustomerResult_IsSales, T1.ProspectingCustomerResult_SalesNotification)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomerResult_Id, 
            T.ProspectingCustomerId AS ProspectingCustomerResult_ProspectingCustomerId, 
            T.ProspectingActivityId AS ProspectingCustomerResult_ProspectingActivityId, 
            T.SkillId AS ProspectingCustomerResult_SkillId, 
            T.IsDone AS ProspectingCustomerResult_IsDone, 
            T.Description AS ProspectingCustomerResult_Description, 
            T.Duration AS ProspectingCustomerResult_Duration, 
            T.IsNoMeeting AS ProspectingCustomerResult_IsNoMeeting, 
            T.IsMeeting AS ProspectingCustomerResult_IsMeeting, 
            T.IsFollowUp AS ProspectingCustomerResult_IsFollowUp, 
            T.IsServiceAgreed AS ProspectingCustomerResult_IsServiceAgreed, 
            T.ServiceAmount AS ProspectingCustomerResult_ServiceAmount, 
            T.CustomerInterestRate AS ProspectingCustomerResult_CustomerInterestRate, 
            T.Reason AS ProspectingCustomerResult_Reason, 
            T.CreatedOn AS ProspectingCustomerResult_CreatedOn, 
            T.CreatedBy AS ProspectingCustomerResult_CreatedBy, 
            T.ModifiedOn AS ProspectingCustomerResult_ModifiedOn, 
            T.ModifiedBy AS ProspectingCustomerResult_ModifiedBy, 
            T.ProspectingType AS ProspectingCustomerResult_ProspectingType, 
            T.IsSales AS ProspectingCustomerResult_IsSales, 
            T.SalesNotification AS ProspectingCustomerResult_SalesNotification, 
            True AS _from0
        FROM IPSData.ProspectingCustomerResults AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingSchedule.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView90()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingSchedule
        [IPSModel.Store.ProspectingSchedule](T1.ProspectingSchedule_Id, T1.ProspectingSchedule_ProspectingCustomerId, T1.ProspectingSchedule_ProspectingActivityId, T1.ProspectingSchedule_ProspectingCustomerResultId, T1.ProspectingSchedule_IsMeeting, T1.ProspectingSchedule_IsFollowUp, T1.ProspectingSchedule_ScheduleDate, T1.ProspectingSchedule_Agenda, T1.ProspectingSchedule_CreatedOn, T1.ProspectingSchedule_CreatedBy, T1.ProspectingSchedule_ModifiedOn, T1.ProspectingSchedule_ModiffiedBy, T1.ProspectingSchedule_TaskId, T1.ProspectingSchedule_IsServiceAgreed, T1.ProspectingSchedule_ProspectingType, T1.ProspectingSchedule_Notification)
    FROM (
        SELECT 
            T.Id AS ProspectingSchedule_Id, 
            T.ProspectingCustomerId AS ProspectingSchedule_ProspectingCustomerId, 
            T.ProspectingActivityId AS ProspectingSchedule_ProspectingActivityId, 
            T.ProspectingCustomerResultId AS ProspectingSchedule_ProspectingCustomerResultId, 
            T.IsMeeting AS ProspectingSchedule_IsMeeting, 
            T.IsFollowUp AS ProspectingSchedule_IsFollowUp, 
            T.ScheduleDate AS ProspectingSchedule_ScheduleDate, 
            T.Agenda AS ProspectingSchedule_Agenda, 
            T.CreatedOn AS ProspectingSchedule_CreatedOn, 
            T.CreatedBy AS ProspectingSchedule_CreatedBy, 
            T.ModifiedOn AS ProspectingSchedule_ModifiedOn, 
            T.ModiffiedBy AS ProspectingSchedule_ModiffiedBy, 
            T.TaskId AS ProspectingSchedule_TaskId, 
            T.IsServiceAgreed AS ProspectingSchedule_IsServiceAgreed, 
            T.ProspectingType AS ProspectingSchedule_ProspectingType, 
            T.Notification AS ProspectingSchedule_Notification, 
            True AS _from0
        FROM IPSData.ProspectingSchedules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingActivityLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView91()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingActivityLog
        [IPSModel.Store.ProspectingActivityLog](T1.ProspectingActivityLog_Id, T1.ProspectingActivityLog_ProspectingActivityId, T1.ProspectingActivityLog_Event, T1.ProspectingActivityLog_EventTime, T1.ProspectingActivityLog_CreatedOn, T1.ProspectingActivityLog_CreatedBy)
    FROM (
        SELECT 
            T.Id AS ProspectingActivityLog_Id, 
            T.ProspectingActivityId AS ProspectingActivityLog_ProspectingActivityId, 
            T.Event AS ProspectingActivityLog_Event, 
            T.EventTime AS ProspectingActivityLog_EventTime, 
            T.CreatedOn AS ProspectingActivityLog_CreatedOn, 
            T.CreatedBy AS ProspectingActivityLog_CreatedBy, 
            True AS _from0
        FROM IPSData.ProspectingActivityLogs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingGoalInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView92()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalInfo
        [IPSModel.Store.ProspectingGoalInfo](T1.ProspectingGoalInfo_Id, T1.ProspectingGoalInfo_Name, T1.ProspectingGoalInfo_ProfileId, T1.ProspectingGoalInfo_ProjectId, T1.ProspectingGoalInfo_ParticipantId, T1.ProspectingGoalInfo_GoalStartDate, T1.ProspectingGoalInfo_GoalEndDate, T1.ProspectingGoalInfo_CreatedOn, T1.ProspectingGoalInfo_CreatedBy, T1.ProspectingGoalInfo_ModifiedOn, T1.ProspectingGoalInfo_ModifiedBy, T1.ProspectingGoalInfo_UserId, T1.ProspectingGoalInfo_RecurrenceRule, T1.ProspectingGoalInfo_TaskId, T1.ProspectingGoalInfo_ProspectingGoalScaleId, T1.ProspectingGoalInfo_ProspectingType)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalInfo_Id, 
            T.Name AS ProspectingGoalInfo_Name, 
            T.ProfileId AS ProspectingGoalInfo_ProfileId, 
            T.ProjectId AS ProspectingGoalInfo_ProjectId, 
            T.ParticipantId AS ProspectingGoalInfo_ParticipantId, 
            T.GoalStartDate AS ProspectingGoalInfo_GoalStartDate, 
            T.GoalEndDate AS ProspectingGoalInfo_GoalEndDate, 
            T.CreatedOn AS ProspectingGoalInfo_CreatedOn, 
            T.CreatedBy AS ProspectingGoalInfo_CreatedBy, 
            T.ModifiedOn AS ProspectingGoalInfo_ModifiedOn, 
            T.ModifiedBy AS ProspectingGoalInfo_ModifiedBy, 
            T.UserId AS ProspectingGoalInfo_UserId, 
            T.RecurrenceRule AS ProspectingGoalInfo_RecurrenceRule, 
            T.TaskId AS ProspectingGoalInfo_TaskId, 
            T.ProspectingGoalScaleId AS ProspectingGoalInfo_ProspectingGoalScaleId, 
            T.ProspectingType AS ProspectingGoalInfo_ProspectingType, 
            True AS _from0
        FROM IPSData.ProspectingGoalInfoes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingGoalScaleRanges.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView93()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalScaleRanges
        [IPSModel.Store.ProspectingGoalScaleRanges](T1.ProspectingGoalScaleRanges_Id, T1.ProspectingGoalScaleRanges_ProspectingGoalScaleId, T1.ProspectingGoalScaleRanges_Min, T1.ProspectingGoalScaleRanges_Max, T1.ProspectingGoalScaleRanges_Description, T1.ProspectingGoalScaleRanges_Color)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalScaleRanges_Id, 
            T.ProspectingGoalScaleId AS ProspectingGoalScaleRanges_ProspectingGoalScaleId, 
            T.Min AS ProspectingGoalScaleRanges_Min, 
            T.Max AS ProspectingGoalScaleRanges_Max, 
            T.Description AS ProspectingGoalScaleRanges_Description, 
            T.Color AS ProspectingGoalScaleRanges_Color, 
            True AS _from0
        FROM IPSData.ProspectingGoalScaleRanges AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingGoalScales.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView94()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalScales
        [IPSModel.Store.ProspectingGoalScales](T1.ProspectingGoalScales_Id, T1.ProspectingGoalScales_Name, T1.ProspectingGoalScales_Description, T1.ProspectingGoalScales_ScaleCategoryId, T1.ProspectingGoalScales_MeasureUnitId, T1.ProspectingGoalScales_IncludeNotRelevant, T1.ProspectingGoalScales_IsTemplate, T1.ProspectingGoalScales_CreatedOn, T1.ProspectingGoalScales_CreatedBy, T1.ProspectingGoalScales_ModifiedOn, T1.ProspectingGoalScales_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalScales_Id, 
            T.Name AS ProspectingGoalScales_Name, 
            T.Description AS ProspectingGoalScales_Description, 
            T.ScaleCategoryId AS ProspectingGoalScales_ScaleCategoryId, 
            T.MeasureUnitId AS ProspectingGoalScales_MeasureUnitId, 
            T.IncludeNotRelevant AS ProspectingGoalScales_IncludeNotRelevant, 
            T.IsTemplate AS ProspectingGoalScales_IsTemplate, 
            T.CreatedOn AS ProspectingGoalScales_CreatedOn, 
            T.CreatedBy AS ProspectingGoalScales_CreatedBy, 
            T.ModifiedOn AS ProspectingGoalScales_ModifiedOn, 
            T.ModifiedBy AS ProspectingGoalScales_ModifiedBy, 
            True AS _from0
        FROM IPSData.ProspectingGoalScales AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView95()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [IPSModel.Store.Customers](T1.Customers_Id, T1.Customers_OrganizationId, T1.Customers_Name, T1.Customers_Email, T1.Customers_Mobile, T1.Customers_PostCode, T1.Customers_CreatedOn, T1.Customers_CreatedBy, T1.Customers_ModifiedOn, T1.Customers_ModifiedBy, T1.Customers_AssignedUserId, T1.Customers_CSVFile)
    FROM (
        SELECT 
            T.Id AS Customers_Id, 
            T.OrganizationId AS Customers_OrganizationId, 
            T.Name AS Customers_Name, 
            T.Email AS Customers_Email, 
            T.Mobile AS Customers_Mobile, 
            T.PostCode AS Customers_PostCode, 
            T.CreatedOn AS Customers_CreatedOn, 
            T.CreatedBy AS Customers_CreatedBy, 
            T.ModifiedOn AS Customers_ModifiedOn, 
            T.ModifiedBy AS Customers_ModifiedBy, 
            T.AssignedUserId AS Customers_AssignedUserId, 
            T.CSVFile AS Customers_CSVFile, 
            True AS _from0
        FROM IPSData.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.CustomerSalesData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView96()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerSalesData
        [IPSModel.Store.CustomerSalesData](T1.CustomerSalesData_Id, T1.CustomerSalesData_CustomerId, T1.CustomerSalesData_Date, T1.CustomerSalesData_Model, T1.CustomerSalesData_Type, T1.CustomerSalesData_RegistrationNo, T1.CustomerSalesData_Seller, T1.CustomerSalesData_Offer, T1.CustomerSalesData_CSVFile, T1.CustomerSalesData_CreatedDate, T1.CustomerSalesData_CreatedBy)
    FROM (
        SELECT 
            T.Id AS CustomerSalesData_Id, 
            T.CustomerId AS CustomerSalesData_CustomerId, 
            T.Date AS CustomerSalesData_Date, 
            T.Model AS CustomerSalesData_Model, 
            T.Type AS CustomerSalesData_Type, 
            T.RegistrationNo AS CustomerSalesData_RegistrationNo, 
            T.Seller AS CustomerSalesData_Seller, 
            T.Offer AS CustomerSalesData_Offer, 
            T.CSVFile AS CustomerSalesData_CSVFile, 
            T.CreatedDate AS CustomerSalesData_CreatedDate, 
            T.CreatedBy AS CustomerSalesData_CreatedBy, 
            True AS _from0
        FROM IPSData.CustomerSalesDatas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TrainingFeedback.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView97()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingFeedback
        [IPSModel.Store.TrainingFeedback](T1.TrainingFeedback_Id, T1.TrainingFeedback_TrainingId, T1.TrainingFeedback_TaskId, T1.TrainingFeedback_Rating, T1.TrainingFeedback_WorkedWell, T1.TrainingFeedback_WorkedNotWell, T1.TrainingFeedback_WhatNextDescription, T1.TrainingFeedback_TimeSpentMinutes, T1.TrainingFeedback_FeedbackDateTime, T1.TrainingFeedback_RecurrencesStartTime, T1.TrainingFeedback_RecurrencesEndTime, T1.TrainingFeedback_IsRecurrences, T1.TrainingFeedback_RecurrencesRule, T1.TrainingFeedback_IsEvaluatorFeedBack, T1.TrainingFeedback_EvaluatorId, T1.TrainingFeedback_EvaluatorFeedBackTime, T1.TrainingFeedback_IsParticipantPaused, T1.TrainingFeedback_ParticipantPausedAt, T1.TrainingFeedback_StartedAt)
    FROM (
        SELECT 
            T.Id AS TrainingFeedback_Id, 
            T.TrainingId AS TrainingFeedback_TrainingId, 
            T.TaskId AS TrainingFeedback_TaskId, 
            T.Rating AS TrainingFeedback_Rating, 
            T.WorkedWell AS TrainingFeedback_WorkedWell, 
            T.WorkedNotWell AS TrainingFeedback_WorkedNotWell, 
            T.WhatNextDescription AS TrainingFeedback_WhatNextDescription, 
            T.TimeSpentMinutes AS TrainingFeedback_TimeSpentMinutes, 
            T.FeedbackDateTime AS TrainingFeedback_FeedbackDateTime, 
            T.RecurrencesStartTime AS TrainingFeedback_RecurrencesStartTime, 
            T.RecurrencesEndTime AS TrainingFeedback_RecurrencesEndTime, 
            T.IsRecurrences AS TrainingFeedback_IsRecurrences, 
            T.RecurrencesRule AS TrainingFeedback_RecurrencesRule, 
            T.IsEvaluatorFeedBack AS TrainingFeedback_IsEvaluatorFeedBack, 
            T.EvaluatorId AS TrainingFeedback_EvaluatorId, 
            T.EvaluatorFeedBackTime AS TrainingFeedback_EvaluatorFeedBackTime, 
            T.IsParticipantPaused AS TrainingFeedback_IsParticipantPaused, 
            T.ParticipantPausedAt AS TrainingFeedback_ParticipantPausedAt, 
            T.StartedAt AS TrainingFeedback_StartedAt, 
            True AS _from0
        FROM IPSData.TrainingFeedbacks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingActivityFeedback.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView98()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingActivityFeedback
        [IPSModel.Store.ProspectingActivityFeedback](T1.ProspectingActivityFeedback_Id, T1.ProspectingActivityFeedback_ProspectingActivityId, T1.ProspectingActivityFeedback_Rating, T1.ProspectingActivityFeedback_WorkedWell, T1.ProspectingActivityFeedback_WorkedNotWell, T1.ProspectingActivityFeedback_WhatNextDescription, T1.ProspectingActivityFeedback_TimeSpentMinutes, T1.ProspectingActivityFeedback_FeedbackDateTime, T1.ProspectingActivityFeedback_ActvityStartTime, T1.ProspectingActivityFeedback_ActvityEndTime, T1.ProspectingActivityFeedback_IsRecurrences, T1.ProspectingActivityFeedback_RecurrencesRule, T1.ProspectingActivityFeedback_IsParticipantPaused, T1.ProspectingActivityFeedback_ParticipantPausedAt, T1.ProspectingActivityFeedback_StartedAt)
    FROM (
        SELECT 
            T.Id AS ProspectingActivityFeedback_Id, 
            T.ProspectingActivityId AS ProspectingActivityFeedback_ProspectingActivityId, 
            T.Rating AS ProspectingActivityFeedback_Rating, 
            T.WorkedWell AS ProspectingActivityFeedback_WorkedWell, 
            T.WorkedNotWell AS ProspectingActivityFeedback_WorkedNotWell, 
            T.WhatNextDescription AS ProspectingActivityFeedback_WhatNextDescription, 
            T.TimeSpentMinutes AS ProspectingActivityFeedback_TimeSpentMinutes, 
            T.FeedbackDateTime AS ProspectingActivityFeedback_FeedbackDateTime, 
            T.ActvityStartTime AS ProspectingActivityFeedback_ActvityStartTime, 
            T.ActvityEndTime AS ProspectingActivityFeedback_ActvityEndTime, 
            T.IsRecurrences AS ProspectingActivityFeedback_IsRecurrences, 
            T.RecurrencesRule AS ProspectingActivityFeedback_RecurrencesRule, 
            T.IsParticipantPaused AS ProspectingActivityFeedback_IsParticipantPaused, 
            T.ParticipantPausedAt AS ProspectingActivityFeedback_ParticipantPausedAt, 
            T.StartedAt AS ProspectingActivityFeedback_StartedAt, 
            True AS _from0
        FROM IPSData.ProspectingActivityFeedbacks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingCustomers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView99()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomers
        [IPSModel.Store.ProspectingCustomers](T1.ProspectingCustomers_Id, T1.ProspectingCustomers_Name, T1.ProspectingCustomers_Phone, T1.ProspectingCustomers_Detail, T1.ProspectingCustomers_ScheduleDate, T1.ProspectingCustomers_CreatedOn, T1.ProspectingCustomers_CreatedBy, T1.ProspectingCustomers_ModifiedOn, T1.ProspectingCustomers_ModifiedBy, T1.ProspectingCustomers_CustomerId, T1.ProspectingCustomers_ProspectingGoalId, T1.ProspectingCustomers_CustomerSaleDataId, T1.ProspectingCustomers_AssignedToUserId, T1.ProspectingCustomers_AssignedOn, T1.ProspectingCustomers_AssignedBy, T1.ProspectingCustomers_UserId)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomers_Id, 
            T.Name AS ProspectingCustomers_Name, 
            T.Phone AS ProspectingCustomers_Phone, 
            T.Detail AS ProspectingCustomers_Detail, 
            T.ScheduleDate AS ProspectingCustomers_ScheduleDate, 
            T.CreatedOn AS ProspectingCustomers_CreatedOn, 
            T.CreatedBy AS ProspectingCustomers_CreatedBy, 
            T.ModifiedOn AS ProspectingCustomers_ModifiedOn, 
            T.ModifiedBy AS ProspectingCustomers_ModifiedBy, 
            T.CustomerId AS ProspectingCustomers_CustomerId, 
            T.ProspectingGoalId AS ProspectingCustomers_ProspectingGoalId, 
            T.CustomerSaleDataId AS ProspectingCustomers_CustomerSaleDataId, 
            T.AssignedToUserId AS ProspectingCustomers_AssignedToUserId, 
            T.AssignedOn AS ProspectingCustomers_AssignedOn, 
            T.AssignedBy AS ProspectingCustomers_AssignedBy, 
            T.UserId AS ProspectingCustomers_UserId, 
            True AS _from0
        FROM IPSData.ProspectingCustomers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ExpiredProspectingActivityReason.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView100()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExpiredProspectingActivityReason
        [IPSModel.Store.ExpiredProspectingActivityReason](T1.ExpiredProspectingActivityReason_Id, T1.ExpiredProspectingActivityReason_ProspectingActivityId, T1.ExpiredProspectingActivityReason_Reason, T1.ExpiredProspectingActivityReason_CreatedOn, T1.ExpiredProspectingActivityReason_CreatedBy)
    FROM (
        SELECT 
            T.Id AS ExpiredProspectingActivityReason_Id, 
            T.ProspectingActivityId AS ExpiredProspectingActivityReason_ProspectingActivityId, 
            T.Reason AS ExpiredProspectingActivityReason_Reason, 
            T.CreatedOn AS ExpiredProspectingActivityReason_CreatedOn, 
            T.CreatedBy AS ExpiredProspectingActivityReason_CreatedBy, 
            True AS _from0
        FROM IPSData.ExpiredProspectingActivityReasons AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Tasks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView101()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tasks
        [IPSModel.Store.Tasks](T1.Tasks_Id, T1.Tasks_Title, T1.Tasks_Description, T1.Tasks_TaskListId, T1.Tasks_IsCompleted, T1.Tasks_CompletedDate, T1.Tasks_CreatedById, T1.Tasks_CreatedByName, T1.Tasks_CreatedDate, T1.Tasks_DueDate, T1.Tasks_ParentTaskID, T1.Tasks_StartDate, T1.Tasks_StatusId, T1.Tasks_PriorityId, T1.Tasks_TimeEstimateMinutes, T1.Tasks_TimeSpentMinutes, T1.Tasks_AssignedToId, T1.Tasks_CategoryId, T1.Tasks_RecurrenceRule, T1.Tasks_TrainingId, T1.Tasks_NotificationTemplateId, T1.Tasks_IsSMSNotification, T1.Tasks_IsEmailNotification, T1.Tasks_ProfileId, T1.Tasks_StageId, T1.Tasks_EmailBefore, T1.Tasks_SmsBefore, T1.Tasks_ProjectId, T1.Tasks_MeetingNotificationTemplateId, T1.Tasks_FollowUpNotificationTemplateId, T1.Tasks_SalesNotificationTemplateId)
    FROM (
        SELECT 
            T.Id AS Tasks_Id, 
            T.Title AS Tasks_Title, 
            T.Description AS Tasks_Description, 
            T.TaskListId AS Tasks_TaskListId, 
            T.IsCompleted AS Tasks_IsCompleted, 
            T.CompletedDate AS Tasks_CompletedDate, 
            T.CreatedById AS Tasks_CreatedById, 
            T.CreatedByName AS Tasks_CreatedByName, 
            T.CreatedDate AS Tasks_CreatedDate, 
            T.DueDate AS Tasks_DueDate, 
            T.ParentTaskID AS Tasks_ParentTaskID, 
            T.StartDate AS Tasks_StartDate, 
            T.StatusId AS Tasks_StatusId, 
            T.PriorityId AS Tasks_PriorityId, 
            T.TimeEstimateMinutes AS Tasks_TimeEstimateMinutes, 
            T.TimeSpentMinutes AS Tasks_TimeSpentMinutes, 
            T.AssignedToId AS Tasks_AssignedToId, 
            T.CategoryId AS Tasks_CategoryId, 
            T.RecurrenceRule AS Tasks_RecurrenceRule, 
            T.TrainingId AS Tasks_TrainingId, 
            T.NotificationTemplateId AS Tasks_NotificationTemplateId, 
            T.IsSMSNotification AS Tasks_IsSMSNotification, 
            T.IsEmailNotification AS Tasks_IsEmailNotification, 
            T.ProfileId AS Tasks_ProfileId, 
            T.StageId AS Tasks_StageId, 
            T.EmailBefore AS Tasks_EmailBefore, 
            T.SmsBefore AS Tasks_SmsBefore, 
            T.ProjectId AS Tasks_ProjectId, 
            T.MeetingNotificationTemplateId AS Tasks_MeetingNotificationTemplateId, 
            T.FollowUpNotificationTemplateId AS Tasks_FollowUpNotificationTemplateId, 
            T.SalesNotificationTemplateId AS Tasks_SalesNotificationTemplateId, 
            True AS _from0
        FROM IPSData.Tasks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingCustomerOfferDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView102()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomerOfferDetail
        [IPSModel.Store.ProspectingCustomerOfferDetail](T1.ProspectingCustomerOfferDetail_Id, T1.ProspectingCustomerOfferDetail_ProspectingCustomerId, T1.ProspectingCustomerOfferDetail_Description, T1.ProspectingCustomerOfferDetail_OfferPrice, T1.ProspectingCustomerOfferDetail_OfferSentTime, T1.ProspectingCustomerOfferDetail_OfferSentBy, T1.ProspectingCustomerOfferDetail_OfferFollowUpScheduleDate)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomerOfferDetail_Id, 
            T.ProspectingCustomerId AS ProspectingCustomerOfferDetail_ProspectingCustomerId, 
            T.Description AS ProspectingCustomerOfferDetail_Description, 
            T.OfferPrice AS ProspectingCustomerOfferDetail_OfferPrice, 
            T.OfferSentTime AS ProspectingCustomerOfferDetail_OfferSentTime, 
            T.OfferSentBy AS ProspectingCustomerOfferDetail_OfferSentBy, 
            T.OfferFollowUpScheduleDate AS ProspectingCustomerOfferDetail_OfferFollowUpScheduleDate, 
            True AS _from0
        FROM IPSData.ProspectingCustomerOfferDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.OfferClosingDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView103()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OfferClosingDetail
        [IPSModel.Store.OfferClosingDetail](T1.OfferClosingDetail_Id, T1.OfferClosingDetail_ProspectingCustomerOfferDetailId, T1.OfferClosingDetail_Status, T1.OfferClosingDetail_Reason, T1.OfferClosingDetail_IsClosed, T1.OfferClosingDetail_ClosedTime, T1.OfferClosingDetail_ClosedBy, T1.OfferClosingDetail_Possibility, T1.OfferClosingDetail_WhatNext)
    FROM (
        SELECT 
            T.Id AS OfferClosingDetail_Id, 
            T.ProspectingCustomerOfferDetailId AS OfferClosingDetail_ProspectingCustomerOfferDetailId, 
            T.Status AS OfferClosingDetail_Status, 
            T.Reason AS OfferClosingDetail_Reason, 
            T.IsClosed AS OfferClosingDetail_IsClosed, 
            T.ClosedTime AS OfferClosingDetail_ClosedTime, 
            T.ClosedBy AS OfferClosingDetail_ClosedBy, 
            T.Possibility AS OfferClosingDetail_Possibility, 
            T.WhatNext AS OfferClosingDetail_WhatNext, 
            True AS _from0
        FROM IPSData.OfferClosingDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ProspectingCustomerSalesAgreedData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView104()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomerSalesAgreedData
        [IPSModel.Store.ProspectingCustomerSalesAgreedData](T1.ProspectingCustomerSalesAgreedData_Id, T1.ProspectingCustomerSalesAgreedData_SalesCategoryId, T1.ProspectingCustomerSalesAgreedData_Description, T1.ProspectingCustomerSalesAgreedData_Amount, T1.ProspectingCustomerSalesAgreedData_DeliveryDate, T1.ProspectingCustomerSalesAgreedData_ProspectingCustomerId, T1.ProspectingCustomerSalesAgreedData_ProspectingActivityId, T1.ProspectingCustomerSalesAgreedData_ProspectingCustomerResultId, T1.ProspectingCustomerSalesAgreedData_CreatedOn, T1.ProspectingCustomerSalesAgreedData_CreatedBy, T1.ProspectingCustomerSalesAgreedData_ModifiedOn, T1.ProspectingCustomerSalesAgreedData_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomerSalesAgreedData_Id, 
            T.SalesCategoryId AS ProspectingCustomerSalesAgreedData_SalesCategoryId, 
            T.Description AS ProspectingCustomerSalesAgreedData_Description, 
            T.Amount AS ProspectingCustomerSalesAgreedData_Amount, 
            T.DeliveryDate AS ProspectingCustomerSalesAgreedData_DeliveryDate, 
            T.ProspectingCustomerId AS ProspectingCustomerSalesAgreedData_ProspectingCustomerId, 
            T.ProspectingActivityId AS ProspectingCustomerSalesAgreedData_ProspectingActivityId, 
            T.ProspectingCustomerResultId AS ProspectingCustomerSalesAgreedData_ProspectingCustomerResultId, 
            T.CreatedOn AS ProspectingCustomerSalesAgreedData_CreatedOn, 
            T.CreatedBy AS ProspectingCustomerSalesAgreedData_CreatedBy, 
            T.ModifiedOn AS ProspectingCustomerSalesAgreedData_ModifiedOn, 
            T.ModifiedBy AS ProspectingCustomerSalesAgreedData_ModifiedBy, 
            True AS _from0
        FROM IPSData.ProspectingCustomerSalesAgreedDatas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IpsAttachmentFileDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView105()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsAttachmentFileDetail
        [IPSModel.Store.IpsAttachmentFileDetail](T1.IpsAttachmentFileDetail_Id, T1.IpsAttachmentFileDetail_IpsAttachmentId, T1.IpsAttachmentFileDetail_FileName)
    FROM (
        SELECT 
            T.Id AS IpsAttachmentFileDetail_Id, 
            T.IpsAttachmentId AS IpsAttachmentFileDetail_IpsAttachmentId, 
            T.FileName AS IpsAttachmentFileDetail_FileName, 
            True AS _from0
        FROM IPSData.IpsAttachmentFileDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IpsAttachments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView106()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsAttachments
        [IPSModel.Store.IpsAttachments](T1.IpsAttachments_Id, T1.IpsAttachments_Title, T1.IpsAttachments_Description, T1.IpsAttachments_CreatedOn, T1.IpsAttachments_CreatedBy)
    FROM (
        SELECT 
            T.Id AS IpsAttachments_Id, 
            T.Title AS IpsAttachments_Title, 
            T.Description AS IpsAttachments_Description, 
            T.CreatedOn AS IpsAttachments_CreatedOn, 
            T.CreatedBy AS IpsAttachments_CreatedBy, 
            True AS _from0
        FROM IPSData.IpsAttachments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IpsAttachmentUser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView107()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsAttachmentUser
        [IPSModel.Store.IpsAttachmentUser](T1.IpsAttachmentUser_Id, T1.IpsAttachmentUser_IpsAttachemntId, T1.IpsAttachmentUser_UserId, T1.IpsAttachmentUser_CreatedOn, T1.IpsAttachmentUser_CreatedBy)
    FROM (
        SELECT 
            T.Id AS IpsAttachmentUser_Id, 
            T.IpsAttachemntId AS IpsAttachmentUser_IpsAttachemntId, 
            T.UserId AS IpsAttachmentUser_UserId, 
            T.CreatedOn AS IpsAttachmentUser_CreatedOn, 
            T.CreatedBy AS IpsAttachmentUser_CreatedBy, 
            True AS _from0
        FROM IPSData.IpsAttachmentUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Stages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView108()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stages
        [IPSModel.Store.Stages](T1.Stages_Id, T1.Stages_Name, T1.Stages_StageGroupId, T1.Stages_StartDateTime, T1.Stages_EndDateTime, T1.Stages_EvaluationDurationMinutes, T1.Stages_EmailNotification, T1.Stages_SMSNotification, T1.Stages_GreenAlarmParticipantTemplateId, T1.Stages_GreenAlarmTime, T1.Stages_YellowAlarmParticipantTemplateId, T1.Stages_YellowAlarmTime, T1.Stages_RedAlarmParticipantTemplateId, T1.Stages_RedAlarmTime, T1.Stages_ExternalStartNotificationTemplateId, T1.Stages_ExternalCompletedNotificationTemplateId, T1.Stages_ExternalResultsNotificationTemplateId, T1.Stages_EvaluatorStartNotificationTemplateId, T1.Stages_EvaluatorCompletedNotificationTemplateId, T1.Stages_EvaluatorResultsNotificationTemplateId, T1.Stages_TrainerStartNotificationTemplateId, T1.Stages_TrainerCompletedNotificationTemplateId, T1.Stages_TrainerResultsNotificationTemplateId, T1.Stages_ManagerStartNotificationTemplateId, T1.Stages_ManagerCompletedNotificationTemplateId, T1.Stages_ManagerResultsNotificationTemplateId, T1.Stages_ManagerId, T1.Stages_TrainerId, T1.Stages_InvitedAt, T1.Stages_GreenAlarmEvaluatorTemplateId, T1.Stages_GreenAlarmManagerTemplateId, T1.Stages_GreenAlarmTrainerTemplateId, T1.Stages_YellowAlarmEvaluatorTemplateId, T1.Stages_YellowAlarmManagerTemplateId, T1.Stages_YellowAlarmTrainerTemplateId, T1.Stages_RedAlarmEvaluatorTemplateId, T1.Stages_RedAlarmManagerTemplateId, T1.Stages_RedAlarmTrainerTemplateId, T1.Stages_ProjectManagerStartNotificationTemplateId, T1.Stages_ProjectManagerCompletedNotificationTemplateId, T1.Stages_ProjectManagerResultsNotificationTemplateId, T1.Stages_ProjectManagerId, T1.Stages_GreenAlarmProjectManagerTemplateId, T1.Stages_YellowAlarmProjectManagerTemplateId, T1.Stages_RedAlarmProjectManagerTemplateId, T1.Stages_FinalScoreManagerStartNotificationTemplateId, T1.Stages_FinalScoreManagerCompletedNotificationTemplateId, T1.Stages_FinalScoreManagerResultsNotificationTemplateId, T1.Stages_GreenAlarmFinalScoreManagerTemplateId, T1.Stages_YellowAlarmFinalScoreManagerTemplateId, T1.Stages_RedAlarmFinalScoreManagerTemplateId, T1.Stages_EvaluationStartDate, T1.Stages_EvaluationEndDate, T1.Stages_CreatedOn, T1.Stages_CreatedBy, T1.Stages_ModifiedOn, T1.Stages_ModifiedBy, T1.Stages_IsPaused, T1.Stages_PausedAt, T1.Stages_IsStopped, T1.Stages_StoppedAt)
    FROM (
        SELECT 
            T.Id AS Stages_Id, 
            T.Name AS Stages_Name, 
            T.StageGroupId AS Stages_StageGroupId, 
            T.StartDateTime AS Stages_StartDateTime, 
            T.EndDateTime AS Stages_EndDateTime, 
            T.EvaluationDurationMinutes AS Stages_EvaluationDurationMinutes, 
            T.EmailNotification AS Stages_EmailNotification, 
            T.SMSNotification AS Stages_SMSNotification, 
            T.GreenAlarmParticipantTemplateId AS Stages_GreenAlarmParticipantTemplateId, 
            T.GreenAlarmTime AS Stages_GreenAlarmTime, 
            T.YellowAlarmParticipantTemplateId AS Stages_YellowAlarmParticipantTemplateId, 
            T.YellowAlarmTime AS Stages_YellowAlarmTime, 
            T.RedAlarmParticipantTemplateId AS Stages_RedAlarmParticipantTemplateId, 
            T.RedAlarmTime AS Stages_RedAlarmTime, 
            T.ExternalStartNotificationTemplateId AS Stages_ExternalStartNotificationTemplateId, 
            T.ExternalCompletedNotificationTemplateId AS Stages_ExternalCompletedNotificationTemplateId, 
            T.ExternalResultsNotificationTemplateId AS Stages_ExternalResultsNotificationTemplateId, 
            T.EvaluatorStartNotificationTemplateId AS Stages_EvaluatorStartNotificationTemplateId, 
            T.EvaluatorCompletedNotificationTemplateId AS Stages_EvaluatorCompletedNotificationTemplateId, 
            T.EvaluatorResultsNotificationTemplateId AS Stages_EvaluatorResultsNotificationTemplateId, 
            T.TrainerStartNotificationTemplateId AS Stages_TrainerStartNotificationTemplateId, 
            T.TrainerCompletedNotificationTemplateId AS Stages_TrainerCompletedNotificationTemplateId, 
            T.TrainerResultsNotificationTemplateId AS Stages_TrainerResultsNotificationTemplateId, 
            T.ManagerStartNotificationTemplateId AS Stages_ManagerStartNotificationTemplateId, 
            T.ManagerCompletedNotificationTemplateId AS Stages_ManagerCompletedNotificationTemplateId, 
            T.ManagerResultsNotificationTemplateId AS Stages_ManagerResultsNotificationTemplateId, 
            T.ManagerId AS Stages_ManagerId, 
            T.TrainerId AS Stages_TrainerId, 
            T.InvitedAt AS Stages_InvitedAt, 
            T.GreenAlarmEvaluatorTemplateId AS Stages_GreenAlarmEvaluatorTemplateId, 
            T.GreenAlarmManagerTemplateId AS Stages_GreenAlarmManagerTemplateId, 
            T.GreenAlarmTrainerTemplateId AS Stages_GreenAlarmTrainerTemplateId, 
            T.YellowAlarmEvaluatorTemplateId AS Stages_YellowAlarmEvaluatorTemplateId, 
            T.YellowAlarmManagerTemplateId AS Stages_YellowAlarmManagerTemplateId, 
            T.YellowAlarmTrainerTemplateId AS Stages_YellowAlarmTrainerTemplateId, 
            T.RedAlarmEvaluatorTemplateId AS Stages_RedAlarmEvaluatorTemplateId, 
            T.RedAlarmManagerTemplateId AS Stages_RedAlarmManagerTemplateId, 
            T.RedAlarmTrainerTemplateId AS Stages_RedAlarmTrainerTemplateId, 
            T.ProjectManagerStartNotificationTemplateId AS Stages_ProjectManagerStartNotificationTemplateId, 
            T.ProjectManagerCompletedNotificationTemplateId AS Stages_ProjectManagerCompletedNotificationTemplateId, 
            T.ProjectManagerResultsNotificationTemplateId AS Stages_ProjectManagerResultsNotificationTemplateId, 
            T.ProjectManagerId AS Stages_ProjectManagerId, 
            T.GreenAlarmProjectManagerTemplateId AS Stages_GreenAlarmProjectManagerTemplateId, 
            T.YellowAlarmProjectManagerTemplateId AS Stages_YellowAlarmProjectManagerTemplateId, 
            T.RedAlarmProjectManagerTemplateId AS Stages_RedAlarmProjectManagerTemplateId, 
            T.FinalScoreManagerStartNotificationTemplateId AS Stages_FinalScoreManagerStartNotificationTemplateId, 
            T.FinalScoreManagerCompletedNotificationTemplateId AS Stages_FinalScoreManagerCompletedNotificationTemplateId, 
            T.FinalScoreManagerResultsNotificationTemplateId AS Stages_FinalScoreManagerResultsNotificationTemplateId, 
            T.GreenAlarmFinalScoreManagerTemplateId AS Stages_GreenAlarmFinalScoreManagerTemplateId, 
            T.YellowAlarmFinalScoreManagerTemplateId AS Stages_YellowAlarmFinalScoreManagerTemplateId, 
            T.RedAlarmFinalScoreManagerTemplateId AS Stages_RedAlarmFinalScoreManagerTemplateId, 
            T.EvaluationStartDate AS Stages_EvaluationStartDate, 
            T.EvaluationEndDate AS Stages_EvaluationEndDate, 
            T.CreatedOn AS Stages_CreatedOn, 
            T.CreatedBy AS Stages_CreatedBy, 
            T.ModifiedOn AS Stages_ModifiedOn, 
            T.ModifiedBy AS Stages_ModifiedBy, 
            T.IsPaused AS Stages_IsPaused, 
            T.PausedAt AS Stages_PausedAt, 
            T.IsStopped AS Stages_IsStopped, 
            T.StoppedAt AS Stages_StoppedAt, 
            True AS _from0
        FROM IPSData.Stages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_DepartmentUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView109()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_DepartmentUsers
        [IPSModel.Store.Link_DepartmentUsers](T1.[Link_DepartmentUsers.DepartmentId], T1.[Link_DepartmentUsers.UserId])
    FROM (
        SELECT 
            Key(T.Department).Id AS [Link_DepartmentUsers.DepartmentId], 
            Key(T.User).Id AS [Link_DepartmentUsers.UserId], 
            True AS _from0
        FROM IPSData.Link_DepartmentUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_UsersJobPositions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView110()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_UsersJobPositions
        [IPSModel.Store.Link_UsersJobPositions](T1.[Link_UsersJobPositions.UserId], T1.[Link_UsersJobPositions.JobPositionId])
    FROM (
        SELECT 
            Key(T.User).Id AS [Link_UsersJobPositions.UserId], 
            Key(T.JobPosition).Id AS [Link_UsersJobPositions.JobPositionId], 
            True AS _from0
        FROM IPSData.Link_UsersJobPositions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_IndustrySkills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView111()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_IndustrySkills
        [IPSModel.Store.Link_IndustrySkills](T1.[Link_IndustrySkills.IndustryId], T1.[Link_IndustrySkills.SkillId])
    FROM (
        SELECT 
            Key(T.Industry).Id AS [Link_IndustrySkills.IndustryId], 
            Key(T.Skill).Id AS [Link_IndustrySkills.SkillId], 
            True AS _from0
        FROM IPSData.Link_IndustrySkills AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_SkillTargetAudience.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView112()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SkillTargetAudience
        [IPSModel.Store.Link_SkillTargetAudience](T1.[Link_SkillTargetAudience.SkillId], T1.[Link_SkillTargetAudience.JobPositionID])
    FROM (
        SELECT 
            Key(T.Skill).Id AS [Link_SkillTargetAudience.SkillId], 
            Key(T.JobPosition).Id AS [Link_SkillTargetAudience.JobPositionID], 
            True AS _from0
        FROM IPSData.Link_SkillTargetAudience AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_SkillQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView113()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SkillQuestions
        [IPSModel.Store.Link_SkillQuestions](T1.[Link_SkillQuestions.QuestionId], T1.[Link_SkillQuestions.SkillId])
    FROM (
        SELECT 
            Key(T.Question).Id AS [Link_SkillQuestions.QuestionId], 
            Key(T.Skill).Id AS [Link_SkillQuestions.SkillId], 
            True AS _from0
        FROM IPSData.Link_SkillQuestions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_PerformanceGroupGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView114()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupGoals
        [IPSModel.Store.Link_PerformanceGroupGoals](T1.[Link_PerformanceGroupGoals.PerformanceGroupId], T1.[Link_PerformanceGroupGoals.GoalId])
    FROM (
        SELECT 
            Key(T.PerformanceGroup).Id AS [Link_PerformanceGroupGoals.PerformanceGroupId], 
            Key(T.ScorecardGoal).Id AS [Link_PerformanceGroupGoals.GoalId], 
            True AS _from0
        FROM IPSData.Link_PerformanceGroupGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_PerformanceGroupProfileTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView115()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupProfileTypes
        [IPSModel.Store.Link_PerformanceGroupProfileTypes](T1.[Link_PerformanceGroupProfileTypes.PerformanceGroupId], T1.[Link_PerformanceGroupProfileTypes.ProfileTypeID])
    FROM (
        SELECT 
            Key(T.PerformanceGroup).Id AS [Link_PerformanceGroupProfileTypes.PerformanceGroupId], 
            Key(T.ProfileType).Id AS [Link_PerformanceGroupProfileTypes.ProfileTypeID], 
            True AS _from0
        FROM IPSData.Link_PerformanceGroupProfileTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_PerformanceGroupTargetAudience.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView116()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupTargetAudience
        [IPSModel.Store.Link_PerformanceGroupTargetAudience](T1.[Link_PerformanceGroupTargetAudience.PerformanceGroupId], T1.[Link_PerformanceGroupTargetAudience.JobPositionID])
    FROM (
        SELECT 
            Key(T.PerformanceGroup).Id AS [Link_PerformanceGroupTargetAudience.PerformanceGroupId], 
            Key(T.JobPosition).Id AS [Link_PerformanceGroupTargetAudience.JobPositionID], 
            True AS _from0
        FROM IPSData.Link_PerformanceGroupTargetAudience AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_ProfileTargetAudience.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView117()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProfileTargetAudience
        [IPSModel.Store.Link_ProfileTargetAudience](T1.[Link_ProfileTargetAudience.ProfileId], T1.[Link_ProfileTargetAudience.JobPositionID])
    FROM (
        SELECT 
            Key(T.Profile).Id AS [Link_ProfileTargetAudience.ProfileId], 
            Key(T.JobPosition).Id AS [Link_ProfileTargetAudience.JobPositionID], 
            True AS _from0
        FROM IPSData.Link_ProfileTargetAudience AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_OrganizationPartners.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView118()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_OrganizationPartners
        [IPSModel.Store.Link_OrganizationPartners](T1.[Link_OrganizationPartners.OrganizationId], T1.[Link_OrganizationPartners.PartnerOrganizationId])
    FROM (
        SELECT 
            Key(T.Organization1).Id AS [Link_OrganizationPartners.OrganizationId], 
            Key(T.Organization).Id AS [Link_OrganizationPartners.PartnerOrganizationId], 
            True AS _from0
        FROM IPSData.Link_OrganizationPartners AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_SkillTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView119()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SkillTrainings
        [IPSModel.Store.Link_SkillTrainings](T1.[Link_SkillTrainings.SkillId], T1.[Link_SkillTrainings.TrainingId])
    FROM (
        SELECT 
            Key(T.Skill).Id AS [Link_SkillTrainings.SkillId], 
            Key(T.Training).Id AS [Link_SkillTrainings.TrainingId], 
            True AS _from0
        FROM IPSData.Link_SkillTrainings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_PerformanceGroupQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView120()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupQuestions
        [IPSModel.Store.Link_PerformanceGroupQuestions](T1.[Link_PerformanceGroupQuestions.PerformanceGroupSkillId], T1.[Link_PerformanceGroupQuestions.QuestionId])
    FROM (
        SELECT 
            Key(T.Link_PerformanceGroupSkills).Id AS [Link_PerformanceGroupQuestions.PerformanceGroupSkillId], 
            Key(T.Question).Id AS [Link_PerformanceGroupQuestions.QuestionId], 
            True AS _from0
        FROM IPSData.Link_PerformanceGroupQuestions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_PerformancGroupTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView121()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformancGroupTrainings
        [IPSModel.Store.Link_PerformancGroupTrainings](T1.[Link_PerformancGroupTrainings.PerformanceGroupSkillId], T1.[Link_PerformancGroupTrainings.TrainingId])
    FROM (
        SELECT 
            Key(T.Link_PerformanceGroupSkills).Id AS [Link_PerformancGroupTrainings.PerformanceGroupSkillId], 
            Key(T.Training).Id AS [Link_PerformancGroupTrainings.TrainingId], 
            True AS _from0
        FROM IPSData.Link_PerformancGroupTrainings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_EvaluationAgreementTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView122()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_EvaluationAgreementTrainings
        [IPSModel.Store.Link_EvaluationAgreementTrainings](T1.[Link_EvaluationAgreementTrainings.EvaluationAgreementId], T1.[Link_EvaluationAgreementTrainings.TrainingId])
    FROM (
        SELECT 
            Key(T.EvaluationAgreement).Id AS [Link_EvaluationAgreementTrainings.EvaluationAgreementId], 
            Key(T.Training).Id AS [Link_EvaluationAgreementTrainings.TrainingId], 
            True AS _from0
        FROM IPSData.Link_EvaluationAgreementTrainings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_SurveyAnswersTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView123()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SurveyAnswersTrainings
        [IPSModel.Store.Link_SurveyAnswersTrainings](T1.[Link_SurveyAnswersTrainings.TrainingId], T1.[Link_SurveyAnswersTrainings.SurveyAnswerId])
    FROM (
        SELECT 
            Key(T.Training).Id AS [Link_SurveyAnswersTrainings.TrainingId], 
            Key(T.SurveyAnswer).Id AS [Link_SurveyAnswersTrainings.SurveyAnswerId], 
            True AS _from0
        FROM IPSData.Link_SurveyAnswersTrainings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Link_ProfileStageGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView124()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProfileStageGroups
        [IPSModel.Store.Link_ProfileStageGroups](T1.[Link_ProfileStageGroups.ProfileId], T1.[Link_ProfileStageGroups.StageGroupId])
    FROM (
        SELECT 
            Key(T.Profile).Id AS [Link_ProfileStageGroups.ProfileId], 
            Key(T.StageGroup).Id AS [Link_ProfileStageGroups.StageGroupId], 
            True AS _from0
        FROM IPSData.Link_ProfileStageGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Answers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView125()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Answers
        [IPSModel.Answer](T1.Answer_Id, T1.Answer_ParticipantId, T1.Answer_QuestionId, T1.Answer_IsCorrect, T1.Answer_StageId, T1.Answer_Answer1, T1.Answer_KPIType, T1.Answer_Comment)
    FROM (
        SELECT 
            T.Id AS Answer_Id, 
            T.ParticipantId AS Answer_ParticipantId, 
            T.QuestionId AS Answer_QuestionId, 
            T.IsCorrect AS Answer_IsCorrect, 
            T.StageId AS Answer_StageId, 
            T.Answer AS Answer_Answer1, 
            T.KPIType AS Answer_KPIType, 
            T.Comment AS Answer_Comment, 
            True AS _from0
        FROM IPSModelStoreContainer.Answers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.AnswerTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView126()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AnswerTypes
        [IPSModel.AnswerType](T1.AnswerType_Id, T1.AnswerType_TypeName)
    FROM (
        SELECT 
            T.Id AS AnswerType_Id, 
            T.TypeName AS AnswerType_TypeName, 
            True AS _from0
        FROM IPSModelStoreContainer.AnswerType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Cultures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView127()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Cultures
        [IPSModel.Culture](T1.Culture_Id, T1.Culture_CultureName, T1.Culture_CultureIdentifier, T1.Culture_Region, T1.Culture_IsActive)
    FROM (
        SELECT 
            T.Id AS Culture_Id, 
            T.CultureName AS Culture_CultureName, 
            T.CultureIdentifier AS Culture_CultureIdentifier, 
            T.Region AS Culture_Region, 
            T.IsActive AS Culture_IsActive, 
            True AS _from0
        FROM IPSModelStoreContainer.Cultures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Departments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView128()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Departments
        [IPSModel.Department](T1.Department_Id, T1.Department_Name, T1.Department_OrganizationId, T1.Department_Description, T1.Department_ManagerId, T1.Department_Phone, T1.Department_Email, T1.Department_IsActive, T1.Department_ParentId)
    FROM (
        SELECT 
            T.Id AS Department_Id, 
            T.Name AS Department_Name, 
            T.OrganizationId AS Department_OrganizationId, 
            T.Description AS Department_Description, 
            T.ManagerId AS Department_ManagerId, 
            T.Phone AS Department_Phone, 
            T.Email AS Department_Email, 
            T.IsActive AS Department_IsActive, 
            T.ParentId AS Department_ParentId, 
            True AS _from0
        FROM IPSModelStoreContainer.Departments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.DurationMetrics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView129()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DurationMetrics
        [IPSModel.DurationMetric](T1.DurationMetric_Id, T1.DurationMetric_Name)
    FROM (
        SELECT 
            T.Id AS DurationMetric_Id, 
            T.Name AS DurationMetric_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.DurationMetrics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.EvaluationRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView130()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationRoles
        [IPSModel.EvaluationRole](T1.EvaluationRole_Id, T1.EvaluationRole_Name)
    FROM (
        SELECT 
            T.Id AS EvaluationRole_Id, 
            T.Name AS EvaluationRole_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.EvaluationRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Industries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView131()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Industries
        [IPSModel.Industry](T1.Industry_Id, T1.Industry_Name, T1.Industry_Description, T1.Industry_ParentId, T1.Industry_OrganizationId)
    FROM (
        SELECT 
            T.Id AS Industry_Id, 
            T.Name AS Industry_Name, 
            T.Description AS Industry_Description, 
            T.ParentId AS Industry_ParentId, 
            T.OrganizationId AS Industry_OrganizationId, 
            True AS _from0
        FROM IPSModelStoreContainer.Industries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.KTMedalRules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView132()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing KTMedalRules
        [IPSModel.KTMedalRule](T1.KTMedalRule_Id, T1.KTMedalRule_Name, T1.KTMedalRule_BronzeStart, T1.KTMedalRule_BronzeEnd, T1.KTMedalRule_SilverEnd)
    FROM (
        SELECT 
            T.Id AS KTMedalRule_Id, 
            T.Name AS KTMedalRule_Name, 
            T.BronzeStart AS KTMedalRule_BronzeStart, 
            T.BronzeEnd AS KTMedalRule_BronzeEnd, 
            T.SilverEnd AS KTMedalRule_SilverEnd, 
            True AS _from0
        FROM IPSModelStoreContainer.KTMedalRules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_TeamUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView133()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_TeamUsers
        [IPSModel.Link_TeamUsers](T1.[Link_TeamUsers.TeamId], T1.[Link_TeamUsers.UserId], T1.[Link_TeamUsers.RoleInTeam])
    FROM (
        SELECT 
            T.TeamId AS [Link_TeamUsers.TeamId], 
            T.UserId AS [Link_TeamUsers.UserId], 
            T.RoleInTeam AS [Link_TeamUsers.RoleInTeam], 
            True AS _from0
        FROM IPSModelStoreContainer.Link_TeamUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_TrainingParticipants.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView134()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_TrainingParticipants
        [IPSModel.Link_TrainingParticipants](T1.[Link_TrainingParticipants.TrainingId], T1.[Link_TrainingParticipants.UserId])
    FROM (
        SELECT 
            T.TrainingId AS [Link_TrainingParticipants.TrainingId], 
            T.UserId AS [Link_TrainingParticipants.UserId], 
            True AS _from0
        FROM IPSModelStoreContainer.Link_TrainingParticipants AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.MeasureUnits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView135()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MeasureUnits
        [IPSModel.MeasureUnit](T1.MeasureUnit_Id, T1.MeasureUnit_Name)
    FROM (
        SELECT 
            T.Id AS MeasureUnit_Id, 
            T.Name AS MeasureUnit_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.MeasureUnits AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProfileCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView136()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProfileCategories
        [IPSModel.ProfileCategory](T1.ProfileCategory_Id, T1.ProfileCategory_Name, T1.ProfileCategory_OrganizationId)
    FROM (
        SELECT 
            T.Id AS ProfileCategory_Id, 
            T.Name AS ProfileCategory_Name, 
            T.OrganizationId AS ProfileCategory_OrganizationId, 
            True AS _from0
        FROM IPSModelStoreContainer.ProfileCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProfileScaleSettingsRules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView137()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProfileScaleSettingsRules
        [IPSModel.ProfileScaleSettingsRule](T1.ProfileScaleSettingsRule_Id, T1.ProfileScaleSettingsRule_Name)
    FROM (
        SELECT 
            T.Id AS ProfileScaleSettingsRule_Id, 
            T.Name AS ProfileScaleSettingsRule_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.ProfileScaleSettingsRules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProfileTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView138()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProfileTypes
        [IPSModel.ProfileType](T1.ProfileType_Id, T1.ProfileType_Name, T1.ProfileType_IsStandard, T1.ProfileType_OrganizationId)
    FROM (
        SELECT 
            T.Id AS ProfileType_Id, 
            T.Name AS ProfileType_Name, 
            T.IsStandard AS ProfileType_IsStandard, 
            T.OrganizationId AS ProfileType_OrganizationId, 
            True AS _from0
        FROM IPSModelStoreContainer.ProfileTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ScorecardGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView139()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScorecardGoals
        [IPSModel.ScorecardGoal](T1.ScorecardGoal_Id, T1.ScorecardGoal_Title, T1.ScorecardGoal_Description, T1.ScorecardGoal_OrganizationId, T1.ScorecardGoal_IsActive)
    FROM (
        SELECT 
            T.Id AS ScorecardGoal_Id, 
            T.Title AS ScorecardGoal_Title, 
            T.Description AS ScorecardGoal_Description, 
            T.OrganizationId AS ScorecardGoal_OrganizationId, 
            T.IsActive AS ScorecardGoal_IsActive, 
            True AS _from0
        FROM IPSModelStoreContainer.ScorecardGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ScorecardPerspectives.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView140()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScorecardPerspectives
        [IPSModel.ScorecardPerspective](T1.ScorecardPerspective_Id, T1.ScorecardPerspective_Name, T1.ScorecardPerspective_OrganizationId)
    FROM (
        SELECT 
            T.Id AS ScorecardPerspective_Id, 
            T.Name AS ScorecardPerspective_Name, 
            T.OrganizationId AS ScorecardPerspective_OrganizationId, 
            True AS _from0
        FROM IPSModelStoreContainer.ScorecardPerspectives AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.StructureLevels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView141()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StructureLevels
        [IPSModel.StructureLevel](T1.StructureLevel_Id, T1.StructureLevel_Name)
    FROM (
        SELECT 
            T.Id AS StructureLevel_Id, 
            T.Name AS StructureLevel_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.StructureLevels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskCategoryLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView142()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskCategoryLists
        [IPSModel.TaskCategoryList](T1.TaskCategoryList_Id, T1.TaskCategoryList_Name, T1.TaskCategoryList_Description, T1.TaskCategoryList_IsTemplate, T1.TaskCategoryList_OrganizationId, T1.TaskCategoryList_DepartmentId, T1.TaskCategoryList_TeamId, T1.TaskCategoryList_UserId)
    FROM (
        SELECT 
            T.Id AS TaskCategoryList_Id, 
            T.Name AS TaskCategoryList_Name, 
            T.Description AS TaskCategoryList_Description, 
            T.IsTemplate AS TaskCategoryList_IsTemplate, 
            T.OrganizationId AS TaskCategoryList_OrganizationId, 
            T.DepartmentId AS TaskCategoryList_DepartmentId, 
            T.TeamId AS TaskCategoryList_TeamId, 
            T.UserId AS TaskCategoryList_UserId, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskCategoryLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskPriorityListItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView143()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskPriorityListItems
        [IPSModel.TaskPriorityListItem](T1.TaskPriorityListItem_Id, T1.TaskPriorityListItem_PriorityNo, T1.TaskPriorityListItem_Name, T1.TaskPriorityListItem_PriorityListId, T1.TaskPriorityListItem_Description)
    FROM (
        SELECT 
            T.Id AS TaskPriorityListItem_Id, 
            T.PriorityNo AS TaskPriorityListItem_PriorityNo, 
            T.Name AS TaskPriorityListItem_Name, 
            T.PriorityListId AS TaskPriorityListItem_PriorityListId, 
            T.Description AS TaskPriorityListItem_Description, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskPriorityListItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskPriorityLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView144()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskPriorityLists
        [IPSModel.TaskPriorityList](T1.TaskPriorityList_Id, T1.TaskPriorityList_Name, T1.TaskPriorityList_Description, T1.TaskPriorityList_IsTemplate, T1.TaskPriorityList_OrganizationId, T1.TaskPriorityList_DepartmentId, T1.TaskPriorityList_TeamId, T1.TaskPriorityList_UserId)
    FROM (
        SELECT 
            T.Id AS TaskPriorityList_Id, 
            T.Name AS TaskPriorityList_Name, 
            T.Description AS TaskPriorityList_Description, 
            T.IsTemplate AS TaskPriorityList_IsTemplate, 
            T.OrganizationId AS TaskPriorityList_OrganizationId, 
            T.DepartmentId AS TaskPriorityList_DepartmentId, 
            T.TeamId AS TaskPriorityList_TeamId, 
            T.UserId AS TaskPriorityList_UserId, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskPriorityLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskStatusListItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView145()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskStatusListItems
        [IPSModel.TaskStatusListItem](T1.TaskStatusListItem_Id, T1.TaskStatusListItem_Name, T1.TaskStatusListItem_Description, T1.TaskStatusListItem_TaskStatusListId, T1.TaskStatusListItem_SeqNo)
    FROM (
        SELECT 
            T.Id AS TaskStatusListItem_Id, 
            T.Name AS TaskStatusListItem_Name, 
            T.Description AS TaskStatusListItem_Description, 
            T.TaskStatusListId AS TaskStatusListItem_TaskStatusListId, 
            T.SeqNo AS TaskStatusListItem_SeqNo, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskStatusListItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskStatusLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView146()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskStatusLists
        [IPSModel.TaskStatusList](T1.TaskStatusList_Id, T1.TaskStatusList_Name, T1.TaskStatusList_Description, T1.TaskStatusList_IsTemplate, T1.TaskStatusList_OrganizationId, T1.TaskStatusList_DepartmentId, T1.TaskStatusList_TeamId, T1.TaskStatusList_UserId)
    FROM (
        SELECT 
            T.Id AS TaskStatusList_Id, 
            T.Name AS TaskStatusList_Name, 
            T.Description AS TaskStatusList_Description, 
            T.IsTemplate AS TaskStatusList_IsTemplate, 
            T.OrganizationId AS TaskStatusList_OrganizationId, 
            T.DepartmentId AS TaskStatusList_DepartmentId, 
            T.TeamId AS TaskStatusList_TeamId, 
            T.UserId AS TaskStatusList_UserId, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskStatusLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.UserTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView147()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserTypes
        [IPSModel.UserType](T1.UserType_Id, T1.UserType_UserType1)
    FROM (
        SELECT 
            T.Id AS UserType_Id, 
            T.UserType AS UserType_UserType1, 
            True AS _from0
        FROM IPSModelStoreContainer.UserTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView148()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [IPSModel.User](T1.User_Id, T1.User_UserKey, T1.User_UserTypeId, T1.User_OrganizationId, T1.User_FirstName, T1.User_LastName, T1.User_Country, T1.User_City, T1.User_State, T1.User_Address1, T1.User_Address2, T1.User_Zip, T1.User_ImagePath, T1.User_Skype, T1.User_Twitter, T1.User_Facebook, T1.User_Linkedin, T1.User_MobileNo, T1.User_WorkPhoneNo, T1.User_PrivatePhoneNo, T1.User_WorkEmail, T1.User_PrivateEmail, T1.User_CultureId, T1.User_WebSite, T1.User_Remarks, T1.User_IsActive, T1.User_BirthDate, T1.User_Gender)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.UserKey AS User_UserKey, 
            T.UserTypeId AS User_UserTypeId, 
            T.OrganizationId AS User_OrganizationId, 
            T.FirstName AS User_FirstName, 
            T.LastName AS User_LastName, 
            T.Country AS User_Country, 
            T.City AS User_City, 
            T.State AS User_State, 
            T.Address1 AS User_Address1, 
            T.Address2 AS User_Address2, 
            T.Zip AS User_Zip, 
            T.ImagePath AS User_ImagePath, 
            T.Skype AS User_Skype, 
            T.Twitter AS User_Twitter, 
            T.Facebook AS User_Facebook, 
            T.Linkedin AS User_Linkedin, 
            T.MobileNo AS User_MobileNo, 
            T.WorkPhoneNo AS User_WorkPhoneNo, 
            T.PrivatePhoneNo AS User_PrivatePhoneNo, 
            T.WorkEmail AS User_WorkEmail, 
            T.PrivateEmail AS User_PrivateEmail, 
            T.CultureId AS User_CultureId, 
            T.WebSite AS User_WebSite, 
            T.Remarks AS User_Remarks, 
            T.IsActive AS User_IsActive, 
            T.BirthDate AS User_BirthDate, 
            T.Gender AS User_Gender, 
            True AS _from0
        FROM IPSModelStoreContainer.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.JobPositions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView149()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JobPositions
        [IPSModel.JobPosition](T1.JobPosition_Id, T1.JobPosition_JobPosition1)
    FROM (
        SELECT 
            T.Id AS JobPosition_Id, 
            T.JobPosition AS JobPosition_JobPosition1, 
            True AS _from0
        FROM IPSModelStoreContainer.JobPositions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Countries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView150()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Countries
        [IPSModel.Country](T1.Country_Id, T1.Country_CountryName, T1.Country_FlagImage)
    FROM (
        SELECT 
            T.Id AS Country_Id, 
            T.CountryName AS Country_CountryName, 
            T.FlagImage AS Country_FlagImage, 
            True AS _from0
        FROM IPSModelStoreContainer.Countries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ScaleCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView151()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScaleCategories
        [IPSModel.ScaleCategory](T1.ScaleCategory_Id, T1.ScaleCategory_Name)
    FROM (
        SELECT 
            T.Id AS ScaleCategory_Id, 
            T.Name AS ScaleCategory_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.ScaleCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Teams.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView152()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Teams
        [IPSModel.Team](T1.Team_Id, T1.Team_Name, T1.Team_DepartmentId, T1.Team_OrganizationId, T1.Team_Description, T1.Team_TeamLeadId, T1.Team_Phone, T1.Team_Email, T1.Team_IsActive)
    FROM (
        SELECT 
            T.Id AS Team_Id, 
            T.Name AS Team_Name, 
            T.DepartmentId AS Team_DepartmentId, 
            T.OrganizationId AS Team_OrganizationId, 
            T.Description AS Team_Description, 
            T.TeamLeadId AS Team_TeamLeadId, 
            T.Phone AS Team_Phone, 
            T.Email AS Team_Email, 
            T.IsActive AS Team_IsActive, 
            True AS _from0
        FROM IPSModelStoreContainer.Teams AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Scales.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView153()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Scales
        [IPSModel.Scale](T1.Scale_Id, T1.Scale_Name, T1.Scale_Description, T1.Scale_ScaleCategoryId, T1.Scale_MeasureUnitId, T1.Scale_IncludeNotRelevant, T1.Scale_IsTemplate, T1.Scale_ProfileType)
    FROM (
        SELECT 
            T.Id AS Scale_Id, 
            T.Name AS Scale_Name, 
            T.Description AS Scale_Description, 
            T.ScaleCategoryId AS Scale_ScaleCategoryId, 
            T.MeasureUnitId AS Scale_MeasureUnitId, 
            T.IncludeNotRelevant AS Scale_IncludeNotRelevant, 
            T.IsTemplate AS Scale_IsTemplate, 
            T.ProfileType AS Scale_ProfileType, 
            True AS _from0
        FROM IPSModelStoreContainer.Scales AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TrainingLevels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView154()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingLevels
        [IPSModel.TrainingLevel](T1.TrainingLevel_Id, T1.TrainingLevel_Name)
    FROM (
        SELECT 
            T.Id AS TrainingLevel_Id, 
            T.Name AS TrainingLevel_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.TrainingLevels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TrainingTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView155()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingTypes
        [IPSModel.TrainingType](T1.TrainingType_Id, T1.TrainingType_Name)
    FROM (
        SELECT 
            T.Id AS TrainingType_Id, 
            T.Name AS TrainingType_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.TrainingTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TrainingDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView156()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingDescriptions
        [IPSModel.TrainingDescription](T1.TrainingDescription_Id, T1.TrainingDescription_DescriptionType, T1.TrainingDescription_Description, T1.TrainingDescription_SkillId)
    FROM (
        SELECT 
            T.Id AS TrainingDescription_Id, 
            T.DescriptionType AS TrainingDescription_DescriptionType, 
            T.Description AS TrainingDescription_Description, 
            T.SkillId AS TrainingDescription_SkillId, 
            True AS _from0
        FROM IPSModelStoreContainer.TrainingDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.LookupItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView157()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LookupItems
        [IPSModel.LookupItem](T1.LookupItem_Id, T1.LookupItem_LookupItemType, T1.LookupItem_Name, T1.LookupItem_Description)
    FROM (
        SELECT 
            T.Id AS LookupItem_Id, 
            T.LookupItemType AS LookupItem_LookupItemType, 
            T.Name AS LookupItem_Name, 
            T.Description AS LookupItem_Description, 
            True AS _from0
        FROM IPSModelStoreContainer.LookupItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Skills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView158()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Skills
        [IPSModel.Skill](T1.Skill_Id, T1.Skill_Name, T1.Skill_Description, T1.Skill_ParentId, T1.Skill_OrganizationId, T1.Skill_IsTemplate, T1.Skill_StructureLevelId, T1.Skill_IsActive, T1.Skill_ProfileTypeId, T1.Skill_CreatedBy, T1.Skill_CreatedOn, T1.Skill_ModifiedBy, T1.Skill_ModifiedOn, T1.Skill_CreatedAsRoleId, T1.Skill_ModifiedAsRoleId, T1.Skill_SeqNo)
    FROM (
        SELECT 
            T.Id AS Skill_Id, 
            T.Name AS Skill_Name, 
            T.Description AS Skill_Description, 
            T.ParentId AS Skill_ParentId, 
            T.OrganizationId AS Skill_OrganizationId, 
            T.IsTemplate AS Skill_IsTemplate, 
            T.StructureLevelId AS Skill_StructureLevelId, 
            T.IsActive AS Skill_IsActive, 
            T.ProfileTypeId AS Skill_ProfileTypeId, 
            T.CreatedBy AS Skill_CreatedBy, 
            T.CreatedOn AS Skill_CreatedOn, 
            T.ModifiedBy AS Skill_ModifiedBy, 
            T.ModifiedOn AS Skill_ModifiedOn, 
            T.CreatedAsRoleId AS Skill_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Skill_ModifiedAsRoleId, 
            T.SeqNo AS Skill_SeqNo, 
            True AS _from0
        FROM IPSModelStoreContainer.Skills AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Questions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView159()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Questions
        [IPSModel.Question](T1.Question_Id, T1.Question_QuestionText, T1.Question_Description, T1.Question_AnswerTypeId, T1.Question_IsActive, T1.Question_IsTemplate, T1.Question_OrganizationId, T1.Question_ProfileTypeId, T1.Question_ScaleId, T1.Question_QuestionSettings, T1.Question_StructureLevelId, T1.Question_IndustryId, T1.Question_SeqNo, T1.Question_Points, T1.Question_TimeForQuestion, T1.Question_ParentQuestionId)
    FROM (
        SELECT 
            T.Id AS Question_Id, 
            T.QuestionText AS Question_QuestionText, 
            T.Description AS Question_Description, 
            T.AnswerTypeId AS Question_AnswerTypeId, 
            T.IsActive AS Question_IsActive, 
            T.IsTemplate AS Question_IsTemplate, 
            T.OrganizationId AS Question_OrganizationId, 
            T.ProfileTypeId AS Question_ProfileTypeId, 
            T.ScaleId AS Question_ScaleId, 
            T.QuestionSettings AS Question_QuestionSettings, 
            T.StructureLevelId AS Question_StructureLevelId, 
            T.IndustryId AS Question_IndustryId, 
            T.SeqNo AS Question_SeqNo, 
            T.Points AS Question_Points, 
            T.TimeForQuestion AS Question_TimeForQuestion, 
            T.ParentQuestionId AS Question_ParentQuestionId, 
            True AS _from0
        FROM IPSModelStoreContainer.Questions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.PerformanceGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView160()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PerformanceGroups
        [IPSModel.PerformanceGroup](T1.PerformanceGroup_Id, T1.PerformanceGroup_Name, T1.PerformanceGroup_Description, T1.PerformanceGroup_OrganizationId, T1.PerformanceGroup_IsTemplate, T1.PerformanceGroup_ParentId, T1.PerformanceGroup_LevelId, T1.PerformanceGroup_IndustryId, T1.PerformanceGroup_ScorecardPerspectiveId, T1.PerformanceGroup_IsActive, T1.PerformanceGroup_SeqNo, T1.PerformanceGroup_ScaleId, T1.PerformanceGroup_ProfileId, T1.PerformanceGroup_TrainingComments)
    FROM (
        SELECT 
            T.Id AS PerformanceGroup_Id, 
            T.Name AS PerformanceGroup_Name, 
            T.Description AS PerformanceGroup_Description, 
            T.OrganizationId AS PerformanceGroup_OrganizationId, 
            T.IsTemplate AS PerformanceGroup_IsTemplate, 
            T.ParentId AS PerformanceGroup_ParentId, 
            T.LevelId AS PerformanceGroup_LevelId, 
            T.IndustryId AS PerformanceGroup_IndustryId, 
            T.ScorecardPerspectiveId AS PerformanceGroup_ScorecardPerspectiveId, 
            T.IsActive AS PerformanceGroup_IsActive, 
            T.SeqNo AS PerformanceGroup_SeqNo, 
            T.ScaleId AS PerformanceGroup_ScaleId, 
            T.ProfileId AS PerformanceGroup_ProfileId, 
            T.TrainingComments AS PerformanceGroup_TrainingComments, 
            True AS _from0
        FROM IPSModelStoreContainer.PerformanceGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TrainingMaterials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView161()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingMaterials
        [IPSModel.TrainingMaterial](T1.TrainingMaterial_Id, T1.TrainingMaterial_Title, T1.TrainingMaterial_Name, T1.TrainingMaterial_Description, T1.TrainingMaterial_TrainingId, T1.TrainingMaterial_MaterialType, T1.TrainingMaterial_ResourceType, T1.TrainingMaterial_Link, T1.TrainingMaterial_CreatedBy, T1.TrainingMaterial_CreatedOn)
    FROM (
        SELECT 
            T.Id AS TrainingMaterial_Id, 
            T.Title AS TrainingMaterial_Title, 
            T.Name AS TrainingMaterial_Name, 
            T.Description AS TrainingMaterial_Description, 
            T.TrainingId AS TrainingMaterial_TrainingId, 
            T.MaterialType AS TrainingMaterial_MaterialType, 
            T.ResourceType AS TrainingMaterial_ResourceType, 
            T.Link AS TrainingMaterial_Link, 
            T.CreatedBy AS TrainingMaterial_CreatedBy, 
            T.CreatedOn AS TrainingMaterial_CreatedOn, 
            True AS _from0
        FROM IPSModelStoreContainer.TrainingMaterials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Profiles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView162()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Profiles
        [IPSModel.Profile](T1.Profile_Id, T1.Profile_OrganizationId, T1.Profile_ProfileTypeId, T1.Profile_IndustryId, T1.Profile_CategoryId, T1.Profile_Name, T1.Profile_Description, T1.Profile_MedalRuleId, T1.Profile_ScaleId, T1.Profile_ScaleSettingsRuleId, T1.Profile_LevelId, T1.Profile_IsActive, T1.Profile_KPIWeak, T1.Profile_KPIStrong, T1.Profile_IsTemplate, T1.Profile_QuestionDisplayRuleId, T1.Profile_SetKPIInSurvey, T1.Profile_RandomizeQuestions, T1.Profile_AllowRevisitAnsweredQuestions, T1.Profile_PassScore, T1.Profile_ProjectId, T1.Profile_CreatedBy, T1.Profile_CreatedOn, T1.Profile_ModifiedBy, T1.Profile_ModifiedOn, T1.Profile_CreatedAsRoleId, T1.Profile_ModifiedAsRoleId)
    FROM (
        SELECT 
            T.Id AS Profile_Id, 
            T.OrganizationId AS Profile_OrganizationId, 
            T.ProfileTypeId AS Profile_ProfileTypeId, 
            T.IndustryId AS Profile_IndustryId, 
            T.CategoryId AS Profile_CategoryId, 
            T.Name AS Profile_Name, 
            T.Description AS Profile_Description, 
            T.MedalRuleId AS Profile_MedalRuleId, 
            T.ScaleId AS Profile_ScaleId, 
            T.ScaleSettingsRuleId AS Profile_ScaleSettingsRuleId, 
            T.LevelId AS Profile_LevelId, 
            T.IsActive AS Profile_IsActive, 
            T.KPIWeak AS Profile_KPIWeak, 
            T.KPIStrong AS Profile_KPIStrong, 
            T.IsTemplate AS Profile_IsTemplate, 
            T.QuestionDisplayRuleId AS Profile_QuestionDisplayRuleId, 
            T.SetKPIInSurvey AS Profile_SetKPIInSurvey, 
            T.RandomizeQuestions AS Profile_RandomizeQuestions, 
            T.AllowRevisitAnsweredQuestions AS Profile_AllowRevisitAnsweredQuestions, 
            T.PassScore AS Profile_PassScore, 
            T.ProjectId AS Profile_ProjectId, 
            T.CreatedBy AS Profile_CreatedBy, 
            T.CreatedOn AS Profile_CreatedOn, 
            T.ModifiedBy AS Profile_ModifiedBy, 
            T.ModifiedOn AS Profile_ModifiedOn, 
            T.CreatedAsRoleId AS Profile_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Profile_ModifiedAsRoleId, 
            True AS _from0
        FROM IPSModelStoreContainer.Profiles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView163()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskLists
        [IPSModel.TaskList](T1.TaskList_Id, T1.TaskList_Name, T1.TaskList_TaskStatusListId, T1.TaskList_TaskPriorityListId, T1.TaskList_UserId, T1.TaskList_TaskCategoryListsId)
    FROM (
        SELECT 
            T.Id AS TaskList_Id, 
            T.Name AS TaskList_Name, 
            T.TaskStatusListId AS TaskList_TaskStatusListId, 
            T.TaskPriorityListId AS TaskList_TaskPriorityListId, 
            T.UserId AS TaskList_UserId, 
            T.TaskCategoryListsId AS TaskList_TaskCategoryListsId, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Organizations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView164()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Organizations
        [IPSModel.Organization](T1.Organization_Id, T1.Organization_Name, T1.Organization_ParentId, T1.Organization_IndustryId, T1.Organization_ZipPostalCode, T1.Organization_City, T1.Organization_Phone, T1.Organization_Fax, T1.Organization_Email, T1.Organization_Website, T1.Organization_LogoLink, T1.Organization_OrgCode, T1.Organization_PostAddressLine1, T1.Organization_PostAddressLine2, T1.Organization_PostAddressLine3, T1.Organization_PostZipPostalCode, T1.Organization_PostCity, T1.Organization_PostCountry, T1.Organization_CountryId, T1.Organization_Address, T1.Organization_ContactName, T1.Organization_State, T1.Organization_VisitingAddress, T1.Organization_VisitingZip, T1.Organization_VisitingCity, T1.Organization_VisitingCountryId, T1.Organization_Skype, T1.Organization_ContactEmail, T1.Organization_ContactPhone, T1.Organization_Twitter, T1.Organization_Facebook, T1.Organization_LinkedIn, T1.Organization_Pinterest, T1.Organization_IPSGroup, T1.Organization_VisitingState, T1.Organization_ContactTitleId, T1.Organization_ContactRoleId, T1.Organization_ParentOrganizationId, T1.Organization_OrganizationTypeId, T1.Organization_CreatedOn, T1.Organization_CreatedBy, T1.Organization_UpdatedOn, T1.Organization_UpdatedBy, T1.Organization_CSVFile)
    FROM (
        SELECT 
            T.Id AS Organization_Id, 
            T.Name AS Organization_Name, 
            T.ParentId AS Organization_ParentId, 
            T.IndustryId AS Organization_IndustryId, 
            T.ZipPostalCode AS Organization_ZipPostalCode, 
            T.City AS Organization_City, 
            T.Phone AS Organization_Phone, 
            T.Fax AS Organization_Fax, 
            T.Email AS Organization_Email, 
            T.Website AS Organization_Website, 
            T.LogoLink AS Organization_LogoLink, 
            T.OrgCode AS Organization_OrgCode, 
            T.PostAddressLine1 AS Organization_PostAddressLine1, 
            T.PostAddressLine2 AS Organization_PostAddressLine2, 
            T.PostAddressLine3 AS Organization_PostAddressLine3, 
            T.PostZipPostalCode AS Organization_PostZipPostalCode, 
            T.PostCity AS Organization_PostCity, 
            T.PostCountry AS Organization_PostCountry, 
            T.CountryId AS Organization_CountryId, 
            T.Address AS Organization_Address, 
            T.ContactName AS Organization_ContactName, 
            T.State AS Organization_State, 
            T.VisitingAddress AS Organization_VisitingAddress, 
            T.VisitingZip AS Organization_VisitingZip, 
            T.VisitingCity AS Organization_VisitingCity, 
            T.VisitingCountryId AS Organization_VisitingCountryId, 
            T.Skype AS Organization_Skype, 
            T.ContactEmail AS Organization_ContactEmail, 
            T.ContactPhone AS Organization_ContactPhone, 
            T.Twitter AS Organization_Twitter, 
            T.Facebook AS Organization_Facebook, 
            T.LinkedIn AS Organization_LinkedIn, 
            T.Pinterest AS Organization_Pinterest, 
            T.IPSGroup AS Organization_IPSGroup, 
            T.VisitingState AS Organization_VisitingState, 
            T.ContactTitleId AS Organization_ContactTitleId, 
            T.ContactRoleId AS Organization_ContactRoleId, 
            T.ParentOrganizationId AS Organization_ParentOrganizationId, 
            T.OrganizationTypeId AS Organization_OrganizationTypeId, 
            T.CreatedOn AS Organization_CreatedOn, 
            T.CreatedBy AS Organization_CreatedBy, 
            T.UpdatedOn AS Organization_UpdatedOn, 
            T.UpdatedBy AS Organization_UpdatedBy, 
            T.CSVFile AS Organization_CSVFile, 
            True AS _from0
        FROM IPSModelStoreContainer.Organizations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Trainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView165()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Trainings
        [IPSModel.Training](T1.Training_Id, T1.Training_Name, T1.Training_What, T1.Training_How, T1.Training_Why, T1.Training_AdditionalInfo, T1.Training_LevelId, T1.Training_Frequency, T1.Training_Duration, T1.Training_DurationMetricId, T1.Training_TypeId, T1.Training_IsTemplate, T1.Training_IsActive, T1.Training_OrganizationId, T1.Training_StartDate, T1.Training_EndDate, T1.Training_HowMany, T1.Training_ExerciseMetricId, T1.Training_HowManySets, T1.Training_HowManyActions, T1.Training_UserId, T1.Training_IsNotificationBySMS, T1.Training_IsNotificationByEmail, T1.Training_NotificationTemplateId, T1.Training_EmailBefore, T1.Training_SmsBefore, T1.Training_EvaluatorFeedbackRecurrence, T1.Training_CreatedBy, T1.Training_CreatedOn, T1.Training_ModifiedBy, T1.Training_ModifiedOn, T1.Training_CreatedAsRoleId, T1.Training_ModifiedAsRoleId, T1.Training_DescriptiveFrequency)
    FROM (
        SELECT 
            T.Id AS Training_Id, 
            T.Name AS Training_Name, 
            T.What AS Training_What, 
            T.How AS Training_How, 
            T.Why AS Training_Why, 
            T.AdditionalInfo AS Training_AdditionalInfo, 
            T.LevelId AS Training_LevelId, 
            T.Frequency AS Training_Frequency, 
            T.Duration AS Training_Duration, 
            T.DurationMetricId AS Training_DurationMetricId, 
            T.TypeId AS Training_TypeId, 
            T.IsTemplate AS Training_IsTemplate, 
            T.IsActive AS Training_IsActive, 
            T.OrganizationId AS Training_OrganizationId, 
            T.StartDate AS Training_StartDate, 
            T.EndDate AS Training_EndDate, 
            T.HowMany AS Training_HowMany, 
            T.ExerciseMetricId AS Training_ExerciseMetricId, 
            T.HowManySets AS Training_HowManySets, 
            T.HowManyActions AS Training_HowManyActions, 
            T.UserId AS Training_UserId, 
            T.IsNotificationBySMS AS Training_IsNotificationBySMS, 
            T.IsNotificationByEmail AS Training_IsNotificationByEmail, 
            T.NotificationTemplateId AS Training_NotificationTemplateId, 
            T.EmailBefore AS Training_EmailBefore, 
            T.SmsBefore AS Training_SmsBefore, 
            T.EvaluatorFeedbackRecurrence AS Training_EvaluatorFeedbackRecurrence, 
            T.CreatedBy AS Training_CreatedBy, 
            T.CreatedOn AS Training_CreatedOn, 
            T.ModifiedBy AS Training_ModifiedBy, 
            T.ModifiedOn AS Training_ModifiedOn, 
            T.CreatedAsRoleId AS Training_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Training_ModifiedAsRoleId, 
            T.DescriptiveFrequency AS Training_DescriptiveFrequency, 
            True AS _from0
        FROM IPSModelStoreContainer.Trainings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_PerformanceGroupSkills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView166()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupSkills
        [IPSModel.Link_PerformanceGroupSkills](T1.[Link_PerformanceGroupSkills.Id], T1.[Link_PerformanceGroupSkills.PerformanceGroupId], T1.[Link_PerformanceGroupSkills.SkillId], T1.[Link_PerformanceGroupSkills.SubSkillId], T1.[Link_PerformanceGroupSkills.Benchmark], T1.[Link_PerformanceGroupSkills.Weight], T1.[Link_PerformanceGroupSkills.CSF], T1.[Link_PerformanceGroupSkills.Action])
    FROM (
        SELECT 
            T.Id AS [Link_PerformanceGroupSkills.Id], 
            T.PerformanceGroupId AS [Link_PerformanceGroupSkills.PerformanceGroupId], 
            T.SkillId AS [Link_PerformanceGroupSkills.SkillId], 
            T.SubSkillId AS [Link_PerformanceGroupSkills.SubSkillId], 
            T.Benchmark AS [Link_PerformanceGroupSkills.Benchmark], 
            T.Weight AS [Link_PerformanceGroupSkills.Weight], 
            T.CSF AS [Link_PerformanceGroupSkills.CSF], 
            T.Action AS [Link_PerformanceGroupSkills.Action], 
            True AS _from0
        FROM IPSModelStoreContainer.Link_PerformanceGroupSkills AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.EvaluationParticipants.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView167()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationParticipants
        [IPSModel.EvaluationParticipant](T1.EvaluationParticipant_StageGroupId, T1.EvaluationParticipant_UserId, T1.EvaluationParticipant_IsLocked, T1.EvaluationParticipant_EvaluationRoleId, T1.EvaluationParticipant_Id, T1.EvaluationParticipant_EvaluateeId, T1.EvaluationParticipant_IsSelfEvaluation, T1.EvaluationParticipant_Invited, T1.EvaluationParticipant_IsScoreManager, T1.EvaluationParticipant_ResultSendOutAt, T1.EvaluationParticipant_IsResultSendOut)
    FROM (
        SELECT 
            T.StageGroupId AS EvaluationParticipant_StageGroupId, 
            T.UserId AS EvaluationParticipant_UserId, 
            T.IsLocked AS EvaluationParticipant_IsLocked, 
            T.EvaluationRoleId AS EvaluationParticipant_EvaluationRoleId, 
            T.Id AS EvaluationParticipant_Id, 
            T.EvaluateeId AS EvaluationParticipant_EvaluateeId, 
            T.IsSelfEvaluation AS EvaluationParticipant_IsSelfEvaluation, 
            T.Invited AS EvaluationParticipant_Invited, 
            T.IsScoreManager AS EvaluationParticipant_IsScoreManager, 
            T.ResultSendOutAt AS EvaluationParticipant_ResultSendOutAt, 
            T.IsResultSendOut AS EvaluationParticipant_IsResultSendOut, 
            True AS _from0
        FROM IPSModelStoreContainer.EvaluationParticipants AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.EvaluationAgreements.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView168()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationAgreements
        [IPSModel.EvaluationAgreement](T1.EvaluationAgreement_StageId, T1.EvaluationAgreement_ParticipantId, T1.EvaluationAgreement_QuestionId, T1.EvaluationAgreement_KPIType, T1.EvaluationAgreement_ShortGoal, T1.EvaluationAgreement_Comment, T1.EvaluationAgreement_Id, T1.EvaluationAgreement_FinalScore, T1.EvaluationAgreement_MidGoal, T1.EvaluationAgreement_LongGoal, T1.EvaluationAgreement_FinalGoal, T1.EvaluationAgreement_IsFinalScoreCopied)
    FROM (
        SELECT 
            T.StageId AS EvaluationAgreement_StageId, 
            T.ParticipantId AS EvaluationAgreement_ParticipantId, 
            T.QuestionId AS EvaluationAgreement_QuestionId, 
            T.KPIType AS EvaluationAgreement_KPIType, 
            T.ShortGoal AS EvaluationAgreement_ShortGoal, 
            T.Comment AS EvaluationAgreement_Comment, 
            T.Id AS EvaluationAgreement_Id, 
            T.FinalScore AS EvaluationAgreement_FinalScore, 
            T.MidGoal AS EvaluationAgreement_MidGoal, 
            T.LongGoal AS EvaluationAgreement_LongGoal, 
            T.FinalGoal AS EvaluationAgreement_FinalGoal, 
            T.IsFinalScoreCopied AS EvaluationAgreement_IsFinalScoreCopied, 
            True AS _from0
        FROM IPSModelStoreContainer.EvaluationAgreements AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Bookmarks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView169()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Bookmarks
        [IPSModel.Bookmark](T1.Bookmark_Id, T1.Bookmark_Title, T1.Bookmark_URL, T1.Bookmark_SeqNo, T1.Bookmark_UserId)
    FROM (
        SELECT 
            T.Id AS Bookmark_Id, 
            T.Title AS Bookmark_Title, 
            T.URL AS Bookmark_URL, 
            T.SeqNo AS Bookmark_SeqNo, 
            T.UserId AS Bookmark_UserId, 
            True AS _from0
        FROM IPSModelStoreContainer.Bookmarks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskCategoryListItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView170()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskCategoryListItems
        [IPSModel.TaskCategoryListItem](T1.TaskCategoryListItem_Id, T1.TaskCategoryListItem_Name, T1.TaskCategoryListItem_Description, T1.TaskCategoryListItem_CategoryListId, T1.TaskCategoryListItem_Color, T1.TaskCategoryListItem_TextColor)
    FROM (
        SELECT 
            T.Id AS TaskCategoryListItem_Id, 
            T.Name AS TaskCategoryListItem_Name, 
            T.Description AS TaskCategoryListItem_Description, 
            T.CategoryListId AS TaskCategoryListItem_CategoryListId, 
            T.Color AS TaskCategoryListItem_Color, 
            T.TextColor AS TaskCategoryListItem_TextColor, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskCategoryListItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.NotificationTemplates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView171()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationTemplates
        [IPSModel.NotificationTemplate](T1.NotificationTemplate_Id, T1.NotificationTemplate_Name, T1.NotificationTemplate_CultureId, T1.NotificationTemplate_EmailSubject, T1.NotificationTemplate_EmailBody, T1.NotificationTemplate_SMSMessage, T1.NotificationTemplate_EvaluationRoleId, T1.NotificationTemplate_UIMessage, T1.NotificationTemplate_StageTypeId, T1.NotificationTemplate_OrganizationId, T1.NotificationTemplate_NotificationTemplateTypeId, T1.NotificationTemplate_CreatedBy, T1.NotificationTemplate_CreatedOn, T1.NotificationTemplate_ModifiedBy, T1.NotificationTemplate_ModifiedOn, T1.NotificationTemplate_CreatedAsRoleId, T1.NotificationTemplate_ModifiedAsRoleId, T1.NotificationTemplate_IsDefualt, T1.NotificationTemplate_StateTypeId, T1.NotificationTemplate_ProjectTypeId, T1.NotificationTemplate_ProfileTypeId)
    FROM (
        SELECT 
            T.Id AS NotificationTemplate_Id, 
            T.Name AS NotificationTemplate_Name, 
            T.CultureId AS NotificationTemplate_CultureId, 
            T.EmailSubject AS NotificationTemplate_EmailSubject, 
            T.EmailBody AS NotificationTemplate_EmailBody, 
            T.SMSMessage AS NotificationTemplate_SMSMessage, 
            T.EvaluationRoleId AS NotificationTemplate_EvaluationRoleId, 
            T.UIMessage AS NotificationTemplate_UIMessage, 
            T.StageTypeId AS NotificationTemplate_StageTypeId, 
            T.OrganizationId AS NotificationTemplate_OrganizationId, 
            T.NotificationTemplateTypeId AS NotificationTemplate_NotificationTemplateTypeId, 
            T.CreatedBy AS NotificationTemplate_CreatedBy, 
            T.CreatedOn AS NotificationTemplate_CreatedOn, 
            T.ModifiedBy AS NotificationTemplate_ModifiedBy, 
            T.ModifiedOn AS NotificationTemplate_ModifiedOn, 
            T.CreatedAsRoleId AS NotificationTemplate_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS NotificationTemplate_ModifiedAsRoleId, 
            T.IsDefualt AS NotificationTemplate_IsDefualt, 
            T.StateTypeId AS NotificationTemplate_StateTypeId, 
            T.ProjectTypeId AS NotificationTemplate_ProjectTypeId, 
            T.ProfileTypeId AS NotificationTemplate_ProfileTypeId, 
            True AS _from0
        FROM IPSModelStoreContainer.NotificationTemplates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.KPITypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView172()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing KPITypes
        [IPSModel.KPIType](T1.KPIType_Id, T1.KPIType_Name)
    FROM (
        SELECT 
            T.Id AS KPIType_Id, 
            T.Name AS KPIType_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.KPITypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_ProjectUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView173()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProjectUsers
        [IPSModel.Link_ProjectUsers](T1.[Link_ProjectUsers.ProjectId], T1.[Link_ProjectUsers.UserId], T1.[Link_ProjectUsers.RoleId], T1.[Link_ProjectUsers.SteeringGroupId])
    FROM (
        SELECT 
            T.ProjectId AS [Link_ProjectUsers.ProjectId], 
            T.UserId AS [Link_ProjectUsers.UserId], 
            T.RoleId AS [Link_ProjectUsers.RoleId], 
            T.SteeringGroupId AS [Link_ProjectUsers.SteeringGroupId], 
            True AS _from0
        FROM IPSModelStoreContainer.Link_ProjectUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ExerciseMetrics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView174()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExerciseMetrics
        [IPSModel.ExerciseMetric](T1.ExerciseMetric_Id, T1.ExerciseMetric_Name)
    FROM (
        SELECT 
            T.Id AS ExerciseMetric_Id, 
            T.Name AS ExerciseMetric_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.ExerciseMetrics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_Training_NotificationType_NotificationInterval.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView175()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_Training_NotificationType_NotificationInterval
        [IPSModel.Link_Training_NotificationType_NotificationInterval](T1.[Link_Training_NotificationType_NotificationInterval.TrainingId], T1.[Link_Training_NotificationType_NotificationInterval.NotificationTypeId], T1.[Link_Training_NotificationType_NotificationInterval.NotificationIntervalId])
    FROM (
        SELECT 
            T.TrainingId AS [Link_Training_NotificationType_NotificationInterval.TrainingId], 
            T.NotificationTypeId AS [Link_Training_NotificationType_NotificationInterval.NotificationTypeId], 
            T.NotificationIntervalId AS [Link_Training_NotificationType_NotificationInterval.NotificationIntervalId], 
            True AS _from0
        FROM IPSModelStoreContainer.Link_Training_NotificationType_NotificationInterval AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.NotificationIntervals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView176()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationIntervals
        [IPSModel.NotificationInterval](T1.NotificationInterval_NotificationIntervalId, T1.NotificationInterval_Name)
    FROM (
        SELECT 
            T.NotificationIntervalId AS NotificationInterval_NotificationIntervalId, 
            T.Name AS NotificationInterval_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.NotificationIntervals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.NotificationTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView177()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationTypes
        [IPSModel.NotificationType](T1.NotificationType_NotificationTypeId, T1.NotificationType_Name)
    FROM (
        SELECT 
            T.NotificationTypeId AS NotificationType_NotificationTypeId, 
            T.Name AS NotificationType_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.NotificationTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.CmsPages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView178()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CmsPages
        [IPSModel.CmsPage](T1.CmsPage_PageID, T1.CmsPage_Title, T1.CmsPage_MetaTitle, T1.CmsPage_MetaKeyWord, T1.CmsPage_MetaDescription, T1.CmsPage_Heading, T1.CmsPage_Description, T1.CmsPage_PageContent, T1.CmsPage_LanguageID, T1.CmsPage_PageAccessCode)
    FROM (
        SELECT 
            T.PageID AS CmsPage_PageID, 
            T.Title AS CmsPage_Title, 
            T.MetaTitle AS CmsPage_MetaTitle, 
            T.MetaKeyWord AS CmsPage_MetaKeyWord, 
            T.MetaDescription AS CmsPage_MetaDescription, 
            T.Heading AS CmsPage_Heading, 
            T.Description AS CmsPage_Description, 
            T.PageContent AS CmsPage_PageContent, 
            T.LanguageID AS CmsPage_LanguageID, 
            T.PageAccessCode AS CmsPage_PageAccessCode, 
            True AS _from0
        FROM IPSModelStoreContainer.CmsPages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IpsPlanRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView179()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsPlanRoles
        [IPSModel.IpsPlanRole](T1.IpsPlanRole_PlanRoleID, T1.IpsPlanRole_PlanID, T1.IpsPlanRole_RoleID, T1.IpsPlanRole_NoOfPersonAllowed, T1.IpsPlanRole_IsDeleted)
    FROM (
        SELECT 
            T.PlanRoleID AS IpsPlanRole_PlanRoleID, 
            T.PlanID AS IpsPlanRole_PlanID, 
            T.RoleID AS IpsPlanRole_RoleID, 
            T.NoOfPersonAllowed AS IpsPlanRole_NoOfPersonAllowed, 
            T.IsDeleted AS IpsPlanRole_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.IpsPlanRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IpsPlans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView180()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsPlans
        [IPSModel.IpsPlan](T1.IpsPlan_PlanID, T1.IpsPlan_PlanType, T1.IpsPlan_Name, T1.IpsPlan_Description, T1.IpsPlan_MonthlyPrice, T1.IpsPlan_AnualPrice, T1.IpsPlan_CreatedDate, T1.IpsPlan_CreatedBy, T1.IpsPlan_IsDeleted)
    FROM (
        SELECT 
            T.PlanID AS IpsPlan_PlanID, 
            T.PlanType AS IpsPlan_PlanType, 
            T.Name AS IpsPlan_Name, 
            T.Description AS IpsPlan_Description, 
            T.MonthlyPrice AS IpsPlan_MonthlyPrice, 
            T.AnualPrice AS IpsPlan_AnualPrice, 
            T.CreatedDate AS IpsPlan_CreatedDate, 
            T.CreatedBy AS IpsPlan_CreatedBy, 
            T.IsDeleted AS IpsPlan_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.IpsPlans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IPSPlanFields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView181()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSPlanFields
        [IPSModel.IPSPlanField](T1.IPSPlanField_IpsPlanLabelID, T1.IPSPlanField_PlanTypeID, T1.IPSPlanField_PlanLabelID)
    FROM (
        SELECT 
            T.IpsPlanLabelID AS IPSPlanField_IpsPlanLabelID, 
            T.PlanTypeID AS IPSPlanField_PlanTypeID, 
            T.PlanLabelID AS IPSPlanField_PlanLabelID, 
            True AS _from0
        FROM IPSModelStoreContainer.IPSPlanFields AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IPSPlanFieldsLookups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView182()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSPlanFieldsLookups
        [IPSModel.IPSPlanFieldsLookup](T1.IPSPlanFieldsLookup_PlanFieldMappingID, T1.IPSPlanFieldsLookup_IpsPlanLabelID, T1.IPSPlanFieldsLookup_LabelText, T1.IPSPlanFieldsLookup_LanguageID)
    FROM (
        SELECT 
            T.PlanFieldMappingID AS IPSPlanFieldsLookup_PlanFieldMappingID, 
            T.IpsPlanLabelID AS IPSPlanFieldsLookup_IpsPlanLabelID, 
            T.LabelText AS IPSPlanFieldsLookup_LabelText, 
            T.LanguageID AS IPSPlanFieldsLookup_LanguageID, 
            True AS _from0
        FROM IPSModelStoreContainer.IPSPlanFieldsLookup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IPSPlanFeatures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView183()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSPlanFeatures
        [IPSModel.IPSPlanFeature](T1.IPSPlanFeature_IpsPlanFeatureID, T1.IPSPlanFeature_PlanID, T1.IPSPlanFeature_PlanTypeID, T1.IPSPlanFeature_PlanFieldID, T1.IPSPlanFeature_Value, T1.IPSPlanFeature_IsDeleted)
    FROM (
        SELECT 
            T.IpsPlanFeatureID AS IPSPlanFeature_IpsPlanFeatureID, 
            T.PlanID AS IPSPlanFeature_PlanID, 
            T.PlanTypeID AS IPSPlanFeature_PlanTypeID, 
            T.PlanFieldID AS IPSPlanFeature_PlanFieldID, 
            T.[Value] AS IPSPlanFeature_Value, 
            T.IsDeleted AS IPSPlanFeature_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.IPSPlanFeatures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ScaleRanges.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView184()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ScaleRanges
        [IPSModel.ScaleRange](T1.ScaleRange_Id, T1.ScaleRange_ScaleId, T1.ScaleRange_Min, T1.ScaleRange_Max, T1.ScaleRange_Description, T1.ScaleRange_Color)
    FROM (
        SELECT 
            T.Id AS ScaleRange_Id, 
            T.ScaleId AS ScaleRange_ScaleId, 
            T.Min AS ScaleRange_Min, 
            T.Max AS ScaleRange_Max, 
            T.Description AS ScaleRange_Description, 
            T.Color AS ScaleRange_Color, 
            True AS _from0
        FROM IPSModelStoreContainer.ScaleRanges AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.PlanFeaturesKeys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView185()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PlanFeaturesKeys
        [IPSModel.PlanFeaturesKey](T1.PlanFeaturesKey_PlanFeatureID, T1.PlanFeaturesKey_Description, T1.PlanFeaturesKey_CategoryID, T1.PlanFeaturesKey_LanguageID, T1.PlanFeaturesKey_IsDeleted)
    FROM (
        SELECT 
            T.PlanFeatureID AS PlanFeaturesKey_PlanFeatureID, 
            T.Description AS PlanFeaturesKey_Description, 
            T.CategoryID AS PlanFeaturesKey_CategoryID, 
            T.LanguageID AS PlanFeaturesKey_LanguageID, 
            T.IsDeleted AS PlanFeaturesKey_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.PlanFeaturesKeys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.PossibleAnswers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView186()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PossibleAnswers
        [IPSModel.PossibleAnswer](T1.PossibleAnswer_QuestionId, T1.PossibleAnswer_Answer)
    FROM (
        SELECT 
            T.QuestionId AS PossibleAnswer_QuestionId, 
            T.Answer AS PossibleAnswer_Answer, 
            True AS _from0
        FROM IPSModelStoreContainer.PossibleAnswers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.StagesEvolutions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView187()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StagesEvolutions
        [IPSModel.StagesEvolution](T1.StagesEvolution_Id, T1.StagesEvolution_OriginalStageId, T1.StagesEvolution_ParentStageEvolutionId, T1.StagesEvolution_Name, T1.StagesEvolution_StartDate, T1.StagesEvolution_DueDate, T1.StagesEvolution_ParticipantId)
    FROM (
        SELECT 
            T.Id AS StagesEvolution_Id, 
            T.OriginalStageId AS StagesEvolution_OriginalStageId, 
            T.ParentStageEvolutionId AS StagesEvolution_ParentStageEvolutionId, 
            T.Name AS StagesEvolution_Name, 
            T.StartDate AS StagesEvolution_StartDate, 
            T.DueDate AS StagesEvolution_DueDate, 
            T.ParticipantId AS StagesEvolution_ParticipantId, 
            True AS _from0
        FROM IPSModelStoreContainer.StagesEvolution AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.StagesEvolutionQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView188()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StagesEvolutionQuestions
        [IPSModel.StagesEvolutionQuestion](T1.StagesEvolutionQuestion_Id, T1.StagesEvolutionQuestion_StageEvolutionId, T1.StagesEvolutionQuestion_QuestionId)
    FROM (
        SELECT 
            T.Id AS StagesEvolutionQuestion_Id, 
            T.StageEvolutionId AS StagesEvolutionQuestion_StageEvolutionId, 
            T.QuestionId AS StagesEvolutionQuestion_QuestionId, 
            True AS _from0
        FROM IPSModelStoreContainer.StagesEvolutionQuestions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.SurveyResults.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView189()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SurveyResults
        [IPSModel.SurveyResult](T1.SurveyResult_Id, T1.SurveyResult_ParticipantId, T1.SurveyResult_StageId, T1.SurveyResult_TimeSpent, T1.SurveyResult_StageEvolutionId)
    FROM (
        SELECT 
            T.Id AS SurveyResult_Id, 
            T.ParticipantId AS SurveyResult_ParticipantId, 
            T.StageId AS SurveyResult_StageId, 
            T.TimeSpent AS SurveyResult_TimeSpent, 
            T.StageEvolutionId AS SurveyResult_StageEvolutionId, 
            True AS _from0
        FROM IPSModelStoreContainer.SurveyResults AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.EvaluationStatuses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView190()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EvaluationStatuses
        [IPSModel.EvaluationStatus](T1.EvaluationStatus_StageId, T1.EvaluationStatus_ParticipantId, T1.EvaluationStatus_StartedAt, T1.EvaluationStatus_EndedAt, T1.EvaluationStatus_DurationMinutes, T1.EvaluationStatus_InvitedAt, T1.EvaluationStatus_RemindAt, T1.EvaluationStatus_IsOpen, T1.EvaluationStatus_StageEvolutionId, T1.EvaluationStatus_Id)
    FROM (
        SELECT 
            T.StageId AS EvaluationStatus_StageId, 
            T.ParticipantId AS EvaluationStatus_ParticipantId, 
            T.StartedAt AS EvaluationStatus_StartedAt, 
            T.EndedAt AS EvaluationStatus_EndedAt, 
            T.DurationMinutes AS EvaluationStatus_DurationMinutes, 
            T.InvitedAt AS EvaluationStatus_InvitedAt, 
            T.RemindAt AS EvaluationStatus_RemindAt, 
            T.IsOpen AS EvaluationStatus_IsOpen, 
            T.StageEvolutionId AS EvaluationStatus_StageEvolutionId, 
            T.Id AS EvaluationStatus_Id, 
            True AS _from0
        FROM IPSModelStoreContainer.EvaluationStatuses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Documents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView191()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Documents
        [IPSModel.Document](T1.Document_Id, T1.Document_Title, T1.Document_Extension, T1.Document_ResourceType)
    FROM (
        SELECT 
            T.Id AS Document_Id, 
            T.Title AS Document_Title, 
            T.Extension AS Document_Extension, 
            T.ResourceType AS Document_ResourceType, 
            True AS _from0
        FROM IPSModelStoreContainer.Documents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.QuestionMaterials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView192()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionMaterials
        [IPSModel.QuestionMaterial](T1.QuestionMaterial_QuestionId, T1.QuestionMaterial_DocumentId, T1.QuestionMaterial_MaterialType, T1.QuestionMaterial_Link)
    FROM (
        SELECT 
            T.QuestionId AS QuestionMaterial_QuestionId, 
            T.DocumentId AS QuestionMaterial_DocumentId, 
            T.MaterialType AS QuestionMaterial_MaterialType, 
            T.Link AS QuestionMaterial_Link, 
            True AS _from0
        FROM IPSModelStoreContainer.QuestionMaterials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.SurveyAnswers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView193()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SurveyAnswers
        [IPSModel.SurveyAnswer](T1.SurveyAnswer_Id, T1.SurveyAnswer_SurveyResultId, T1.SurveyAnswer_QuestionId, T1.SurveyAnswer_IsCorrect, T1.SurveyAnswer_Answer, T1.SurveyAnswer_Comment, T1.SurveyAnswer_InDevContract)
    FROM (
        SELECT 
            T.Id AS SurveyAnswer_Id, 
            T.SurveyResultId AS SurveyAnswer_SurveyResultId, 
            T.QuestionId AS SurveyAnswer_QuestionId, 
            T.IsCorrect AS SurveyAnswer_IsCorrect, 
            T.Answer AS SurveyAnswer_Answer, 
            T.Comment AS SurveyAnswer_Comment, 
            T.InDevContract AS SurveyAnswer_InDevContract, 
            True AS _from0
        FROM IPSModelStoreContainer.SurveyAnswers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskScaleRanges.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView194()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskScaleRanges
        [IPSModel.TaskScaleRanx](T1.TaskScaleRanx_Id, T1.TaskScaleRanx_TaskScalesId, T1.TaskScaleRanx_Min, T1.TaskScaleRanx_Max, T1.TaskScaleRanx_Description, T1.TaskScaleRanx_Color)
    FROM (
        SELECT 
            T.Id AS TaskScaleRanx_Id, 
            T.TaskScalesId AS TaskScaleRanx_TaskScalesId, 
            T.Min AS TaskScaleRanx_Min, 
            T.Max AS TaskScaleRanx_Max, 
            T.Description AS TaskScaleRanx_Description, 
            T.Color AS TaskScaleRanx_Color, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskScaleRanges AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskScales.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView195()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskScales
        [IPSModel.TaskScale](T1.TaskScale_Id, T1.TaskScale_Name, T1.TaskScale_Description, T1.TaskScale_OrganizationId, T1.TaskScale_DepartmentId, T1.TaskScale_TeamId, T1.TaskScale_UserId, T1.TaskScale_ScaleStart, T1.TaskScale_ScaleEnd, T1.TaskScale_ScaleInterval)
    FROM (
        SELECT 
            T.Id AS TaskScale_Id, 
            T.Name AS TaskScale_Name, 
            T.Description AS TaskScale_Description, 
            T.OrganizationId AS TaskScale_OrganizationId, 
            T.DepartmentId AS TaskScale_DepartmentId, 
            T.TeamId AS TaskScale_TeamId, 
            T.UserId AS TaskScale_UserId, 
            T.ScaleStart AS TaskScale_ScaleStart, 
            T.ScaleEnd AS TaskScale_ScaleEnd, 
            T.ScaleInterval AS TaskScale_ScaleInterval, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskScales AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TrainingMaterialRatings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView196()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingMaterialRatings
        [IPSModel.TrainingMaterialRating](T1.TrainingMaterialRating_Id, T1.TrainingMaterialRating_TrainingMaterialId, T1.TrainingMaterialRating_Rating, T1.TrainingMaterialRating_RatingBy, T1.TrainingMaterialRating_RatingSubmitDate)
    FROM (
        SELECT 
            T.Id AS TrainingMaterialRating_Id, 
            T.TrainingMaterialId AS TrainingMaterialRating_TrainingMaterialId, 
            T.Rating AS TrainingMaterialRating_Rating, 
            T.RatingBy AS TrainingMaterialRating_RatingBy, 
            T.RatingSubmitDate AS TrainingMaterialRating_RatingSubmitDate, 
            True AS _from0
        FROM IPSModelStoreContainer.TrainingMaterialRatings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TaskActivities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView197()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskActivities
        [IPSModel.TaskActivity](T1.TaskActivity_Id, T1.TaskActivity_TaskId, T1.TaskActivity_RecurrenceStartTime, T1.TaskActivity_RecurrenceEndTime, T1.TaskActivity_RecurrencesRule, T1.TaskActivity_ActivityDateTime)
    FROM (
        SELECT 
            T.Id AS TaskActivity_Id, 
            T.TaskId AS TaskActivity_TaskId, 
            T.RecurrenceStartTime AS TaskActivity_RecurrenceStartTime, 
            T.RecurrenceEndTime AS TaskActivity_RecurrenceEndTime, 
            T.RecurrencesRule AS TaskActivity_RecurrencesRule, 
            T.ActivityDateTime AS TaskActivity_ActivityDateTime, 
            True AS _from0
        FROM IPSModelStoreContainer.TaskActivity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProjectRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView198()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectRoles
        [IPSModel.ProjectRole](T1.ProjectRole_Id, T1.ProjectRole_Name, T1.ProjectRole_Description)
    FROM (
        SELECT 
            T.Id AS ProjectRole_Id, 
            T.Name AS ProjectRole_Name, 
            T.Description AS ProjectRole_Description, 
            True AS _from0
        FROM IPSModelStoreContainer.ProjectRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProjectGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView199()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectGoals
        [IPSModel.ProjectGoal](T1.ProjectGoal_Id, T1.ProjectGoal_Goal, T1.ProjectGoal_Strategy, T1.ProjectGoal_ProjectId)
    FROM (
        SELECT 
            T.Id AS ProjectGoal_Id, 
            T.Goal AS ProjectGoal_Goal, 
            T.Strategy AS ProjectGoal_Strategy, 
            T.ProjectId AS ProjectGoal_ProjectId, 
            True AS _from0
        FROM IPSModelStoreContainer.ProjectGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProjectSteeringGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView200()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectSteeringGroups
        [IPSModel.ProjectSteeringGroup](T1.ProjectSteeringGroup_Id, T1.ProjectSteeringGroup_Name, T1.ProjectSteeringGroup_ProjectId, T1.ProjectSteeringGroup_OrganizationId, T1.ProjectSteeringGroup_RoleId)
    FROM (
        SELECT 
            T.Id AS ProjectSteeringGroup_Id, 
            T.Name AS ProjectSteeringGroup_Name, 
            T.ProjectId AS ProjectSteeringGroup_ProjectId, 
            T.OrganizationId AS ProjectSteeringGroup_OrganizationId, 
            T.RoleId AS ProjectSteeringGroup_RoleId, 
            True AS _from0
        FROM IPSModelStoreContainer.ProjectSteeringGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Tags.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView201()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tags
        [IPSModel.Tag](T1.Tag_Id, T1.Tag_Name, T1.Tag_OrganizationId)
    FROM (
        SELECT 
            T.Id AS Tag_Id, 
            T.Name AS Tag_Name, 
            T.OrganizationId AS Tag_OrganizationId, 
            True AS _from0
        FROM IPSModelStoreContainer.Tags AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_ProfileTags.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView202()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProfileTags
        [IPSModel.Link_ProfileTags](T1.[Link_ProfileTags.Id], T1.[Link_ProfileTags.ProfileId], T1.[Link_ProfileTags.TagId])
    FROM (
        SELECT 
            T.Id AS [Link_ProfileTags.Id], 
            T.ProfileId AS [Link_ProfileTags.ProfileId], 
            T.TagId AS [Link_ProfileTags.TagId], 
            True AS _from0
        FROM IPSModelStoreContainer.Link_ProfileTags AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProjectGlobalSettings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView203()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectGlobalSettings
        [IPSModel.ProjectGlobalSetting](T1.ProjectGlobalSetting_Id, T1.ProjectGlobalSetting_ProjectId, T1.ProjectGlobalSetting_SoftProfileActualTimeSpan, T1.ProjectGlobalSetting_SoftProfileMonthSpan, T1.ProjectGlobalSetting_SoftProfileWeekSpan, T1.ProjectGlobalSetting_SoftProfileDaySpan, T1.ProjectGlobalSetting_SoftProfileHourSpan, T1.ProjectGlobalSetting_SoftProfileMinuteSpan, T1.ProjectGlobalSetting_KnowledgeProfileActualTimeSpan, T1.ProjectGlobalSetting_KnowledgeProfileMonthSpan, T1.ProjectGlobalSetting_KnowledgeProfileWeekSpan, T1.ProjectGlobalSetting_KnowledgeProfileDaySpan, T1.ProjectGlobalSetting_KnowledgeProfileHourSpan, T1.ProjectGlobalSetting_KnowledgeProfileMinuteSpan, T1.ProjectGlobalSetting_SoftProfileStartExternalStartNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileExternalStartNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileTrainerStartNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileExternalCompletedNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileExternalResultsNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileTrainerResultsNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileGreenAlarmParticipantTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileGreenAlarmManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileGreenAlarmTrainerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileYellowAlarmParticipantTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileYellowAlarmManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileYellowAlarmTrainerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileRedAlarmParticipantTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileRedAlarmManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileRedAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileRecurrentTrainingTimeSpan, T1.ProjectGlobalSetting_KnowledgeProfileRecurrentTrainingTimeSpan, T1.ProjectGlobalSetting_SoftProfileStartEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartTrainerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartExternalCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartExternalResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartTrainerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartGreenAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileStartGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileStartGreenAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartGreenAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartYellowAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileStartYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileStartYellowAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartYellowAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartRedAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileStartRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileStartRedAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartRedAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalExternalStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalEvaluatorStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalTrainerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalExternalCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalEvaluatorCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalTrainerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalExternalResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalEvaluatorResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalTrainerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmParticipantTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmEvaluatorTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmTrainerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartEmailNotification, T1.ProjectGlobalSetting_SoftProfileStartSmsNotification, T1.ProjectGlobalSetting_SoftProfileShortGoalEmailNotification, T1.ProjectGlobalSetting_SoftProfileShortGoalSmsNotification, T1.ProjectGlobalSetting_SoftProfileMidGoalEmailNotification, T1.ProjectGlobalSetting_SoftProfileMidGoalSmsNotification, T1.ProjectGlobalSetting_SoftProfileLongTermGoalEmailNotification, T1.ProjectGlobalSetting_SoftProfileLongTermGoalSmsNotification, T1.ProjectGlobalSetting_SoftProfileFinalTermGoalEmailNotification, T1.ProjectGlobalSetting_SoftProfileFinalTermGoalSmsNotification, T1.ProjectGlobalSetting_KnowledgeProfileEmailNotification, T1.ProjectGlobalSetting_KnowledgeProfileSmsNotification, T1.ProjectGlobalSetting_SoftProfileHowMany, T1.ProjectGlobalSetting_SoftProfileMetricId, T1.ProjectGlobalSetting_SoftProfileHowManySets, T1.ProjectGlobalSetting_SoftProfileHowManyActions, T1.ProjectGlobalSetting_KnowledgeProfileHowMany, T1.ProjectGlobalSetting_KnowledgeProfileMetricId, T1.ProjectGlobalSetting_KnowledgeProfileHowManySets, T1.ProjectGlobalSetting_KnowledgeProfileHowManyActions, T1.ProjectGlobalSetting_SoftProfilePersonalTrainingReminderNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileProfileTrainingReminderNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfilePersonalTrainingReminderNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileProfileTrainingReminderNotificationTemplateId, T1.ProjectGlobalSetting_StartStageStartDate, T1.ProjectGlobalSetting_StartStageEndDate, T1.ProjectGlobalSetting_ShortGoalStartDate, T1.ProjectGlobalSetting_ShortGoalEndDate, T1.ProjectGlobalSetting_MidGoalStartDate, T1.ProjectGlobalSetting_MidGoalEndDate, T1.ProjectGlobalSetting_LongTermGoalStartDate, T1.ProjectGlobalSetting_LongTermGoalEndDate, T1.ProjectGlobalSetting_FinalGoalStartDate, T1.ProjectGlobalSetting_FinalGoalEndDate, T1.ProjectGlobalSetting_KnowledgeProfileStartDate, T1.ProjectGlobalSetting_KnowledgeProfileEndDate, T1.ProjectGlobalSetting_TrainerId, T1.ProjectGlobalSetting_ManagerId, T1.ProjectGlobalSetting_SoftProfileStartGreenAlarmTime, T1.ProjectGlobalSetting_SoftProfileStartYellowAlarmTime, T1.ProjectGlobalSetting_SoftProfileStartRedAlarmTime, T1.ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmTime, T1.ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmTime, T1.ProjectGlobalSetting_SoftProfileShortGoalRedAlarmTime, T1.ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmTime, T1.ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmTime, T1.ProjectGlobalSetting_SoftProfileMidGoalRedAlarmTime, T1.ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmTime, T1.ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmTime, T1.ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmTime, T1.ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmTime, T1.ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmTime, T1.ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmTime, T1.ProjectGlobalSetting_KnowledgeProfileGreenAlarmTime, T1.ProjectGlobalSetting_KnowledgeProfileYellowAlarmTime, T1.ProjectGlobalSetting_KnowledgeProfileRedAlarmTime, T1.ProjectGlobalSetting_KnowledgeProfileProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_KnowledgeProfileRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileStartGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileStartRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileShortGoalRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileMidGoalRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalProjectManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalFinalScoreManagerStartNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalProjectManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalFinalScoreManagerCompletedNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalProjectManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalFinalScoreManagerResultsNotificationTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmFinalScoreManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmProjectManagerTemplateId, T1.ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmFinalScoreManagerTemplateId)
    FROM (
        SELECT 
            T.Id AS ProjectGlobalSetting_Id, 
            T.ProjectId AS ProjectGlobalSetting_ProjectId, 
            T.SoftProfileActualTimeSpan AS ProjectGlobalSetting_SoftProfileActualTimeSpan, 
            T.SoftProfileMonthSpan AS ProjectGlobalSetting_SoftProfileMonthSpan, 
            T.SoftProfileWeekSpan AS ProjectGlobalSetting_SoftProfileWeekSpan, 
            T.SoftProfileDaySpan AS ProjectGlobalSetting_SoftProfileDaySpan, 
            T.SoftProfileHourSpan AS ProjectGlobalSetting_SoftProfileHourSpan, 
            T.SoftProfileMinuteSpan AS ProjectGlobalSetting_SoftProfileMinuteSpan, 
            T.KnowledgeProfileActualTimeSpan AS ProjectGlobalSetting_KnowledgeProfileActualTimeSpan, 
            T.KnowledgeProfileMonthSpan AS ProjectGlobalSetting_KnowledgeProfileMonthSpan, 
            T.KnowledgeProfileWeekSpan AS ProjectGlobalSetting_KnowledgeProfileWeekSpan, 
            T.KnowledgeProfileDaySpan AS ProjectGlobalSetting_KnowledgeProfileDaySpan, 
            T.KnowledgeProfileHourSpan AS ProjectGlobalSetting_KnowledgeProfileHourSpan, 
            T.KnowledgeProfileMinuteSpan AS ProjectGlobalSetting_KnowledgeProfileMinuteSpan, 
            T.SoftProfileStartExternalStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartExternalStartNotificationTemplateId, 
            T.KnowledgeProfileExternalStartNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileExternalStartNotificationTemplateId, 
            T.KnowledgeProfileEvaluatorStartNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileEvaluatorStartNotificationTemplateId, 
            T.KnowledgeProfileTrainerStartNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileTrainerStartNotificationTemplateId, 
            T.KnowledgeProfileManagerStartNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileManagerStartNotificationTemplateId, 
            T.KnowledgeProfileExternalCompletedNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileExternalCompletedNotificationTemplateId, 
            T.KnowledgeProfileEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileEvaluatorCompletedNotificationTemplateId, 
            T.KnowledgeProfileTrainerCompletedNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileTrainerCompletedNotificationTemplateId, 
            T.KnowledgeProfileManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileManagerCompletedNotificationTemplateId, 
            T.KnowledgeProfileExternalResultsNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileExternalResultsNotificationTemplateId, 
            T.KnowledgeProfileEvaluatorResultsNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileEvaluatorResultsNotificationTemplateId, 
            T.KnowledgeProfileTrainerResultsNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileTrainerResultsNotificationTemplateId, 
            T.KnowledgeProfileManagerResultsNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileManagerResultsNotificationTemplateId, 
            T.KnowledgeProfileGreenAlarmParticipantTemplateId AS ProjectGlobalSetting_KnowledgeProfileGreenAlarmParticipantTemplateId, 
            T.KnowledgeProfileGreenAlarmEvaluatorTemplateId AS ProjectGlobalSetting_KnowledgeProfileGreenAlarmEvaluatorTemplateId, 
            T.KnowledgeProfileGreenAlarmManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileGreenAlarmManagerTemplateId, 
            T.KnowledgeProfileGreenAlarmTrainerTemplateId AS ProjectGlobalSetting_KnowledgeProfileGreenAlarmTrainerTemplateId, 
            T.KnowledgeProfileYellowAlarmParticipantTemplateId AS ProjectGlobalSetting_KnowledgeProfileYellowAlarmParticipantTemplateId, 
            T.KnowledgeProfileYellowAlarmEvaluatorTemplateId AS ProjectGlobalSetting_KnowledgeProfileYellowAlarmEvaluatorTemplateId, 
            T.KnowledgeProfileYellowAlarmManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileYellowAlarmManagerTemplateId, 
            T.KnowledgeProfileYellowAlarmTrainerTemplateId AS ProjectGlobalSetting_KnowledgeProfileYellowAlarmTrainerTemplateId, 
            T.KnowledgeProfileRedAlarmParticipantTemplateId AS ProjectGlobalSetting_KnowledgeProfileRedAlarmParticipantTemplateId, 
            T.KnowledgeProfileRedAlarmEvaluatorTemplateId AS ProjectGlobalSetting_KnowledgeProfileRedAlarmEvaluatorTemplateId, 
            T.KnowledgeProfileRedAlarmManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileRedAlarmManagerTemplateId, 
            T.KnowledgeProfileRedAlarmTrainerTemplateId AS ProjectGlobalSetting_KnowledgeProfileRedAlarmTrainerTemplateId, 
            T.SoftProfileRecurrentTrainingTimeSpan AS ProjectGlobalSetting_SoftProfileRecurrentTrainingTimeSpan, 
            T.KnowledgeProfileRecurrentTrainingTimeSpan AS ProjectGlobalSetting_KnowledgeProfileRecurrentTrainingTimeSpan, 
            T.SoftProfileStartEvaluatorStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartEvaluatorStartNotificationTemplateId, 
            T.SoftProfileStartTrainerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartTrainerStartNotificationTemplateId, 
            T.SoftProfileStartManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartManagerStartNotificationTemplateId, 
            T.SoftProfileStartExternalCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartExternalCompletedNotificationTemplateId, 
            T.SoftProfileStartEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileStartTrainerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartTrainerCompletedNotificationTemplateId, 
            T.SoftProfileStartManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartManagerCompletedNotificationTemplateId, 
            T.SoftProfileStartExternalResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartExternalResultsNotificationTemplateId, 
            T.SoftProfileStartEvaluatorResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileStartTrainerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartTrainerResultsNotificationTemplateId, 
            T.SoftProfileStartManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartManagerResultsNotificationTemplateId, 
            T.SoftProfileStartGreenAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileStartGreenAlarmParticipantTemplateId, 
            T.SoftProfileStartGreenAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileStartGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileStartGreenAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartGreenAlarmManagerTemplateId, 
            T.SoftProfileStartGreenAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileStartGreenAlarmTrainerTemplateId, 
            T.SoftProfileStartYellowAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileStartYellowAlarmParticipantTemplateId, 
            T.SoftProfileStartYellowAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileStartYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileStartYellowAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartYellowAlarmManagerTemplateId, 
            T.SoftProfileStartYellowAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileStartYellowAlarmTrainerTemplateId, 
            T.SoftProfileStartRedAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileStartRedAlarmParticipantTemplateId, 
            T.SoftProfileStartRedAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileStartRedAlarmEvaluatorTemplateId, 
            T.SoftProfileStartRedAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartRedAlarmManagerTemplateId, 
            T.SoftProfileStartRedAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileStartRedAlarmTrainerTemplateId, 
            T.SoftProfileShortGoalExternalStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalExternalStartNotificationTemplateId, 
            T.SoftProfileShortGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileShortGoalTrainerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileShortGoalManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalManagerStartNotificationTemplateId, 
            T.SoftProfileShortGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalExternalResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileShortGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileShortGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileShortGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileShortGoalGreenAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileShortGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileShortGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileShortGoalYellowAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileShortGoalRedAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileShortGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileShortGoalRedAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalRedAlarmManagerTemplateId, 
            T.SoftProfileShortGoalRedAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileMidGoalExternalStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalExternalStartNotificationTemplateId, 
            T.SoftProfileMidGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileMidGoalTrainerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileMidGoalManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalManagerStartNotificationTemplateId, 
            T.SoftProfileMidGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalExternalResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileMidGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileMidGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileMidGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileMidGoalGreenAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileMidGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileMidGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileMidGoalYellowAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileMidGoalRedAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileMidGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileMidGoalRedAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalRedAlarmManagerTemplateId, 
            T.SoftProfileMidGoalRedAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileLongTermGoalExternalStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalExternalStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalTrainerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalManagerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalExternalResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmManagerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileFinalGoalExternalStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalExternalStartNotificationTemplateId, 
            T.SoftProfileFinalGoalEvaluatorStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalEvaluatorStartNotificationTemplateId, 
            T.SoftProfileFinalGoalTrainerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalTrainerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalManagerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalExternalCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalExternalCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalEvaluatorCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalEvaluatorCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalTrainerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalTrainerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalManagerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalExternalResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalExternalResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalEvaluatorResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalEvaluatorResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalTrainerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalTrainerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalManagerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmParticipantTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmEvaluatorTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmManagerTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmTrainerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmParticipantTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmEvaluatorTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmManagerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmTrainerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmParticipantTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmParticipantTemplateId, 
            T.SoftProfileFinalGoalRedAlarmEvaluatorTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmEvaluatorTemplateId, 
            T.SoftProfileFinalGoalRedAlarmManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmManagerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmTrainerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmTrainerTemplateId, 
            T.SoftProfileStartEmailNotification AS ProjectGlobalSetting_SoftProfileStartEmailNotification, 
            T.SoftProfileStartSmsNotification AS ProjectGlobalSetting_SoftProfileStartSmsNotification, 
            T.SoftProfileShortGoalEmailNotification AS ProjectGlobalSetting_SoftProfileShortGoalEmailNotification, 
            T.SoftProfileShortGoalSmsNotification AS ProjectGlobalSetting_SoftProfileShortGoalSmsNotification, 
            T.SoftProfileMidGoalEmailNotification AS ProjectGlobalSetting_SoftProfileMidGoalEmailNotification, 
            T.SoftProfileMidGoalSmsNotification AS ProjectGlobalSetting_SoftProfileMidGoalSmsNotification, 
            T.SoftProfileLongTermGoalEmailNotification AS ProjectGlobalSetting_SoftProfileLongTermGoalEmailNotification, 
            T.SoftProfileLongTermGoalSmsNotification AS ProjectGlobalSetting_SoftProfileLongTermGoalSmsNotification, 
            T.SoftProfileFinalTermGoalEmailNotification AS ProjectGlobalSetting_SoftProfileFinalTermGoalEmailNotification, 
            T.SoftProfileFinalTermGoalSmsNotification AS ProjectGlobalSetting_SoftProfileFinalTermGoalSmsNotification, 
            T.KnowledgeProfileEmailNotification AS ProjectGlobalSetting_KnowledgeProfileEmailNotification, 
            T.KnowledgeProfileSmsNotification AS ProjectGlobalSetting_KnowledgeProfileSmsNotification, 
            T.SoftProfileHowMany AS ProjectGlobalSetting_SoftProfileHowMany, 
            T.SoftProfileMetricId AS ProjectGlobalSetting_SoftProfileMetricId, 
            T.SoftProfileHowManySets AS ProjectGlobalSetting_SoftProfileHowManySets, 
            T.SoftProfileHowManyActions AS ProjectGlobalSetting_SoftProfileHowManyActions, 
            T.KnowledgeProfileHowMany AS ProjectGlobalSetting_KnowledgeProfileHowMany, 
            T.KnowledgeProfileMetricId AS ProjectGlobalSetting_KnowledgeProfileMetricId, 
            T.KnowledgeProfileHowManySets AS ProjectGlobalSetting_KnowledgeProfileHowManySets, 
            T.KnowledgeProfileHowManyActions AS ProjectGlobalSetting_KnowledgeProfileHowManyActions, 
            T.SoftProfilePersonalTrainingReminderNotificationTemplateId AS ProjectGlobalSetting_SoftProfilePersonalTrainingReminderNotificationTemplateId, 
            T.SoftProfileProfileTrainingReminderNotificationTemplateId AS ProjectGlobalSetting_SoftProfileProfileTrainingReminderNotificationTemplateId, 
            T.KnowledgeProfilePersonalTrainingReminderNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfilePersonalTrainingReminderNotificationTemplateId, 
            T.KnowledgeProfileProfileTrainingReminderNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileProfileTrainingReminderNotificationTemplateId, 
            T.StartStageStartDate AS ProjectGlobalSetting_StartStageStartDate, 
            T.StartStageEndDate AS ProjectGlobalSetting_StartStageEndDate, 
            T.ShortGoalStartDate AS ProjectGlobalSetting_ShortGoalStartDate, 
            T.ShortGoalEndDate AS ProjectGlobalSetting_ShortGoalEndDate, 
            T.MidGoalStartDate AS ProjectGlobalSetting_MidGoalStartDate, 
            T.MidGoalEndDate AS ProjectGlobalSetting_MidGoalEndDate, 
            T.LongTermGoalStartDate AS ProjectGlobalSetting_LongTermGoalStartDate, 
            T.LongTermGoalEndDate AS ProjectGlobalSetting_LongTermGoalEndDate, 
            T.FinalGoalStartDate AS ProjectGlobalSetting_FinalGoalStartDate, 
            T.FinalGoalEndDate AS ProjectGlobalSetting_FinalGoalEndDate, 
            T.KnowledgeProfileStartDate AS ProjectGlobalSetting_KnowledgeProfileStartDate, 
            T.KnowledgeProfileEndDate AS ProjectGlobalSetting_KnowledgeProfileEndDate, 
            T.TrainerId AS ProjectGlobalSetting_TrainerId, 
            T.ManagerId AS ProjectGlobalSetting_ManagerId, 
            T.SoftProfileStartGreenAlarmTime AS ProjectGlobalSetting_SoftProfileStartGreenAlarmTime, 
            T.SoftProfileStartYellowAlarmTime AS ProjectGlobalSetting_SoftProfileStartYellowAlarmTime, 
            T.SoftProfileStartRedAlarmTime AS ProjectGlobalSetting_SoftProfileStartRedAlarmTime, 
            T.SoftProfileShortGoalGreenAlarmTime AS ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmTime, 
            T.SoftProfileShortGoalYellowAlarmTime AS ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmTime, 
            T.SoftProfileShortGoalRedAlarmTime AS ProjectGlobalSetting_SoftProfileShortGoalRedAlarmTime, 
            T.SoftProfileMidGoalGreenAlarmTime AS ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmTime, 
            T.SoftProfileMidGoalYellowAlarmTime AS ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmTime, 
            T.SoftProfileMidGoalRedAlarmTime AS ProjectGlobalSetting_SoftProfileMidGoalRedAlarmTime, 
            T.SoftProfileLongTermGoalGreenAlarmTime AS ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmTime, 
            T.SoftProfileLongTermGoalYellowAlarmTime AS ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmTime, 
            T.SoftProfileLongTermGoalRedAlarmTime AS ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmTime, 
            T.SoftProfileFinalGoalGreenAlarmTime AS ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmTime, 
            T.SoftProfileFinalGoalYellowAlarmTime AS ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmTime, 
            T.SoftProfileFinalGoalRedAlarmTime AS ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmTime, 
            T.KnowledgeProfileGreenAlarmTime AS ProjectGlobalSetting_KnowledgeProfileGreenAlarmTime, 
            T.KnowledgeProfileYellowAlarmTime AS ProjectGlobalSetting_KnowledgeProfileYellowAlarmTime, 
            T.KnowledgeProfileRedAlarmTime AS ProjectGlobalSetting_KnowledgeProfileRedAlarmTime, 
            T.KnowledgeProfileProjectManagerStartNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileProjectManagerStartNotificationTemplateId, 
            T.KnowledgeProfileFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileFinalScoreManagerStartNotificationTemplateId, 
            T.KnowledgeProfileProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileProjectManagerCompletedNotificationTemplateId, 
            T.KnowledgeProfileFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileFinalScoreManagerCompletedNotificationTemplateId, 
            T.KnowledgeProfileProjectManagerResultsNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileProjectManagerResultsNotificationTemplateId, 
            T.KnowledgeProfileFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSetting_KnowledgeProfileFinalScoreManagerResultsNotificationTemplateId, 
            T.KnowledgeProfileGreenAlarmProjectManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileGreenAlarmProjectManagerTemplateId, 
            T.KnowledgeProfileGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileGreenAlarmFinalScoreManagerTemplateId, 
            T.KnowledgeProfileYellowAlarmProjectManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileYellowAlarmProjectManagerTemplateId, 
            T.KnowledgeProfileYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileYellowAlarmFinalScoreManagerTemplateId, 
            T.KnowledgeProfileRedAlarmProjectManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileRedAlarmProjectManagerTemplateId, 
            T.KnowledgeProfileRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_KnowledgeProfileRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileStartProjectManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartProjectManagerStartNotificationTemplateId, 
            T.SoftProfileStartFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileStartProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileStartFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileStartProjectManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileStartFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileStartFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileStartGreenAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileStartGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileStartYellowAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileStartYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileStartRedAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartRedAlarmProjectManagerTemplateId, 
            T.SoftProfileStartRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileStartRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileShortGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileShortGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileShortGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileShortGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileShortGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileShortGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileShortGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileShortGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileShortGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileShortGoalRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileMidGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileMidGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileMidGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileMidGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileMidGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileMidGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileMidGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileMidGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileMidGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileMidGoalRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileLongTermGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileLongTermGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileLongTermGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileLongTermGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileLongTermGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileLongTermGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileLongTermGoalRedAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileFinalGoalProjectManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalProjectManagerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalFinalScoreManagerStartNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalFinalScoreManagerStartNotificationTemplateId, 
            T.SoftProfileFinalGoalProjectManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalProjectManagerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalFinalScoreManagerCompletedNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalFinalScoreManagerCompletedNotificationTemplateId, 
            T.SoftProfileFinalGoalProjectManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalProjectManagerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalFinalScoreManagerResultsNotificationTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalFinalScoreManagerResultsNotificationTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmProjectManagerTemplateId, 
            T.SoftProfileFinalGoalGreenAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalGreenAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmProjectManagerTemplateId, 
            T.SoftProfileFinalGoalYellowAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalYellowAlarmFinalScoreManagerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmProjectManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmProjectManagerTemplateId, 
            T.SoftProfileFinalGoalRedAlarmFinalScoreManagerTemplateId AS ProjectGlobalSetting_SoftProfileFinalGoalRedAlarmFinalScoreManagerTemplateId, 
            True AS _from0
        FROM IPSModelStoreContainer.ProjectGlobalSettings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.UserRecurrentNotificationSettings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView204()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserRecurrentNotificationSettings
        [IPSModel.UserRecurrentNotificationSetting](T1.UserRecurrentNotificationSetting_Id, T1.UserRecurrentNotificationSetting_StageGroupId, T1.UserRecurrentNotificationSetting_StageId, T1.UserRecurrentNotificationSetting_UserId, T1.UserRecurrentNotificationSetting_EmailNotification, T1.UserRecurrentNotificationSetting_SMSNotification, T1.UserRecurrentNotificationSetting_GreenAlarmParticipantTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmTime, T1.UserRecurrentNotificationSetting_YellowAlarmParticipantTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmTime, T1.UserRecurrentNotificationSetting_RedAlarmParticipantTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmTime, T1.UserRecurrentNotificationSetting_ExternalStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_ExternalCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_ExternalResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_EvaluatorStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_EvaluatorCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_EvaluatorResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_TrainerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_TrainerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_TrainerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_ManagerId, T1.UserRecurrentNotificationSetting_TrainerId, T1.UserRecurrentNotificationSetting_InvitedAt, T1.UserRecurrentNotificationSetting_GreenAlarmEvaluatorTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmManagerTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmTrainerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmEvaluatorTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmManagerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmTrainerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmEvaluatorTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmManagerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmTrainerTemplateId, T1.UserRecurrentNotificationSetting_RecurrentTrainningFrequency, T1.UserRecurrentNotificationSetting_HowMany, T1.UserRecurrentNotificationSetting_MetricId, T1.UserRecurrentNotificationSetting_HowManyActions, T1.UserRecurrentNotificationSetting_HowManySet, T1.UserRecurrentNotificationSetting_PersonalTrainingReminderNotificationTemplateId, T1.UserRecurrentNotificationSetting_ProfileTrainingReminderNotificationTemplateId, T1.UserRecurrentNotificationSetting_CreatedAt, T1.UserRecurrentNotificationSetting_CreatedBy, T1.UserRecurrentNotificationSetting_ModifiedAt, T1.UserRecurrentNotificationSetting_ModifiedBy, T1.UserRecurrentNotificationSetting_ProjectManagerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_ProjectManagerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_ProjectManagerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_FinalScoreManagerStartNotificationTemplateId, T1.UserRecurrentNotificationSetting_FinalScoreManagerCompletedNotificationTemplateId, T1.UserRecurrentNotificationSetting_FinalScoreManagerResultsNotificationTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmProjectManagerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmProjectManagerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmProjectManagerTemplateId, T1.UserRecurrentNotificationSetting_GreenAlarmFinalScoreManagerTemplateId, T1.UserRecurrentNotificationSetting_YellowAlarmFinalScoreManagerTemplateId, T1.UserRecurrentNotificationSetting_RedAlarmFinalScoreManagerTemplateId)
    FROM (
        SELECT 
            T.Id AS UserRecurrentNotificationSetting_Id, 
            T.StageGroupId AS UserRecurrentNotificationSetting_StageGroupId, 
            T.StageId AS UserRecurrentNotificationSetting_StageId, 
            T.UserId AS UserRecurrentNotificationSetting_UserId, 
            T.EmailNotification AS UserRecurrentNotificationSetting_EmailNotification, 
            T.SMSNotification AS UserRecurrentNotificationSetting_SMSNotification, 
            T.GreenAlarmParticipantTemplateId AS UserRecurrentNotificationSetting_GreenAlarmParticipantTemplateId, 
            T.GreenAlarmTime AS UserRecurrentNotificationSetting_GreenAlarmTime, 
            T.YellowAlarmParticipantTemplateId AS UserRecurrentNotificationSetting_YellowAlarmParticipantTemplateId, 
            T.YellowAlarmTime AS UserRecurrentNotificationSetting_YellowAlarmTime, 
            T.RedAlarmParticipantTemplateId AS UserRecurrentNotificationSetting_RedAlarmParticipantTemplateId, 
            T.RedAlarmTime AS UserRecurrentNotificationSetting_RedAlarmTime, 
            T.ExternalStartNotificationTemplateId AS UserRecurrentNotificationSetting_ExternalStartNotificationTemplateId, 
            T.ExternalCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_ExternalCompletedNotificationTemplateId, 
            T.ExternalResultsNotificationTemplateId AS UserRecurrentNotificationSetting_ExternalResultsNotificationTemplateId, 
            T.EvaluatorStartNotificationTemplateId AS UserRecurrentNotificationSetting_EvaluatorStartNotificationTemplateId, 
            T.EvaluatorCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_EvaluatorCompletedNotificationTemplateId, 
            T.EvaluatorResultsNotificationTemplateId AS UserRecurrentNotificationSetting_EvaluatorResultsNotificationTemplateId, 
            T.TrainerStartNotificationTemplateId AS UserRecurrentNotificationSetting_TrainerStartNotificationTemplateId, 
            T.TrainerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_TrainerCompletedNotificationTemplateId, 
            T.TrainerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_TrainerResultsNotificationTemplateId, 
            T.ManagerStartNotificationTemplateId AS UserRecurrentNotificationSetting_ManagerStartNotificationTemplateId, 
            T.ManagerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_ManagerCompletedNotificationTemplateId, 
            T.ManagerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_ManagerResultsNotificationTemplateId, 
            T.ManagerId AS UserRecurrentNotificationSetting_ManagerId, 
            T.TrainerId AS UserRecurrentNotificationSetting_TrainerId, 
            T.InvitedAt AS UserRecurrentNotificationSetting_InvitedAt, 
            T.GreenAlarmEvaluatorTemplateId AS UserRecurrentNotificationSetting_GreenAlarmEvaluatorTemplateId, 
            T.GreenAlarmManagerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmManagerTemplateId, 
            T.GreenAlarmTrainerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmTrainerTemplateId, 
            T.YellowAlarmEvaluatorTemplateId AS UserRecurrentNotificationSetting_YellowAlarmEvaluatorTemplateId, 
            T.YellowAlarmManagerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmManagerTemplateId, 
            T.YellowAlarmTrainerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmTrainerTemplateId, 
            T.RedAlarmEvaluatorTemplateId AS UserRecurrentNotificationSetting_RedAlarmEvaluatorTemplateId, 
            T.RedAlarmManagerTemplateId AS UserRecurrentNotificationSetting_RedAlarmManagerTemplateId, 
            T.RedAlarmTrainerTemplateId AS UserRecurrentNotificationSetting_RedAlarmTrainerTemplateId, 
            T.RecurrentTrainningFrequency AS UserRecurrentNotificationSetting_RecurrentTrainningFrequency, 
            T.HowMany AS UserRecurrentNotificationSetting_HowMany, 
            T.MetricId AS UserRecurrentNotificationSetting_MetricId, 
            T.HowManyActions AS UserRecurrentNotificationSetting_HowManyActions, 
            T.HowManySet AS UserRecurrentNotificationSetting_HowManySet, 
            T.PersonalTrainingReminderNotificationTemplateId AS UserRecurrentNotificationSetting_PersonalTrainingReminderNotificationTemplateId, 
            T.ProfileTrainingReminderNotificationTemplateId AS UserRecurrentNotificationSetting_ProfileTrainingReminderNotificationTemplateId, 
            T.CreatedAt AS UserRecurrentNotificationSetting_CreatedAt, 
            T.CreatedBy AS UserRecurrentNotificationSetting_CreatedBy, 
            T.ModifiedAt AS UserRecurrentNotificationSetting_ModifiedAt, 
            T.ModifiedBy AS UserRecurrentNotificationSetting_ModifiedBy, 
            T.ProjectManagerStartNotificationTemplateId AS UserRecurrentNotificationSetting_ProjectManagerStartNotificationTemplateId, 
            T.ProjectManagerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_ProjectManagerCompletedNotificationTemplateId, 
            T.ProjectManagerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_ProjectManagerResultsNotificationTemplateId, 
            T.FinalScoreManagerStartNotificationTemplateId AS UserRecurrentNotificationSetting_FinalScoreManagerStartNotificationTemplateId, 
            T.FinalScoreManagerCompletedNotificationTemplateId AS UserRecurrentNotificationSetting_FinalScoreManagerCompletedNotificationTemplateId, 
            T.FinalScoreManagerResultsNotificationTemplateId AS UserRecurrentNotificationSetting_FinalScoreManagerResultsNotificationTemplateId, 
            T.GreenAlarmProjectManagerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmProjectManagerTemplateId, 
            T.YellowAlarmProjectManagerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmProjectManagerTemplateId, 
            T.RedAlarmProjectManagerTemplateId AS UserRecurrentNotificationSetting_RedAlarmProjectManagerTemplateId, 
            T.GreenAlarmFinalScoreManagerTemplateId AS UserRecurrentNotificationSetting_GreenAlarmFinalScoreManagerTemplateId, 
            T.YellowAlarmFinalScoreManagerTemplateId AS UserRecurrentNotificationSetting_YellowAlarmFinalScoreManagerTemplateId, 
            T.RedAlarmFinalScoreManagerTemplateId AS UserRecurrentNotificationSetting_RedAlarmFinalScoreManagerTemplateId, 
            True AS _from0
        FROM IPSModelStoreContainer.UserRecurrentNotificationSetting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Projects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView205()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Projects
        [IPSModel.Project](T1.Project_Id, T1.Project_Name, T1.Project_Summary, T1.Project_VisionStatement, T1.Project_IsActive, T1.Project_ExpectedStartDate, T1.Project_ExpectedEndDate, T1.Project_MissionStatement, T1.Project_OrganizationId, T1.Project_CreatedBy, T1.Project_ModifiedBy, T1.Project_CreatedOn, T1.Project_ModifiedOn, T1.Project_StartedOn, T1.Project_CreatedAsRoleId, T1.Project_ModifiedAsRoleId)
    FROM (
        SELECT 
            T.Id AS Project_Id, 
            T.Name AS Project_Name, 
            T.Summary AS Project_Summary, 
            T.VisionStatement AS Project_VisionStatement, 
            T.IsActive AS Project_IsActive, 
            T.ExpectedStartDate AS Project_ExpectedStartDate, 
            T.ExpectedEndDate AS Project_ExpectedEndDate, 
            T.MissionStatement AS Project_MissionStatement, 
            T.OrganizationId AS Project_OrganizationId, 
            T.CreatedBy AS Project_CreatedBy, 
            T.ModifiedBy AS Project_ModifiedBy, 
            T.CreatedOn AS Project_CreatedOn, 
            T.ModifiedOn AS Project_ModifiedOn, 
            T.StartedOn AS Project_StartedOn, 
            T.CreatedAsRoleId AS Project_CreatedAsRoleId, 
            T.ModifiedAsRoleId AS Project_ModifiedAsRoleId, 
            True AS _from0
        FROM IPSModelStoreContainer.Projects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.NotificationTemplateTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView206()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NotificationTemplateTypes
        [IPSModel.NotificationTemplateType](T1.NotificationTemplateType_Id, T1.NotificationTemplateType_Name, T1.NotificationTemplateType_Category)
    FROM (
        SELECT 
            T.Id AS NotificationTemplateType_Id, 
            T.Name AS NotificationTemplateType_Name, 
            T.Category AS NotificationTemplateType_Category, 
            True AS _from0
        FROM IPSModelStoreContainer.NotificationTemplateTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TrainingNotes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView207()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingNotes
        [IPSModel.TrainingNote](T1.TrainingNote_Id, T1.TrainingNote_TrainingId, T1.TrainingNote_Goal, T1.TrainingNote_MeasureInfo, T1.TrainingNote_ProceedInfo, T1.TrainingNote_OtherInfo, T1.TrainingNote_CreatedOn, T1.TrainingNote_CreatedBy, T1.TrainingNote_ModifiedOn, T1.TrainingNote_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS TrainingNote_Id, 
            T.TrainingId AS TrainingNote_TrainingId, 
            T.Goal AS TrainingNote_Goal, 
            T.MeasureInfo AS TrainingNote_MeasureInfo, 
            T.ProceedInfo AS TrainingNote_ProceedInfo, 
            T.OtherInfo AS TrainingNote_OtherInfo, 
            T.CreatedOn AS TrainingNote_CreatedOn, 
            T.CreatedBy AS TrainingNote_CreatedBy, 
            T.ModifiedOn AS TrainingNote_ModifiedOn, 
            T.ModifiedBy AS TrainingNote_ModifiedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.TrainingNote AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.MilestoneAgreementGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView208()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MilestoneAgreementGoals
        [IPSModel.MilestoneAgreementGoal](T1.MilestoneAgreementGoal_Id, T1.MilestoneAgreementGoal_StageId, T1.MilestoneAgreementGoal_ParticipantId, T1.MilestoneAgreementGoal_Goal, T1.MilestoneAgreementGoal_EvaluationAgreementId, T1.MilestoneAgreementGoal_CreatedOn, T1.MilestoneAgreementGoal_CreatedBy, T1.MilestoneAgreementGoal_ModifiedOn, T1.MilestoneAgreementGoal_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS MilestoneAgreementGoal_Id, 
            T.StageId AS MilestoneAgreementGoal_StageId, 
            T.ParticipantId AS MilestoneAgreementGoal_ParticipantId, 
            T.Goal AS MilestoneAgreementGoal_Goal, 
            T.EvaluationAgreementId AS MilestoneAgreementGoal_EvaluationAgreementId, 
            T.CreatedOn AS MilestoneAgreementGoal_CreatedOn, 
            T.CreatedBy AS MilestoneAgreementGoal_CreatedBy, 
            T.ModifiedOn AS MilestoneAgreementGoal_ModifiedOn, 
            T.ModifiedBy AS MilestoneAgreementGoal_ModifiedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.MilestoneAgreementGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProjectDefaultNotificationSettings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView209()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProjectDefaultNotificationSettings
        [IPSModel.ProjectDefaultNotificationSetting](T1.ProjectDefaultNotificationSetting_Id, T1.ProjectDefaultNotificationSetting_ProjectId, T1.ProjectDefaultNotificationSetting_ParticipantsStartNotificationId, T1.ProjectDefaultNotificationSetting_ParticipantsCompletedNotificationId, T1.ProjectDefaultNotificationSetting_ParticipantsResultNotificationId, T1.ProjectDefaultNotificationSetting_EvaluatorsStartNotificationId, T1.ProjectDefaultNotificationSetting_EvaluatorsCompletedNotificationId, T1.ProjectDefaultNotificationSetting_EvaluatorsResultNotificationId, T1.ProjectDefaultNotificationSetting_TrainersStartNotificationId, T1.ProjectDefaultNotificationSetting_TrainersCompletedNotificationId, T1.ProjectDefaultNotificationSetting_TrainersResultNotificationId, T1.ProjectDefaultNotificationSetting_ManagersStartNotificationId, T1.ProjectDefaultNotificationSetting_ManagersCompletedNotificationId, T1.ProjectDefaultNotificationSetting_ManagersResultNotificationId, T1.ProjectDefaultNotificationSetting_FinalScoreManagersStartNotificationId, T1.ProjectDefaultNotificationSetting_FinalScoreManagersCompletedNotificationId, T1.ProjectDefaultNotificationSetting_FinalScoreManagersResultNotificationId, T1.ProjectDefaultNotificationSetting_ProjectManagersStartNotificationId, T1.ProjectDefaultNotificationSetting_ProjectManagersCompletedNotificationId, T1.ProjectDefaultNotificationSetting_ProjectManagersResultNotificationId, T1.ProjectDefaultNotificationSetting_ParticipantGreenNotificationId, T1.ProjectDefaultNotificationSetting_ParticipantYellowNotificationId, T1.ProjectDefaultNotificationSetting_ParticipantRedNotificationId, T1.ProjectDefaultNotificationSetting_EvaluatorGreenNotificationId, T1.ProjectDefaultNotificationSetting_EvaluatorYellowNotificationId, T1.ProjectDefaultNotificationSetting_EvaluatorRedNotificationId, T1.ProjectDefaultNotificationSetting_ManagerGreenNotificationId, T1.ProjectDefaultNotificationSetting_ManagerYellowNotificationId, T1.ProjectDefaultNotificationSetting_ManagerRedNotificationId, T1.ProjectDefaultNotificationSetting_TrainerGreenNotificationId, T1.ProjectDefaultNotificationSetting_TrainerYellowNotificationId, T1.ProjectDefaultNotificationSetting_TrainerRedNotificationId, T1.ProjectDefaultNotificationSetting_FinalScoreManagersGreenNotificationId, T1.ProjectDefaultNotificationSetting_FinalScoreManagersYellowNotificationId, T1.ProjectDefaultNotificationSetting_FinalScoreManagersRedNotificationId, T1.ProjectDefaultNotificationSetting_ProjectManagersGreenNotificationId, T1.ProjectDefaultNotificationSetting_ProjectManagersYellowNotificationId, T1.ProjectDefaultNotificationSetting_ProjectManagersRedNotificationId, T1.ProjectDefaultNotificationSetting_GreenAlarmBefore, T1.ProjectDefaultNotificationSetting_YellowAlarmBefore, T1.ProjectDefaultNotificationSetting_RedAlarmBefore, T1.ProjectDefaultNotificationSetting_EmailNotification, T1.ProjectDefaultNotificationSetting_SmsNotification, T1.ProjectDefaultNotificationSetting_CreatedOn, T1.ProjectDefaultNotificationSetting_CreatedBy, T1.ProjectDefaultNotificationSetting_ModifiedOn, T1.ProjectDefaultNotificationSetting_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS ProjectDefaultNotificationSetting_Id, 
            T.ProjectId AS ProjectDefaultNotificationSetting_ProjectId, 
            T.ParticipantsStartNotificationId AS ProjectDefaultNotificationSetting_ParticipantsStartNotificationId, 
            T.ParticipantsCompletedNotificationId AS ProjectDefaultNotificationSetting_ParticipantsCompletedNotificationId, 
            T.ParticipantsResultNotificationId AS ProjectDefaultNotificationSetting_ParticipantsResultNotificationId, 
            T.EvaluatorsStartNotificationId AS ProjectDefaultNotificationSetting_EvaluatorsStartNotificationId, 
            T.EvaluatorsCompletedNotificationId AS ProjectDefaultNotificationSetting_EvaluatorsCompletedNotificationId, 
            T.EvaluatorsResultNotificationId AS ProjectDefaultNotificationSetting_EvaluatorsResultNotificationId, 
            T.TrainersStartNotificationId AS ProjectDefaultNotificationSetting_TrainersStartNotificationId, 
            T.TrainersCompletedNotificationId AS ProjectDefaultNotificationSetting_TrainersCompletedNotificationId, 
            T.TrainersResultNotificationId AS ProjectDefaultNotificationSetting_TrainersResultNotificationId, 
            T.ManagersStartNotificationId AS ProjectDefaultNotificationSetting_ManagersStartNotificationId, 
            T.ManagersCompletedNotificationId AS ProjectDefaultNotificationSetting_ManagersCompletedNotificationId, 
            T.ManagersResultNotificationId AS ProjectDefaultNotificationSetting_ManagersResultNotificationId, 
            T.FinalScoreManagersStartNotificationId AS ProjectDefaultNotificationSetting_FinalScoreManagersStartNotificationId, 
            T.FinalScoreManagersCompletedNotificationId AS ProjectDefaultNotificationSetting_FinalScoreManagersCompletedNotificationId, 
            T.FinalScoreManagersResultNotificationId AS ProjectDefaultNotificationSetting_FinalScoreManagersResultNotificationId, 
            T.ProjectManagersStartNotificationId AS ProjectDefaultNotificationSetting_ProjectManagersStartNotificationId, 
            T.ProjectManagersCompletedNotificationId AS ProjectDefaultNotificationSetting_ProjectManagersCompletedNotificationId, 
            T.ProjectManagersResultNotificationId AS ProjectDefaultNotificationSetting_ProjectManagersResultNotificationId, 
            T.ParticipantGreenNotificationId AS ProjectDefaultNotificationSetting_ParticipantGreenNotificationId, 
            T.ParticipantYellowNotificationId AS ProjectDefaultNotificationSetting_ParticipantYellowNotificationId, 
            T.ParticipantRedNotificationId AS ProjectDefaultNotificationSetting_ParticipantRedNotificationId, 
            T.EvaluatorGreenNotificationId AS ProjectDefaultNotificationSetting_EvaluatorGreenNotificationId, 
            T.EvaluatorYellowNotificationId AS ProjectDefaultNotificationSetting_EvaluatorYellowNotificationId, 
            T.EvaluatorRedNotificationId AS ProjectDefaultNotificationSetting_EvaluatorRedNotificationId, 
            T.ManagerGreenNotificationId AS ProjectDefaultNotificationSetting_ManagerGreenNotificationId, 
            T.ManagerYellowNotificationId AS ProjectDefaultNotificationSetting_ManagerYellowNotificationId, 
            T.ManagerRedNotificationId AS ProjectDefaultNotificationSetting_ManagerRedNotificationId, 
            T.TrainerGreenNotificationId AS ProjectDefaultNotificationSetting_TrainerGreenNotificationId, 
            T.TrainerYellowNotificationId AS ProjectDefaultNotificationSetting_TrainerYellowNotificationId, 
            T.TrainerRedNotificationId AS ProjectDefaultNotificationSetting_TrainerRedNotificationId, 
            T.FinalScoreManagersGreenNotificationId AS ProjectDefaultNotificationSetting_FinalScoreManagersGreenNotificationId, 
            T.FinalScoreManagersYellowNotificationId AS ProjectDefaultNotificationSetting_FinalScoreManagersYellowNotificationId, 
            T.FinalScoreManagersRedNotificationId AS ProjectDefaultNotificationSetting_FinalScoreManagersRedNotificationId, 
            T.ProjectManagersGreenNotificationId AS ProjectDefaultNotificationSetting_ProjectManagersGreenNotificationId, 
            T.ProjectManagersYellowNotificationId AS ProjectDefaultNotificationSetting_ProjectManagersYellowNotificationId, 
            T.ProjectManagersRedNotificationId AS ProjectDefaultNotificationSetting_ProjectManagersRedNotificationId, 
            T.GreenAlarmBefore AS ProjectDefaultNotificationSetting_GreenAlarmBefore, 
            T.YellowAlarmBefore AS ProjectDefaultNotificationSetting_YellowAlarmBefore, 
            T.RedAlarmBefore AS ProjectDefaultNotificationSetting_RedAlarmBefore, 
            T.EmailNotification AS ProjectDefaultNotificationSetting_EmailNotification, 
            T.SmsNotification AS ProjectDefaultNotificationSetting_SmsNotification, 
            T.CreatedOn AS ProjectDefaultNotificationSetting_CreatedOn, 
            T.CreatedBy AS ProjectDefaultNotificationSetting_CreatedBy, 
            T.ModifiedOn AS ProjectDefaultNotificationSetting_ModifiedOn, 
            T.ModifiedBy AS ProjectDefaultNotificationSetting_ModifiedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.ProjectDefaultNotificationSettings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.StageGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView210()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StageGroups
        [IPSModel.StageGroup](T1.StageGroup_Id, T1.StageGroup_Name, T1.StageGroup_Description, T1.StageGroup_StartDate, T1.StageGroup_EndDate, T1.StageGroup_ParentStageGroupId, T1.StageGroup_ParentParticipantId, T1.StageGroup_MonthsSpan, T1.StageGroup_WeeksSpan, T1.StageGroup_DaysSpan, T1.StageGroup_HoursSpan, T1.StageGroup_MinutesSpan, T1.StageGroup_ActualTimeSpan, T1.StageGroup_TotalMilestones, T1.StageGroup_CreatedOn, T1.StageGroup_CreatedBy, T1.StageGroup_ModifiedOn, T1.StageGroup_ModifiedBy, T1.StageGroup_StartStageStartDate, T1.StageGroup_StartStageEndDate, T1.StageGroup_MilestoneStartDate, T1.StageGroup_MilestoneEndDate)
    FROM (
        SELECT 
            T.Id AS StageGroup_Id, 
            T.Name AS StageGroup_Name, 
            T.Description AS StageGroup_Description, 
            T.StartDate AS StageGroup_StartDate, 
            T.EndDate AS StageGroup_EndDate, 
            T.ParentStageGroupId AS StageGroup_ParentStageGroupId, 
            T.ParentParticipantId AS StageGroup_ParentParticipantId, 
            T.MonthsSpan AS StageGroup_MonthsSpan, 
            T.WeeksSpan AS StageGroup_WeeksSpan, 
            T.DaysSpan AS StageGroup_DaysSpan, 
            T.HoursSpan AS StageGroup_HoursSpan, 
            T.MinutesSpan AS StageGroup_MinutesSpan, 
            T.ActualTimeSpan AS StageGroup_ActualTimeSpan, 
            T.TotalMilestones AS StageGroup_TotalMilestones, 
            T.CreatedOn AS StageGroup_CreatedOn, 
            T.CreatedBy AS StageGroup_CreatedBy, 
            T.ModifiedOn AS StageGroup_ModifiedOn, 
            T.ModifiedBy AS StageGroup_ModifiedBy, 
            T.StartStageStartDate AS StageGroup_StartStageStartDate, 
            T.StartStageEndDate AS StageGroup_StartStageEndDate, 
            T.MilestoneStartDate AS StageGroup_MilestoneStartDate, 
            T.MilestoneEndDate AS StageGroup_MilestoneEndDate, 
            True AS _from0
        FROM IPSModelStoreContainer.StageGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingActivities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView211()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingActivities
        [IPSModel.ProspectingActivity](T1.ProspectingActivity_Id, T1.ProspectingActivity_ProspectingGoalActivityId, T1.ProspectingActivity_Name, T1.ProspectingActivity_ActivityStart, T1.ProspectingActivity_ActivityEnd, T1.ProspectingActivity_CreatedOn, T1.ProspectingActivity_CreatedBy, T1.ProspectingActivity_ModifiedOn, T1.ProspectingActivity_ModifiedBy, T1.ProspectingActivity_StartTime, T1.ProspectingActivity_StopTime)
    FROM (
        SELECT 
            T.Id AS ProspectingActivity_Id, 
            T.ProspectingGoalActivityId AS ProspectingActivity_ProspectingGoalActivityId, 
            T.Name AS ProspectingActivity_Name, 
            T.ActivityStart AS ProspectingActivity_ActivityStart, 
            T.ActivityEnd AS ProspectingActivity_ActivityEnd, 
            T.CreatedOn AS ProspectingActivity_CreatedOn, 
            T.CreatedBy AS ProspectingActivity_CreatedBy, 
            T.ModifiedOn AS ProspectingActivity_ModifiedOn, 
            T.ModifiedBy AS ProspectingActivity_ModifiedBy, 
            T.StartTime AS ProspectingActivity_StartTime, 
            T.StopTime AS ProspectingActivity_StopTime, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingActivities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingGoalActivityInfoes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView212()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalActivityInfoes
        [IPSModel.ProspectingGoalActivityInfo](T1.ProspectingGoalActivityInfo_Id, T1.ProspectingGoalActivityInfo_ProfileId, T1.ProspectingGoalActivityInfo_ProspectingGoalId, T1.ProspectingGoalActivityInfo_ActivityTime, T1.ProspectingGoalActivityInfo_BreakTime, T1.ProspectingGoalActivityInfo_TotalActivities, T1.ProspectingGoalActivityInfo_ActivityStartTime, T1.ProspectingGoalActivityInfo_ActivityEndTime, T1.ProspectingGoalActivityInfo_UserId, T1.ProspectingGoalActivityInfo_CreatedOn, T1.ProspectingGoalActivityInfo_CreatedBy, T1.ProspectingGoalActivityInfo_ModifiedOn, T1.ProspectingGoalActivityInfo_ModifiedBy, T1.ProspectingGoalActivityInfo_ActivityCalculationType, T1.ProspectingGoalActivityInfo_Frequency)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalActivityInfo_Id, 
            T.ProfileId AS ProspectingGoalActivityInfo_ProfileId, 
            T.ProspectingGoalId AS ProspectingGoalActivityInfo_ProspectingGoalId, 
            T.ActivityTime AS ProspectingGoalActivityInfo_ActivityTime, 
            T.BreakTime AS ProspectingGoalActivityInfo_BreakTime, 
            T.TotalActivities AS ProspectingGoalActivityInfo_TotalActivities, 
            T.ActivityStartTime AS ProspectingGoalActivityInfo_ActivityStartTime, 
            T.ActivityEndTime AS ProspectingGoalActivityInfo_ActivityEndTime, 
            T.UserId AS ProspectingGoalActivityInfo_UserId, 
            T.CreatedOn AS ProspectingGoalActivityInfo_CreatedOn, 
            T.CreatedBy AS ProspectingGoalActivityInfo_CreatedBy, 
            T.ModifiedOn AS ProspectingGoalActivityInfo_ModifiedOn, 
            T.ModifiedBy AS ProspectingGoalActivityInfo_ModifiedBy, 
            T.ActivityCalculationType AS ProspectingGoalActivityInfo_ActivityCalculationType, 
            T.Frequency AS ProspectingGoalActivityInfo_Frequency, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingGoalActivityInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingSkillGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView213()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingSkillGoals
        [IPSModel.ProspectingSkillGoal](T1.ProspectingSkillGoal_Id, T1.ProspectingSkillGoal_ProspectingGoalId, T1.ProspectingSkillGoal_SkillId, T1.ProspectingSkillGoal_Goal)
    FROM (
        SELECT 
            T.Id AS ProspectingSkillGoal_Id, 
            T.ProspectingGoalId AS ProspectingSkillGoal_ProspectingGoalId, 
            T.SkillId AS ProspectingSkillGoal_SkillId, 
            T.Goal AS ProspectingSkillGoal_Goal, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingSkillGoals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingCustomerResults.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView214()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomerResults
        [IPSModel.ProspectingCustomerResult](T1.ProspectingCustomerResult_Id, T1.ProspectingCustomerResult_ProspectingCustomerId, T1.ProspectingCustomerResult_ProspectingActivityId, T1.ProspectingCustomerResult_SkillId, T1.ProspectingCustomerResult_IsDone, T1.ProspectingCustomerResult_Description, T1.ProspectingCustomerResult_Duration, T1.ProspectingCustomerResult_IsNoMeeting, T1.ProspectingCustomerResult_IsMeeting, T1.ProspectingCustomerResult_IsFollowUp, T1.ProspectingCustomerResult_CustomerInterestRate, T1.ProspectingCustomerResult_Reason, T1.ProspectingCustomerResult_CreatedOn, T1.ProspectingCustomerResult_CreatedBy, T1.ProspectingCustomerResult_ModifiedOn, T1.ProspectingCustomerResult_ModifiedBy, T1.ProspectingCustomerResult_IsServiceAgreed, T1.ProspectingCustomerResult_ServiceAmount, T1.ProspectingCustomerResult_ProspectingType, T1.ProspectingCustomerResult_IsSales, T1.ProspectingCustomerResult_SalesNotification)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomerResult_Id, 
            T.ProspectingCustomerId AS ProspectingCustomerResult_ProspectingCustomerId, 
            T.ProspectingActivityId AS ProspectingCustomerResult_ProspectingActivityId, 
            T.SkillId AS ProspectingCustomerResult_SkillId, 
            T.IsDone AS ProspectingCustomerResult_IsDone, 
            T.Description AS ProspectingCustomerResult_Description, 
            T.Duration AS ProspectingCustomerResult_Duration, 
            T.IsNoMeeting AS ProspectingCustomerResult_IsNoMeeting, 
            T.IsMeeting AS ProspectingCustomerResult_IsMeeting, 
            T.IsFollowUp AS ProspectingCustomerResult_IsFollowUp, 
            T.CustomerInterestRate AS ProspectingCustomerResult_CustomerInterestRate, 
            T.Reason AS ProspectingCustomerResult_Reason, 
            T.CreatedOn AS ProspectingCustomerResult_CreatedOn, 
            T.CreatedBy AS ProspectingCustomerResult_CreatedBy, 
            T.ModifiedOn AS ProspectingCustomerResult_ModifiedOn, 
            T.ModifiedBy AS ProspectingCustomerResult_ModifiedBy, 
            T.IsServiceAgreed AS ProspectingCustomerResult_IsServiceAgreed, 
            T.ServiceAmount AS ProspectingCustomerResult_ServiceAmount, 
            T.ProspectingType AS ProspectingCustomerResult_ProspectingType, 
            T.IsSales AS ProspectingCustomerResult_IsSales, 
            T.SalesNotification AS ProspectingCustomerResult_SalesNotification, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingCustomerResult AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingSchedules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView215()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingSchedules
        [IPSModel.ProspectingSchedule](T1.ProspectingSchedule_Id, T1.ProspectingSchedule_ProspectingCustomerId, T1.ProspectingSchedule_ProspectingActivityId, T1.ProspectingSchedule_ProspectingCustomerResultId, T1.ProspectingSchedule_IsMeeting, T1.ProspectingSchedule_IsFollowUp, T1.ProspectingSchedule_ScheduleDate, T1.ProspectingSchedule_Agenda, T1.ProspectingSchedule_CreatedOn, T1.ProspectingSchedule_CreatedBy, T1.ProspectingSchedule_ModifiedOn, T1.ProspectingSchedule_ModiffiedBy, T1.ProspectingSchedule_TaskId, T1.ProspectingSchedule_IsServiceAgreed, T1.ProspectingSchedule_ProspectingType, T1.ProspectingSchedule_Notification)
    FROM (
        SELECT 
            T.Id AS ProspectingSchedule_Id, 
            T.ProspectingCustomerId AS ProspectingSchedule_ProspectingCustomerId, 
            T.ProspectingActivityId AS ProspectingSchedule_ProspectingActivityId, 
            T.ProspectingCustomerResultId AS ProspectingSchedule_ProspectingCustomerResultId, 
            T.IsMeeting AS ProspectingSchedule_IsMeeting, 
            T.IsFollowUp AS ProspectingSchedule_IsFollowUp, 
            T.ScheduleDate AS ProspectingSchedule_ScheduleDate, 
            T.Agenda AS ProspectingSchedule_Agenda, 
            T.CreatedOn AS ProspectingSchedule_CreatedOn, 
            T.CreatedBy AS ProspectingSchedule_CreatedBy, 
            T.ModifiedOn AS ProspectingSchedule_ModifiedOn, 
            T.ModiffiedBy AS ProspectingSchedule_ModiffiedBy, 
            T.TaskId AS ProspectingSchedule_TaskId, 
            T.IsServiceAgreed AS ProspectingSchedule_IsServiceAgreed, 
            T.ProspectingType AS ProspectingSchedule_ProspectingType, 
            T.Notification AS ProspectingSchedule_Notification, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingSchedule AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingActivityLogs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView216()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingActivityLogs
        [IPSModel.ProspectingActivityLog](T1.ProspectingActivityLog_Id, T1.ProspectingActivityLog_ProspectingActivityId, T1.ProspectingActivityLog_Event, T1.ProspectingActivityLog_EventTime, T1.ProspectingActivityLog_CreatedOn, T1.ProspectingActivityLog_CreatedBy)
    FROM (
        SELECT 
            T.Id AS ProspectingActivityLog_Id, 
            T.ProspectingActivityId AS ProspectingActivityLog_ProspectingActivityId, 
            T.Event AS ProspectingActivityLog_Event, 
            T.EventTime AS ProspectingActivityLog_EventTime, 
            T.CreatedOn AS ProspectingActivityLog_CreatedOn, 
            T.CreatedBy AS ProspectingActivityLog_CreatedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingActivityLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingGoalInfoes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView217()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalInfoes
        [IPSModel.ProspectingGoalInfo](T1.ProspectingGoalInfo_Id, T1.ProspectingGoalInfo_Name, T1.ProspectingGoalInfo_ProfileId, T1.ProspectingGoalInfo_ProjectId, T1.ProspectingGoalInfo_ParticipantId, T1.ProspectingGoalInfo_GoalStartDate, T1.ProspectingGoalInfo_GoalEndDate, T1.ProspectingGoalInfo_CreatedOn, T1.ProspectingGoalInfo_CreatedBy, T1.ProspectingGoalInfo_ModifiedOn, T1.ProspectingGoalInfo_ModifiedBy, T1.ProspectingGoalInfo_UserId, T1.ProspectingGoalInfo_RecurrenceRule, T1.ProspectingGoalInfo_TaskId, T1.ProspectingGoalInfo_ProspectingGoalScaleId, T1.ProspectingGoalInfo_ProspectingType)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalInfo_Id, 
            T.Name AS ProspectingGoalInfo_Name, 
            T.ProfileId AS ProspectingGoalInfo_ProfileId, 
            T.ProjectId AS ProspectingGoalInfo_ProjectId, 
            T.ParticipantId AS ProspectingGoalInfo_ParticipantId, 
            T.GoalStartDate AS ProspectingGoalInfo_GoalStartDate, 
            T.GoalEndDate AS ProspectingGoalInfo_GoalEndDate, 
            T.CreatedOn AS ProspectingGoalInfo_CreatedOn, 
            T.CreatedBy AS ProspectingGoalInfo_CreatedBy, 
            T.ModifiedOn AS ProspectingGoalInfo_ModifiedOn, 
            T.ModifiedBy AS ProspectingGoalInfo_ModifiedBy, 
            T.UserId AS ProspectingGoalInfo_UserId, 
            T.RecurrenceRule AS ProspectingGoalInfo_RecurrenceRule, 
            T.TaskId AS ProspectingGoalInfo_TaskId, 
            T.ProspectingGoalScaleId AS ProspectingGoalInfo_ProspectingGoalScaleId, 
            T.ProspectingType AS ProspectingGoalInfo_ProspectingType, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingGoalInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingGoalScaleRanges.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView218()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalScaleRanges
        [IPSModel.ProspectingGoalScaleRanx](T1.ProspectingGoalScaleRanx_Id, T1.ProspectingGoalScaleRanx_ProspectingGoalScaleId, T1.ProspectingGoalScaleRanx_Min, T1.ProspectingGoalScaleRanx_Max, T1.ProspectingGoalScaleRanx_Description, T1.ProspectingGoalScaleRanx_Color)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalScaleRanx_Id, 
            T.ProspectingGoalScaleId AS ProspectingGoalScaleRanx_ProspectingGoalScaleId, 
            T.Min AS ProspectingGoalScaleRanx_Min, 
            T.Max AS ProspectingGoalScaleRanx_Max, 
            T.Description AS ProspectingGoalScaleRanx_Description, 
            T.Color AS ProspectingGoalScaleRanx_Color, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingGoalScaleRanges AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingGoalScales.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView219()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingGoalScales
        [IPSModel.ProspectingGoalScale](T1.ProspectingGoalScale_Id, T1.ProspectingGoalScale_Name, T1.ProspectingGoalScale_Description, T1.ProspectingGoalScale_ScaleCategoryId, T1.ProspectingGoalScale_MeasureUnitId, T1.ProspectingGoalScale_IncludeNotRelevant, T1.ProspectingGoalScale_IsTemplate, T1.ProspectingGoalScale_CreatedOn, T1.ProspectingGoalScale_CreatedBy, T1.ProspectingGoalScale_ModifiedOn, T1.ProspectingGoalScale_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS ProspectingGoalScale_Id, 
            T.Name AS ProspectingGoalScale_Name, 
            T.Description AS ProspectingGoalScale_Description, 
            T.ScaleCategoryId AS ProspectingGoalScale_ScaleCategoryId, 
            T.MeasureUnitId AS ProspectingGoalScale_MeasureUnitId, 
            T.IncludeNotRelevant AS ProspectingGoalScale_IncludeNotRelevant, 
            T.IsTemplate AS ProspectingGoalScale_IsTemplate, 
            T.CreatedOn AS ProspectingGoalScale_CreatedOn, 
            T.CreatedBy AS ProspectingGoalScale_CreatedBy, 
            T.ModifiedOn AS ProspectingGoalScale_ModifiedOn, 
            T.ModifiedBy AS ProspectingGoalScale_ModifiedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingGoalScales AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView220()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [IPSModel.Customer](T1.Customer_Id, T1.Customer_OrganizationId, T1.Customer_Name, T1.Customer_Email, T1.Customer_Mobile, T1.Customer_PostCode, T1.Customer_CreatedOn, T1.Customer_CreatedBy, T1.Customer_ModifiedOn, T1.Customer_ModifiedBy, T1.Customer_AssignedUserId, T1.Customer_CSVFile)
    FROM (
        SELECT 
            T.Id AS Customer_Id, 
            T.OrganizationId AS Customer_OrganizationId, 
            T.Name AS Customer_Name, 
            T.Email AS Customer_Email, 
            T.Mobile AS Customer_Mobile, 
            T.PostCode AS Customer_PostCode, 
            T.CreatedOn AS Customer_CreatedOn, 
            T.CreatedBy AS Customer_CreatedBy, 
            T.ModifiedOn AS Customer_ModifiedOn, 
            T.ModifiedBy AS Customer_ModifiedBy, 
            T.AssignedUserId AS Customer_AssignedUserId, 
            T.CSVFile AS Customer_CSVFile, 
            True AS _from0
        FROM IPSModelStoreContainer.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.CustomerSalesDatas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView221()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerSalesDatas
        [IPSModel.CustomerSalesData](T1.CustomerSalesData_Id, T1.CustomerSalesData_CustomerId, T1.CustomerSalesData_Date, T1.CustomerSalesData_Model, T1.CustomerSalesData_Type, T1.CustomerSalesData_RegistrationNo, T1.CustomerSalesData_Seller, T1.CustomerSalesData_Offer, T1.CustomerSalesData_CSVFile, T1.CustomerSalesData_CreatedDate, T1.CustomerSalesData_CreatedBy)
    FROM (
        SELECT 
            T.Id AS CustomerSalesData_Id, 
            T.CustomerId AS CustomerSalesData_CustomerId, 
            T.Date AS CustomerSalesData_Date, 
            T.Model AS CustomerSalesData_Model, 
            T.Type AS CustomerSalesData_Type, 
            T.RegistrationNo AS CustomerSalesData_RegistrationNo, 
            T.Seller AS CustomerSalesData_Seller, 
            T.Offer AS CustomerSalesData_Offer, 
            T.CSVFile AS CustomerSalesData_CSVFile, 
            T.CreatedDate AS CustomerSalesData_CreatedDate, 
            T.CreatedBy AS CustomerSalesData_CreatedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.CustomerSalesData AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TrainingFeedbacks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView222()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TrainingFeedbacks
        [IPSModel.TrainingFeedback](T1.TrainingFeedback_Id, T1.TrainingFeedback_TrainingId, T1.TrainingFeedback_TaskId, T1.TrainingFeedback_Rating, T1.TrainingFeedback_WorkedWell, T1.TrainingFeedback_WorkedNotWell, T1.TrainingFeedback_WhatNextDescription, T1.TrainingFeedback_TimeSpentMinutes, T1.TrainingFeedback_FeedbackDateTime, T1.TrainingFeedback_RecurrencesStartTime, T1.TrainingFeedback_RecurrencesEndTime, T1.TrainingFeedback_IsRecurrences, T1.TrainingFeedback_RecurrencesRule, T1.TrainingFeedback_IsEvaluatorFeedBack, T1.TrainingFeedback_EvaluatorId, T1.TrainingFeedback_EvaluatorFeedBackTime, T1.TrainingFeedback_IsParticipantPaused, T1.TrainingFeedback_ParticipantPausedAt, T1.TrainingFeedback_StartedAt)
    FROM (
        SELECT 
            T.Id AS TrainingFeedback_Id, 
            T.TrainingId AS TrainingFeedback_TrainingId, 
            T.TaskId AS TrainingFeedback_TaskId, 
            T.Rating AS TrainingFeedback_Rating, 
            T.WorkedWell AS TrainingFeedback_WorkedWell, 
            T.WorkedNotWell AS TrainingFeedback_WorkedNotWell, 
            T.WhatNextDescription AS TrainingFeedback_WhatNextDescription, 
            T.TimeSpentMinutes AS TrainingFeedback_TimeSpentMinutes, 
            T.FeedbackDateTime AS TrainingFeedback_FeedbackDateTime, 
            T.RecurrencesStartTime AS TrainingFeedback_RecurrencesStartTime, 
            T.RecurrencesEndTime AS TrainingFeedback_RecurrencesEndTime, 
            T.IsRecurrences AS TrainingFeedback_IsRecurrences, 
            T.RecurrencesRule AS TrainingFeedback_RecurrencesRule, 
            T.IsEvaluatorFeedBack AS TrainingFeedback_IsEvaluatorFeedBack, 
            T.EvaluatorId AS TrainingFeedback_EvaluatorId, 
            T.EvaluatorFeedBackTime AS TrainingFeedback_EvaluatorFeedBackTime, 
            T.IsParticipantPaused AS TrainingFeedback_IsParticipantPaused, 
            T.ParticipantPausedAt AS TrainingFeedback_ParticipantPausedAt, 
            T.StartedAt AS TrainingFeedback_StartedAt, 
            True AS _from0
        FROM IPSModelStoreContainer.TrainingFeedback AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingActivityFeedbacks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView223()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingActivityFeedbacks
        [IPSModel.ProspectingActivityFeedback](T1.ProspectingActivityFeedback_Id, T1.ProspectingActivityFeedback_ProspectingActivityId, T1.ProspectingActivityFeedback_Rating, T1.ProspectingActivityFeedback_WorkedWell, T1.ProspectingActivityFeedback_WorkedNotWell, T1.ProspectingActivityFeedback_WhatNextDescription, T1.ProspectingActivityFeedback_TimeSpentMinutes, T1.ProspectingActivityFeedback_FeedbackDateTime, T1.ProspectingActivityFeedback_ActvityStartTime, T1.ProspectingActivityFeedback_ActvityEndTime, T1.ProspectingActivityFeedback_IsRecurrences, T1.ProspectingActivityFeedback_RecurrencesRule, T1.ProspectingActivityFeedback_IsParticipantPaused, T1.ProspectingActivityFeedback_ParticipantPausedAt, T1.ProspectingActivityFeedback_StartedAt)
    FROM (
        SELECT 
            T.Id AS ProspectingActivityFeedback_Id, 
            T.ProspectingActivityId AS ProspectingActivityFeedback_ProspectingActivityId, 
            T.Rating AS ProspectingActivityFeedback_Rating, 
            T.WorkedWell AS ProspectingActivityFeedback_WorkedWell, 
            T.WorkedNotWell AS ProspectingActivityFeedback_WorkedNotWell, 
            T.WhatNextDescription AS ProspectingActivityFeedback_WhatNextDescription, 
            T.TimeSpentMinutes AS ProspectingActivityFeedback_TimeSpentMinutes, 
            T.FeedbackDateTime AS ProspectingActivityFeedback_FeedbackDateTime, 
            T.ActvityStartTime AS ProspectingActivityFeedback_ActvityStartTime, 
            T.ActvityEndTime AS ProspectingActivityFeedback_ActvityEndTime, 
            T.IsRecurrences AS ProspectingActivityFeedback_IsRecurrences, 
            T.RecurrencesRule AS ProspectingActivityFeedback_RecurrencesRule, 
            T.IsParticipantPaused AS ProspectingActivityFeedback_IsParticipantPaused, 
            T.ParticipantPausedAt AS ProspectingActivityFeedback_ParticipantPausedAt, 
            T.StartedAt AS ProspectingActivityFeedback_StartedAt, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingActivityFeedback AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingCustomers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView224()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomers
        [IPSModel.ProspectingCustomer](T1.ProspectingCustomer_Id, T1.ProspectingCustomer_Name, T1.ProspectingCustomer_Phone, T1.ProspectingCustomer_Detail, T1.ProspectingCustomer_ScheduleDate, T1.ProspectingCustomer_CreatedOn, T1.ProspectingCustomer_CreatedBy, T1.ProspectingCustomer_ModifiedOn, T1.ProspectingCustomer_ModifiedBy, T1.ProspectingCustomer_CustomerId, T1.ProspectingCustomer_ProspectingGoalId, T1.ProspectingCustomer_CustomerSaleDataId, T1.ProspectingCustomer_AssignedToUserId, T1.ProspectingCustomer_AssignedOn, T1.ProspectingCustomer_AssignedBy, T1.ProspectingCustomer_UserId)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomer_Id, 
            T.Name AS ProspectingCustomer_Name, 
            T.Phone AS ProspectingCustomer_Phone, 
            T.Detail AS ProspectingCustomer_Detail, 
            T.ScheduleDate AS ProspectingCustomer_ScheduleDate, 
            T.CreatedOn AS ProspectingCustomer_CreatedOn, 
            T.CreatedBy AS ProspectingCustomer_CreatedBy, 
            T.ModifiedOn AS ProspectingCustomer_ModifiedOn, 
            T.ModifiedBy AS ProspectingCustomer_ModifiedBy, 
            T.CustomerId AS ProspectingCustomer_CustomerId, 
            T.ProspectingGoalId AS ProspectingCustomer_ProspectingGoalId, 
            T.CustomerSaleDataId AS ProspectingCustomer_CustomerSaleDataId, 
            T.AssignedToUserId AS ProspectingCustomer_AssignedToUserId, 
            T.AssignedOn AS ProspectingCustomer_AssignedOn, 
            T.AssignedBy AS ProspectingCustomer_AssignedBy, 
            T.UserId AS ProspectingCustomer_UserId, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingCustomers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ExpiredProspectingActivityReasons.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView225()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExpiredProspectingActivityReasons
        [IPSModel.ExpiredProspectingActivityReason](T1.ExpiredProspectingActivityReason_Id, T1.ExpiredProspectingActivityReason_ProspectingActivityId, T1.ExpiredProspectingActivityReason_Reason, T1.ExpiredProspectingActivityReason_CreatedOn, T1.ExpiredProspectingActivityReason_CreatedBy)
    FROM (
        SELECT 
            T.Id AS ExpiredProspectingActivityReason_Id, 
            T.ProspectingActivityId AS ExpiredProspectingActivityReason_ProspectingActivityId, 
            T.Reason AS ExpiredProspectingActivityReason_Reason, 
            T.CreatedOn AS ExpiredProspectingActivityReason_CreatedOn, 
            T.CreatedBy AS ExpiredProspectingActivityReason_CreatedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.ExpiredProspectingActivityReason AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Tasks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView226()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tasks
        [IPSModel.Task](T1.Task_Id, T1.Task_Title, T1.Task_Description, T1.Task_TaskListId, T1.Task_IsCompleted, T1.Task_CompletedDate, T1.Task_CreatedById, T1.Task_CreatedByName, T1.Task_CreatedDate, T1.Task_DueDate, T1.Task_ParentTaskID, T1.Task_StartDate, T1.Task_StatusId, T1.Task_PriorityId, T1.Task_TimeEstimateMinutes, T1.Task_TimeSpentMinutes, T1.Task_AssignedToId, T1.Task_CategoryId, T1.Task_RecurrenceRule, T1.Task_TrainingId, T1.Task_NotificationTemplateId, T1.Task_IsSMSNotification, T1.Task_IsEmailNotification, T1.Task_ProfileId, T1.Task_StageId, T1.Task_EmailBefore, T1.Task_SmsBefore, T1.Task_ProjectId, T1.Task_MeetingNotificationTemplateId, T1.Task_FollowUpNotificationTemplateId, T1.Task_SalesNotificationTemplateId)
    FROM (
        SELECT 
            T.Id AS Task_Id, 
            T.Title AS Task_Title, 
            T.Description AS Task_Description, 
            T.TaskListId AS Task_TaskListId, 
            T.IsCompleted AS Task_IsCompleted, 
            T.CompletedDate AS Task_CompletedDate, 
            T.CreatedById AS Task_CreatedById, 
            T.CreatedByName AS Task_CreatedByName, 
            T.CreatedDate AS Task_CreatedDate, 
            T.DueDate AS Task_DueDate, 
            T.ParentTaskID AS Task_ParentTaskID, 
            T.StartDate AS Task_StartDate, 
            T.StatusId AS Task_StatusId, 
            T.PriorityId AS Task_PriorityId, 
            T.TimeEstimateMinutes AS Task_TimeEstimateMinutes, 
            T.TimeSpentMinutes AS Task_TimeSpentMinutes, 
            T.AssignedToId AS Task_AssignedToId, 
            T.CategoryId AS Task_CategoryId, 
            T.RecurrenceRule AS Task_RecurrenceRule, 
            T.TrainingId AS Task_TrainingId, 
            T.NotificationTemplateId AS Task_NotificationTemplateId, 
            T.IsSMSNotification AS Task_IsSMSNotification, 
            T.IsEmailNotification AS Task_IsEmailNotification, 
            T.ProfileId AS Task_ProfileId, 
            T.StageId AS Task_StageId, 
            T.EmailBefore AS Task_EmailBefore, 
            T.SmsBefore AS Task_SmsBefore, 
            T.ProjectId AS Task_ProjectId, 
            T.MeetingNotificationTemplateId AS Task_MeetingNotificationTemplateId, 
            T.FollowUpNotificationTemplateId AS Task_FollowUpNotificationTemplateId, 
            T.SalesNotificationTemplateId AS Task_SalesNotificationTemplateId, 
            True AS _from0
        FROM IPSModelStoreContainer.Tasks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingCustomerOfferDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView227()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomerOfferDetails
        [IPSModel.ProspectingCustomerOfferDetail](T1.ProspectingCustomerOfferDetail_Id, T1.ProspectingCustomerOfferDetail_ProspectingCustomerId, T1.ProspectingCustomerOfferDetail_Description, T1.ProspectingCustomerOfferDetail_OfferPrice, T1.ProspectingCustomerOfferDetail_OfferSentTime, T1.ProspectingCustomerOfferDetail_OfferSentBy, T1.ProspectingCustomerOfferDetail_OfferFollowUpScheduleDate)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomerOfferDetail_Id, 
            T.ProspectingCustomerId AS ProspectingCustomerOfferDetail_ProspectingCustomerId, 
            T.Description AS ProspectingCustomerOfferDetail_Description, 
            T.OfferPrice AS ProspectingCustomerOfferDetail_OfferPrice, 
            T.OfferSentTime AS ProspectingCustomerOfferDetail_OfferSentTime, 
            T.OfferSentBy AS ProspectingCustomerOfferDetail_OfferSentBy, 
            T.OfferFollowUpScheduleDate AS ProspectingCustomerOfferDetail_OfferFollowUpScheduleDate, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingCustomerOfferDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.OfferClosingDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView228()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OfferClosingDetails
        [IPSModel.OfferClosingDetail](T1.OfferClosingDetail_Id, T1.OfferClosingDetail_ProspectingCustomerOfferDetailId, T1.OfferClosingDetail_Status, T1.OfferClosingDetail_Reason, T1.OfferClosingDetail_IsClosed, T1.OfferClosingDetail_ClosedTime, T1.OfferClosingDetail_ClosedBy, T1.OfferClosingDetail_Possibility, T1.OfferClosingDetail_WhatNext)
    FROM (
        SELECT 
            T.Id AS OfferClosingDetail_Id, 
            T.ProspectingCustomerOfferDetailId AS OfferClosingDetail_ProspectingCustomerOfferDetailId, 
            T.Status AS OfferClosingDetail_Status, 
            T.Reason AS OfferClosingDetail_Reason, 
            T.IsClosed AS OfferClosingDetail_IsClosed, 
            T.ClosedTime AS OfferClosingDetail_ClosedTime, 
            T.ClosedBy AS OfferClosingDetail_ClosedBy, 
            T.Possibility AS OfferClosingDetail_Possibility, 
            T.WhatNext AS OfferClosingDetail_WhatNext, 
            True AS _from0
        FROM IPSModelStoreContainer.OfferClosingDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ProspectingCustomerSalesAgreedDatas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView229()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProspectingCustomerSalesAgreedDatas
        [IPSModel.ProspectingCustomerSalesAgreedData](T1.ProspectingCustomerSalesAgreedData_Id, T1.ProspectingCustomerSalesAgreedData_SalesCategoryId, T1.ProspectingCustomerSalesAgreedData_Description, T1.ProspectingCustomerSalesAgreedData_Amount, T1.ProspectingCustomerSalesAgreedData_DeliveryDate, T1.ProspectingCustomerSalesAgreedData_ProspectingCustomerId, T1.ProspectingCustomerSalesAgreedData_ProspectingActivityId, T1.ProspectingCustomerSalesAgreedData_ProspectingCustomerResultId, T1.ProspectingCustomerSalesAgreedData_CreatedOn, T1.ProspectingCustomerSalesAgreedData_CreatedBy, T1.ProspectingCustomerSalesAgreedData_ModifiedOn, T1.ProspectingCustomerSalesAgreedData_ModifiedBy)
    FROM (
        SELECT 
            T.Id AS ProspectingCustomerSalesAgreedData_Id, 
            T.SalesCategoryId AS ProspectingCustomerSalesAgreedData_SalesCategoryId, 
            T.Description AS ProspectingCustomerSalesAgreedData_Description, 
            T.Amount AS ProspectingCustomerSalesAgreedData_Amount, 
            T.DeliveryDate AS ProspectingCustomerSalesAgreedData_DeliveryDate, 
            T.ProspectingCustomerId AS ProspectingCustomerSalesAgreedData_ProspectingCustomerId, 
            T.ProspectingActivityId AS ProspectingCustomerSalesAgreedData_ProspectingActivityId, 
            T.ProspectingCustomerResultId AS ProspectingCustomerSalesAgreedData_ProspectingCustomerResultId, 
            T.CreatedOn AS ProspectingCustomerSalesAgreedData_CreatedOn, 
            T.CreatedBy AS ProspectingCustomerSalesAgreedData_CreatedBy, 
            T.ModifiedOn AS ProspectingCustomerSalesAgreedData_ModifiedOn, 
            T.ModifiedBy AS ProspectingCustomerSalesAgreedData_ModifiedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.ProspectingCustomerSalesAgreedData AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IpsAttachmentFileDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView230()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsAttachmentFileDetails
        [IPSModel.IpsAttachmentFileDetail](T1.IpsAttachmentFileDetail_Id, T1.IpsAttachmentFileDetail_IpsAttachmentId, T1.IpsAttachmentFileDetail_FileName)
    FROM (
        SELECT 
            T.Id AS IpsAttachmentFileDetail_Id, 
            T.IpsAttachmentId AS IpsAttachmentFileDetail_IpsAttachmentId, 
            T.FileName AS IpsAttachmentFileDetail_FileName, 
            True AS _from0
        FROM IPSModelStoreContainer.IpsAttachmentFileDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IpsAttachments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView231()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsAttachments
        [IPSModel.IpsAttachment](T1.IpsAttachment_Id, T1.IpsAttachment_Title, T1.IpsAttachment_Description, T1.IpsAttachment_CreatedOn, T1.IpsAttachment_CreatedBy)
    FROM (
        SELECT 
            T.Id AS IpsAttachment_Id, 
            T.Title AS IpsAttachment_Title, 
            T.Description AS IpsAttachment_Description, 
            T.CreatedOn AS IpsAttachment_CreatedOn, 
            T.CreatedBy AS IpsAttachment_CreatedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.IpsAttachments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IpsAttachmentUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView232()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsAttachmentUsers
        [IPSModel.IpsAttachmentUser](T1.IpsAttachmentUser_Id, T1.IpsAttachmentUser_IpsAttachemntId, T1.IpsAttachmentUser_UserId, T1.IpsAttachmentUser_CreatedOn, T1.IpsAttachmentUser_CreatedBy)
    FROM (
        SELECT 
            T.Id AS IpsAttachmentUser_Id, 
            T.IpsAttachemntId AS IpsAttachmentUser_IpsAttachemntId, 
            T.UserId AS IpsAttachmentUser_UserId, 
            T.CreatedOn AS IpsAttachmentUser_CreatedOn, 
            T.CreatedBy AS IpsAttachmentUser_CreatedBy, 
            True AS _from0
        FROM IPSModelStoreContainer.IpsAttachmentUser AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Stages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView233()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stages
        [IPSModel.Stage](T1.Stage_Id, T1.Stage_Name, T1.Stage_StageGroupId, T1.Stage_StartDateTime, T1.Stage_EndDateTime, T1.Stage_EvaluationDurationMinutes, T1.Stage_EmailNotification, T1.Stage_SMSNotification, T1.Stage_GreenAlarmParticipantTemplateId, T1.Stage_GreenAlarmTime, T1.Stage_YellowAlarmParticipantTemplateId, T1.Stage_YellowAlarmTime, T1.Stage_RedAlarmParticipantTemplateId, T1.Stage_RedAlarmTime, T1.Stage_ExternalStartNotificationTemplateId, T1.Stage_ExternalCompletedNotificationTemplateId, T1.Stage_ExternalResultsNotificationTemplateId, T1.Stage_EvaluatorStartNotificationTemplateId, T1.Stage_EvaluatorCompletedNotificationTemplateId, T1.Stage_EvaluatorResultsNotificationTemplateId, T1.Stage_TrainerStartNotificationTemplateId, T1.Stage_TrainerCompletedNotificationTemplateId, T1.Stage_TrainerResultsNotificationTemplateId, T1.Stage_ManagerStartNotificationTemplateId, T1.Stage_ManagerCompletedNotificationTemplateId, T1.Stage_ManagerResultsNotificationTemplateId, T1.Stage_ManagerId, T1.Stage_TrainerId, T1.Stage_InvitedAt, T1.Stage_GreenAlarmEvaluatorTemplateId, T1.Stage_GreenAlarmManagerTemplateId, T1.Stage_GreenAlarmTrainerTemplateId, T1.Stage_YellowAlarmEvaluatorTemplateId, T1.Stage_YellowAlarmManagerTemplateId, T1.Stage_YellowAlarmTrainerTemplateId, T1.Stage_RedAlarmEvaluatorTemplateId, T1.Stage_RedAlarmManagerTemplateId, T1.Stage_RedAlarmTrainerTemplateId, T1.Stage_ProjectManagerStartNotificationTemplateId, T1.Stage_ProjectManagerCompletedNotificationTemplateId, T1.Stage_ProjectManagerResultsNotificationTemplateId, T1.Stage_ProjectManagerId, T1.Stage_GreenAlarmProjectManagerTemplateId, T1.Stage_YellowAlarmProjectManagerTemplateId, T1.Stage_RedAlarmProjectManagerTemplateId, T1.Stage_FinalScoreManagerStartNotificationTemplateId, T1.Stage_FinalScoreManagerCompletedNotificationTemplateId, T1.Stage_FinalScoreManagerResultsNotificationTemplateId, T1.Stage_GreenAlarmFinalScoreManagerTemplateId, T1.Stage_YellowAlarmFinalScoreManagerTemplateId, T1.Stage_RedAlarmFinalScoreManagerTemplateId, T1.Stage_EvaluationStartDate, T1.Stage_EvaluationEndDate, T1.Stage_CreatedOn, T1.Stage_CreatedBy, T1.Stage_ModifiedOn, T1.Stage_ModifiedBy, T1.Stage_IsPaused, T1.Stage_PausedAt, T1.Stage_IsStopped, T1.Stage_StoppedAt)
    FROM (
        SELECT 
            T.Id AS Stage_Id, 
            T.Name AS Stage_Name, 
            T.StageGroupId AS Stage_StageGroupId, 
            T.StartDateTime AS Stage_StartDateTime, 
            T.EndDateTime AS Stage_EndDateTime, 
            T.EvaluationDurationMinutes AS Stage_EvaluationDurationMinutes, 
            T.EmailNotification AS Stage_EmailNotification, 
            T.SMSNotification AS Stage_SMSNotification, 
            T.GreenAlarmParticipantTemplateId AS Stage_GreenAlarmParticipantTemplateId, 
            T.GreenAlarmTime AS Stage_GreenAlarmTime, 
            T.YellowAlarmParticipantTemplateId AS Stage_YellowAlarmParticipantTemplateId, 
            T.YellowAlarmTime AS Stage_YellowAlarmTime, 
            T.RedAlarmParticipantTemplateId AS Stage_RedAlarmParticipantTemplateId, 
            T.RedAlarmTime AS Stage_RedAlarmTime, 
            T.ExternalStartNotificationTemplateId AS Stage_ExternalStartNotificationTemplateId, 
            T.ExternalCompletedNotificationTemplateId AS Stage_ExternalCompletedNotificationTemplateId, 
            T.ExternalResultsNotificationTemplateId AS Stage_ExternalResultsNotificationTemplateId, 
            T.EvaluatorStartNotificationTemplateId AS Stage_EvaluatorStartNotificationTemplateId, 
            T.EvaluatorCompletedNotificationTemplateId AS Stage_EvaluatorCompletedNotificationTemplateId, 
            T.EvaluatorResultsNotificationTemplateId AS Stage_EvaluatorResultsNotificationTemplateId, 
            T.TrainerStartNotificationTemplateId AS Stage_TrainerStartNotificationTemplateId, 
            T.TrainerCompletedNotificationTemplateId AS Stage_TrainerCompletedNotificationTemplateId, 
            T.TrainerResultsNotificationTemplateId AS Stage_TrainerResultsNotificationTemplateId, 
            T.ManagerStartNotificationTemplateId AS Stage_ManagerStartNotificationTemplateId, 
            T.ManagerCompletedNotificationTemplateId AS Stage_ManagerCompletedNotificationTemplateId, 
            T.ManagerResultsNotificationTemplateId AS Stage_ManagerResultsNotificationTemplateId, 
            T.ManagerId AS Stage_ManagerId, 
            T.TrainerId AS Stage_TrainerId, 
            T.InvitedAt AS Stage_InvitedAt, 
            T.GreenAlarmEvaluatorTemplateId AS Stage_GreenAlarmEvaluatorTemplateId, 
            T.GreenAlarmManagerTemplateId AS Stage_GreenAlarmManagerTemplateId, 
            T.GreenAlarmTrainerTemplateId AS Stage_GreenAlarmTrainerTemplateId, 
            T.YellowAlarmEvaluatorTemplateId AS Stage_YellowAlarmEvaluatorTemplateId, 
            T.YellowAlarmManagerTemplateId AS Stage_YellowAlarmManagerTemplateId, 
            T.YellowAlarmTrainerTemplateId AS Stage_YellowAlarmTrainerTemplateId, 
            T.RedAlarmEvaluatorTemplateId AS Stage_RedAlarmEvaluatorTemplateId, 
            T.RedAlarmManagerTemplateId AS Stage_RedAlarmManagerTemplateId, 
            T.RedAlarmTrainerTemplateId AS Stage_RedAlarmTrainerTemplateId, 
            T.ProjectManagerStartNotificationTemplateId AS Stage_ProjectManagerStartNotificationTemplateId, 
            T.ProjectManagerCompletedNotificationTemplateId AS Stage_ProjectManagerCompletedNotificationTemplateId, 
            T.ProjectManagerResultsNotificationTemplateId AS Stage_ProjectManagerResultsNotificationTemplateId, 
            T.ProjectManagerId AS Stage_ProjectManagerId, 
            T.GreenAlarmProjectManagerTemplateId AS Stage_GreenAlarmProjectManagerTemplateId, 
            T.YellowAlarmProjectManagerTemplateId AS Stage_YellowAlarmProjectManagerTemplateId, 
            T.RedAlarmProjectManagerTemplateId AS Stage_RedAlarmProjectManagerTemplateId, 
            T.FinalScoreManagerStartNotificationTemplateId AS Stage_FinalScoreManagerStartNotificationTemplateId, 
            T.FinalScoreManagerCompletedNotificationTemplateId AS Stage_FinalScoreManagerCompletedNotificationTemplateId, 
            T.FinalScoreManagerResultsNotificationTemplateId AS Stage_FinalScoreManagerResultsNotificationTemplateId, 
            T.GreenAlarmFinalScoreManagerTemplateId AS Stage_GreenAlarmFinalScoreManagerTemplateId, 
            T.YellowAlarmFinalScoreManagerTemplateId AS Stage_YellowAlarmFinalScoreManagerTemplateId, 
            T.RedAlarmFinalScoreManagerTemplateId AS Stage_RedAlarmFinalScoreManagerTemplateId, 
            T.EvaluationStartDate AS Stage_EvaluationStartDate, 
            T.EvaluationEndDate AS Stage_EvaluationEndDate, 
            T.CreatedOn AS Stage_CreatedOn, 
            T.CreatedBy AS Stage_CreatedBy, 
            T.ModifiedOn AS Stage_ModifiedOn, 
            T.ModifiedBy AS Stage_ModifiedBy, 
            T.IsPaused AS Stage_IsPaused, 
            T.PausedAt AS Stage_PausedAt, 
            T.IsStopped AS Stage_IsStopped, 
            T.StoppedAt AS Stage_StoppedAt, 
            True AS _from0
        FROM IPSModelStoreContainer.Stages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_DepartmentUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView234()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_DepartmentUsers
        [IPSModel.Link_DepartmentUsers](T3.[Link_DepartmentUsers.Department], T3.[Link_DepartmentUsers.User])
    FROM (
        SELECT -- Constructing Department
            CreateRef(IPSData.Departments, row(T2.[Link_DepartmentUsers.Department.Id]), [IPSModel.Department]) AS [Link_DepartmentUsers.Department], 
            T2.[Link_DepartmentUsers.User]
        FROM (
            SELECT -- Constructing User
                T1.[Link_DepartmentUsers.Department.Id], 
                CreateRef(IPSData.Users, row(T1.[Link_DepartmentUsers.User.Id]), [IPSModel.User]) AS [Link_DepartmentUsers.User]
            FROM (
                SELECT 
                    T.DepartmentId AS [Link_DepartmentUsers.Department.Id], 
                    T.UserId AS [Link_DepartmentUsers.User.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_DepartmentUsers AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_UsersJobPositions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView235()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_UsersJobPositions
        [IPSModel.Link_UsersJobPositions](T3.[Link_UsersJobPositions.JobPosition], T3.[Link_UsersJobPositions.User])
    FROM (
        SELECT -- Constructing JobPosition
            CreateRef(IPSData.JobPositions, row(T2.[Link_UsersJobPositions.JobPosition.Id]), [IPSModel.JobPosition]) AS [Link_UsersJobPositions.JobPosition], 
            T2.[Link_UsersJobPositions.User]
        FROM (
            SELECT -- Constructing User
                T1.[Link_UsersJobPositions.JobPosition.Id], 
                CreateRef(IPSData.Users, row(T1.[Link_UsersJobPositions.User.Id]), [IPSModel.User]) AS [Link_UsersJobPositions.User]
            FROM (
                SELECT 
                    T.JobPositionId AS [Link_UsersJobPositions.JobPosition.Id], 
                    T.UserId AS [Link_UsersJobPositions.User.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_UsersJobPositions AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_IndustrySkills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView236()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_IndustrySkills
        [IPSModel.Link_IndustrySkills](T3.[Link_IndustrySkills.Industry], T3.[Link_IndustrySkills.Skill])
    FROM (
        SELECT -- Constructing Industry
            CreateRef(IPSData.Industries, row(T2.[Link_IndustrySkills.Industry.Id]), [IPSModel.Industry]) AS [Link_IndustrySkills.Industry], 
            T2.[Link_IndustrySkills.Skill]
        FROM (
            SELECT -- Constructing Skill
                T1.[Link_IndustrySkills.Industry.Id], 
                CreateRef(IPSData.Skills, row(T1.[Link_IndustrySkills.Skill.Id]), [IPSModel.Skill]) AS [Link_IndustrySkills.Skill]
            FROM (
                SELECT 
                    T.IndustryId AS [Link_IndustrySkills.Industry.Id], 
                    T.SkillId AS [Link_IndustrySkills.Skill.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_IndustrySkills AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_SkillTargetAudience.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView237()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SkillTargetAudience
        [IPSModel.Link_SkillTargetAudience](T3.[Link_SkillTargetAudience.JobPosition], T3.[Link_SkillTargetAudience.Skill])
    FROM (
        SELECT -- Constructing JobPosition
            CreateRef(IPSData.JobPositions, row(T2.[Link_SkillTargetAudience.JobPosition.Id]), [IPSModel.JobPosition]) AS [Link_SkillTargetAudience.JobPosition], 
            T2.[Link_SkillTargetAudience.Skill]
        FROM (
            SELECT -- Constructing Skill
                T1.[Link_SkillTargetAudience.JobPosition.Id], 
                CreateRef(IPSData.Skills, row(T1.[Link_SkillTargetAudience.Skill.Id]), [IPSModel.Skill]) AS [Link_SkillTargetAudience.Skill]
            FROM (
                SELECT 
                    T.JobPositionID AS [Link_SkillTargetAudience.JobPosition.Id], 
                    T.SkillId AS [Link_SkillTargetAudience.Skill.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_SkillTargetAudience AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_SkillQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView238()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SkillQuestions
        [IPSModel.Link_SkillQuestions](T3.[Link_SkillQuestions.Question], T3.[Link_SkillQuestions.Skill])
    FROM (
        SELECT -- Constructing Question
            CreateRef(IPSData.Questions, row(T2.[Link_SkillQuestions.Question.Id]), [IPSModel.Question]) AS [Link_SkillQuestions.Question], 
            T2.[Link_SkillQuestions.Skill]
        FROM (
            SELECT -- Constructing Skill
                T1.[Link_SkillQuestions.Question.Id], 
                CreateRef(IPSData.Skills, row(T1.[Link_SkillQuestions.Skill.Id]), [IPSModel.Skill]) AS [Link_SkillQuestions.Skill]
            FROM (
                SELECT 
                    T.QuestionId AS [Link_SkillQuestions.Question.Id], 
                    T.SkillId AS [Link_SkillQuestions.Skill.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_SkillQuestions AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_PerformanceGroupGoals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView239()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupGoals
        [IPSModel.Link_PerformanceGroupGoals](T3.[Link_PerformanceGroupGoals.PerformanceGroup], T3.[Link_PerformanceGroupGoals.ScorecardGoal])
    FROM (
        SELECT -- Constructing PerformanceGroup
            CreateRef(IPSData.PerformanceGroups, row(T2.[Link_PerformanceGroupGoals.PerformanceGroup.Id]), [IPSModel.PerformanceGroup]) AS [Link_PerformanceGroupGoals.PerformanceGroup], 
            T2.[Link_PerformanceGroupGoals.ScorecardGoal]
        FROM (
            SELECT -- Constructing ScorecardGoal
                T1.[Link_PerformanceGroupGoals.PerformanceGroup.Id], 
                CreateRef(IPSData.ScorecardGoals, row(T1.[Link_PerformanceGroupGoals.ScorecardGoal.Id]), [IPSModel.ScorecardGoal]) AS [Link_PerformanceGroupGoals.ScorecardGoal]
            FROM (
                SELECT 
                    T.PerformanceGroupId AS [Link_PerformanceGroupGoals.PerformanceGroup.Id], 
                    T.GoalId AS [Link_PerformanceGroupGoals.ScorecardGoal.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_PerformanceGroupGoals AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_PerformanceGroupProfileTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView240()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupProfileTypes
        [IPSModel.Link_PerformanceGroupProfileTypes](T3.[Link_PerformanceGroupProfileTypes.PerformanceGroup], T3.[Link_PerformanceGroupProfileTypes.ProfileType])
    FROM (
        SELECT -- Constructing PerformanceGroup
            CreateRef(IPSData.PerformanceGroups, row(T2.[Link_PerformanceGroupProfileTypes.PerformanceGroup.Id]), [IPSModel.PerformanceGroup]) AS [Link_PerformanceGroupProfileTypes.PerformanceGroup], 
            T2.[Link_PerformanceGroupProfileTypes.ProfileType]
        FROM (
            SELECT -- Constructing ProfileType
                T1.[Link_PerformanceGroupProfileTypes.PerformanceGroup.Id], 
                CreateRef(IPSData.ProfileTypes, row(T1.[Link_PerformanceGroupProfileTypes.ProfileType.Id]), [IPSModel.ProfileType]) AS [Link_PerformanceGroupProfileTypes.ProfileType]
            FROM (
                SELECT 
                    T.PerformanceGroupId AS [Link_PerformanceGroupProfileTypes.PerformanceGroup.Id], 
                    T.ProfileTypeID AS [Link_PerformanceGroupProfileTypes.ProfileType.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_PerformanceGroupProfileTypes AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_PerformanceGroupTargetAudience.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView241()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupTargetAudience
        [IPSModel.Link_PerformanceGroupTargetAudience](T3.[Link_PerformanceGroupTargetAudience.JobPosition], T3.[Link_PerformanceGroupTargetAudience.PerformanceGroup])
    FROM (
        SELECT -- Constructing JobPosition
            CreateRef(IPSData.JobPositions, row(T2.[Link_PerformanceGroupTargetAudience.JobPosition.Id]), [IPSModel.JobPosition]) AS [Link_PerformanceGroupTargetAudience.JobPosition], 
            T2.[Link_PerformanceGroupTargetAudience.PerformanceGroup]
        FROM (
            SELECT -- Constructing PerformanceGroup
                T1.[Link_PerformanceGroupTargetAudience.JobPosition.Id], 
                CreateRef(IPSData.PerformanceGroups, row(T1.[Link_PerformanceGroupTargetAudience.PerformanceGroup.Id]), [IPSModel.PerformanceGroup]) AS [Link_PerformanceGroupTargetAudience.PerformanceGroup]
            FROM (
                SELECT 
                    T.JobPositionID AS [Link_PerformanceGroupTargetAudience.JobPosition.Id], 
                    T.PerformanceGroupId AS [Link_PerformanceGroupTargetAudience.PerformanceGroup.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_PerformanceGroupTargetAudience AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_ProfileTargetAudience.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView242()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProfileTargetAudience
        [IPSModel.Link_ProfileTargetAudience](T3.[Link_ProfileTargetAudience.JobPosition], T3.[Link_ProfileTargetAudience.Profile])
    FROM (
        SELECT -- Constructing JobPosition
            CreateRef(IPSData.JobPositions, row(T2.[Link_ProfileTargetAudience.JobPosition.Id]), [IPSModel.JobPosition]) AS [Link_ProfileTargetAudience.JobPosition], 
            T2.[Link_ProfileTargetAudience.Profile]
        FROM (
            SELECT -- Constructing Profile
                T1.[Link_ProfileTargetAudience.JobPosition.Id], 
                CreateRef(IPSData.Profiles, row(T1.[Link_ProfileTargetAudience.Profile.Id]), [IPSModel.Profile]) AS [Link_ProfileTargetAudience.Profile]
            FROM (
                SELECT 
                    T.JobPositionID AS [Link_ProfileTargetAudience.JobPosition.Id], 
                    T.ProfileId AS [Link_ProfileTargetAudience.Profile.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_ProfileTargetAudience AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_OrganizationPartners.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView243()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_OrganizationPartners
        [IPSModel.Link_OrganizationPartners](T3.[Link_OrganizationPartners.Organization], T3.[Link_OrganizationPartners.Organization1])
    FROM (
        SELECT -- Constructing Organization
            CreateRef(IPSData.Organizations, row(T2.[Link_OrganizationPartners.Organization.Id]), [IPSModel.Organization]) AS [Link_OrganizationPartners.Organization], 
            T2.[Link_OrganizationPartners.Organization1]
        FROM (
            SELECT -- Constructing Organization1
                T1.[Link_OrganizationPartners.Organization.Id], 
                CreateRef(IPSData.Organizations, row(T1.[Link_OrganizationPartners.Organization1.Id]), [IPSModel.Organization]) AS [Link_OrganizationPartners.Organization1]
            FROM (
                SELECT 
                    T.PartnerOrganizationId AS [Link_OrganizationPartners.Organization.Id], 
                    T.OrganizationId AS [Link_OrganizationPartners.Organization1.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_OrganizationPartners AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_SkillTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView244()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SkillTrainings
        [IPSModel.Link_SkillTrainings](T3.[Link_SkillTrainings.Skill], T3.[Link_SkillTrainings.Training])
    FROM (
        SELECT -- Constructing Skill
            CreateRef(IPSData.Skills, row(T2.[Link_SkillTrainings.Skill.Id]), [IPSModel.Skill]) AS [Link_SkillTrainings.Skill], 
            T2.[Link_SkillTrainings.Training]
        FROM (
            SELECT -- Constructing Training
                T1.[Link_SkillTrainings.Skill.Id], 
                CreateRef(IPSData.Trainings, row(T1.[Link_SkillTrainings.Training.Id]), [IPSModel.Training]) AS [Link_SkillTrainings.Training]
            FROM (
                SELECT 
                    T.SkillId AS [Link_SkillTrainings.Skill.Id], 
                    T.TrainingId AS [Link_SkillTrainings.Training.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_SkillTrainings AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_PerformanceGroupQuestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView245()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformanceGroupQuestions
        [IPSModel.Link_PerformanceGroupQuestions](T3.[Link_PerformanceGroupQuestions.Link_PerformanceGroupSkills], T3.[Link_PerformanceGroupQuestions.Question])
    FROM (
        SELECT -- Constructing Link_PerformanceGroupSkills
            CreateRef(IPSData.Link_PerformanceGroupSkills, row(T2.[Link_PerformanceGroupQuestions.Link_PerformanceGroupSkills.Id]), [IPSModel.Link_PerformanceGroupSkills]) AS [Link_PerformanceGroupQuestions.Link_PerformanceGroupSkills], 
            T2.[Link_PerformanceGroupQuestions.Question]
        FROM (
            SELECT -- Constructing Question
                T1.[Link_PerformanceGroupQuestions.Link_PerformanceGroupSkills.Id], 
                CreateRef(IPSData.Questions, row(T1.[Link_PerformanceGroupQuestions.Question.Id]), [IPSModel.Question]) AS [Link_PerformanceGroupQuestions.Question]
            FROM (
                SELECT 
                    T.PerformanceGroupSkillId AS [Link_PerformanceGroupQuestions.Link_PerformanceGroupSkills.Id], 
                    T.QuestionId AS [Link_PerformanceGroupQuestions.Question.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_PerformanceGroupQuestions AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_PerformancGroupTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView246()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_PerformancGroupTrainings
        [IPSModel.Link_PerformancGroupTrainings](T3.[Link_PerformancGroupTrainings.Link_PerformanceGroupSkills], T3.[Link_PerformancGroupTrainings.Training])
    FROM (
        SELECT -- Constructing Link_PerformanceGroupSkills
            CreateRef(IPSData.Link_PerformanceGroupSkills, row(T2.[Link_PerformancGroupTrainings.Link_PerformanceGroupSkills.Id]), [IPSModel.Link_PerformanceGroupSkills]) AS [Link_PerformancGroupTrainings.Link_PerformanceGroupSkills], 
            T2.[Link_PerformancGroupTrainings.Training]
        FROM (
            SELECT -- Constructing Training
                T1.[Link_PerformancGroupTrainings.Link_PerformanceGroupSkills.Id], 
                CreateRef(IPSData.Trainings, row(T1.[Link_PerformancGroupTrainings.Training.Id]), [IPSModel.Training]) AS [Link_PerformancGroupTrainings.Training]
            FROM (
                SELECT 
                    T.PerformanceGroupSkillId AS [Link_PerformancGroupTrainings.Link_PerformanceGroupSkills.Id], 
                    T.TrainingId AS [Link_PerformancGroupTrainings.Training.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_PerformancGroupTrainings AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_EvaluationAgreementTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView247()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_EvaluationAgreementTrainings
        [IPSModel.Link_EvaluationAgreementTrainings](T3.[Link_EvaluationAgreementTrainings.EvaluationAgreement], T3.[Link_EvaluationAgreementTrainings.Training])
    FROM (
        SELECT -- Constructing EvaluationAgreement
            CreateRef(IPSData.EvaluationAgreements, row(T2.[Link_EvaluationAgreementTrainings.EvaluationAgreement.Id]), [IPSModel.EvaluationAgreement]) AS [Link_EvaluationAgreementTrainings.EvaluationAgreement], 
            T2.[Link_EvaluationAgreementTrainings.Training]
        FROM (
            SELECT -- Constructing Training
                T1.[Link_EvaluationAgreementTrainings.EvaluationAgreement.Id], 
                CreateRef(IPSData.Trainings, row(T1.[Link_EvaluationAgreementTrainings.Training.Id]), [IPSModel.Training]) AS [Link_EvaluationAgreementTrainings.Training]
            FROM (
                SELECT 
                    T.EvaluationAgreementId AS [Link_EvaluationAgreementTrainings.EvaluationAgreement.Id], 
                    T.TrainingId AS [Link_EvaluationAgreementTrainings.Training.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_EvaluationAgreementTrainings AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_SurveyAnswersTrainings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView248()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_SurveyAnswersTrainings
        [IPSModel.Link_SurveyAnswersTrainings](T3.[Link_SurveyAnswersTrainings.SurveyAnswer], T3.[Link_SurveyAnswersTrainings.Training])
    FROM (
        SELECT -- Constructing SurveyAnswer
            CreateRef(IPSData.SurveyAnswers, row(T2.[Link_SurveyAnswersTrainings.SurveyAnswer.Id]), [IPSModel.SurveyAnswer]) AS [Link_SurveyAnswersTrainings.SurveyAnswer], 
            T2.[Link_SurveyAnswersTrainings.Training]
        FROM (
            SELECT -- Constructing Training
                T1.[Link_SurveyAnswersTrainings.SurveyAnswer.Id], 
                CreateRef(IPSData.Trainings, row(T1.[Link_SurveyAnswersTrainings.Training.Id]), [IPSModel.Training]) AS [Link_SurveyAnswersTrainings.Training]
            FROM (
                SELECT 
                    T.SurveyAnswerId AS [Link_SurveyAnswersTrainings.SurveyAnswer.Id], 
                    T.TrainingId AS [Link_SurveyAnswersTrainings.Training.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_SurveyAnswersTrainings AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSData.Link_ProfileStageGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView249()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Link_ProfileStageGroups
        [IPSModel.Link_ProfileStageGroups](T3.[Link_ProfileStageGroups.Profile], T3.[Link_ProfileStageGroups.StageGroup])
    FROM (
        SELECT -- Constructing Profile
            CreateRef(IPSData.Profiles, row(T2.[Link_ProfileStageGroups.Profile.Id]), [IPSModel.Profile]) AS [Link_ProfileStageGroups.Profile], 
            T2.[Link_ProfileStageGroups.StageGroup]
        FROM (
            SELECT -- Constructing StageGroup
                T1.[Link_ProfileStageGroups.Profile.Id], 
                CreateRef(IPSData.StageGroups, row(T1.[Link_ProfileStageGroups.StageGroup.Id]), [IPSModel.StageGroup]) AS [Link_ProfileStageGroups.StageGroup]
            FROM (
                SELECT 
                    T.ProfileId AS [Link_ProfileStageGroups.Profile.Id], 
                    T.StageGroupId AS [Link_ProfileStageGroups.StageGroup.Id], 
                    True AS _from0
                FROM IPSModelStoreContainer.Link_ProfileStageGroups AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Reminders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView250()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Reminders
        [IPSModel.Store.Reminders](T1.Reminders_Id, T1.Reminders_ReminderText, T1.Reminders_DueDate, T1.Reminders_UserId, T1.Reminders_TrainingId, T1.Reminders_ProfileId, T1.Reminders_IsReviewed, T1.Reminders_ReminderType)
    FROM (
        SELECT 
            T.Id AS Reminders_Id, 
            T.ReminderText AS Reminders_ReminderText, 
            T.DueDate AS Reminders_DueDate, 
            T.UserId AS Reminders_UserId, 
            T.TrainingId AS Reminders_TrainingId, 
            T.ProfileId AS Reminders_ProfileId, 
            T.IsReviewed AS Reminders_IsReviewed, 
            T.ReminderType AS Reminders_ReminderType, 
            True AS _from0
        FROM IPSData.Reminders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ReminderTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView251()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ReminderTypes
        [IPSModel.Store.ReminderTypes](T1.ReminderTypes_Id, T1.ReminderTypes_Name)
    FROM (
        SELECT 
            T.Id AS ReminderTypes_Id, 
            T.Name AS ReminderTypes_Name, 
            True AS _from0
        FROM IPSData.ReminderTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Reminders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView252()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Reminders
        [IPSModel.Reminder](T1.Reminder_Id, T1.Reminder_ReminderText, T1.Reminder_DueDate, T1.Reminder_UserId, T1.Reminder_TrainingId, T1.Reminder_ProfileId, T1.Reminder_IsReviewed, T1.Reminder_ReminderType)
    FROM (
        SELECT 
            T.Id AS Reminder_Id, 
            T.ReminderText AS Reminder_ReminderText, 
            T.DueDate AS Reminder_DueDate, 
            T.UserId AS Reminder_UserId, 
            T.TrainingId AS Reminder_TrainingId, 
            T.ProfileId AS Reminder_ProfileId, 
            T.IsReviewed AS Reminder_IsReviewed, 
            T.ReminderType AS Reminder_ReminderType, 
            True AS _from0
        FROM IPSModelStoreContainer.Reminders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ReminderTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView253()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ReminderTypes
        [IPSModel.ReminderType](T1.ReminderType_Id, T1.ReminderType_Name)
    FROM (
        SELECT 
            T.Id AS ReminderType_Id, 
            T.Name AS ReminderType_Name, 
            True AS _from0
        FROM IPSModelStoreContainer.ReminderTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Trends.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView254()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Trends
        [IPSModel.Store.Trends](T1.Trends_Id, T1.Trends_Direction)
    FROM (
        SELECT 
            T.Id AS Trends_Id, 
            T.Direction AS Trends_Direction, 
            True AS _from0
        FROM IPSData.Trends AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Trends.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView255()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Trends
        [IPSModel.Trend](T1.Trend_Id, T1.Trend_Direction)
    FROM (
        SELECT 
            T.Id AS Trend_Id, 
            T.Direction AS Trend_Direction, 
            True AS _from0
        FROM IPSModelStoreContainer.Trends AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.HelpCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView256()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HelpCategory
        [IPSModel.Store.HelpCategory](T1.HelpCategory_HelpCategoryID, T1.HelpCategory_Title, T1.HelpCategory_Meta, T1.HelpCategory_KeyWord, T1.HelpCategory_Description, T1.HelpCategory_LanguageID, T1.HelpCategory_IsParentCategory, T1.HelpCategory_ParentCategoryID, T1.HelpCategory_IsDeleted)
    FROM (
        SELECT 
            T.HelpCategoryID AS HelpCategory_HelpCategoryID, 
            T.Title AS HelpCategory_Title, 
            T.Meta AS HelpCategory_Meta, 
            T.KeyWord AS HelpCategory_KeyWord, 
            T.Description AS HelpCategory_Description, 
            T.LanguageID AS HelpCategory_LanguageID, 
            T.IsParentCategory AS HelpCategory_IsParentCategory, 
            T.ParentCategoryID AS HelpCategory_ParentCategoryID, 
            T.IsDeleted AS HelpCategory_IsDeleted, 
            True AS _from0
        FROM IPSData.HelpCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.HelpContent.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView257()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HelpContent
        [IPSModel.Store.HelpContent](T1.HelpContent_HelpContentID, T1.HelpContent_Title, T1.HelpContent_HelpCategoryID, T1.HelpContent_Description, T1.HelpContent_LanguageID, T1.HelpContent_IsDeleted)
    FROM (
        SELECT 
            T.HelpContentID AS HelpContent_HelpContentID, 
            T.Title AS HelpContent_Title, 
            T.HelpCategoryID AS HelpContent_HelpCategoryID, 
            T.Description AS HelpContent_Description, 
            T.LanguageID AS HelpContent_LanguageID, 
            T.IsDeleted AS HelpContent_IsDeleted, 
            True AS _from0
        FROM IPSData.HelpContents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.HelpCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView258()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HelpCategories
        [IPSModel.HelpCategory](T1.HelpCategory_HelpCategoryID, T1.HelpCategory_Title, T1.HelpCategory_Meta, T1.HelpCategory_KeyWord, T1.HelpCategory_Description, T1.HelpCategory_LanguageID, T1.HelpCategory_IsParentCategory, T1.HelpCategory_ParentCategoryID, T1.HelpCategory_IsDeleted)
    FROM (
        SELECT 
            T.HelpCategoryID AS HelpCategory_HelpCategoryID, 
            T.Title AS HelpCategory_Title, 
            T.Meta AS HelpCategory_Meta, 
            T.KeyWord AS HelpCategory_KeyWord, 
            T.Description AS HelpCategory_Description, 
            T.LanguageID AS HelpCategory_LanguageID, 
            T.IsParentCategory AS HelpCategory_IsParentCategory, 
            T.ParentCategoryID AS HelpCategory_ParentCategoryID, 
            T.IsDeleted AS HelpCategory_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.HelpCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.HelpContents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView259()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HelpContents
        [IPSModel.HelpContent](T1.HelpContent_HelpContentID, T1.HelpContent_Title, T1.HelpContent_HelpCategoryID, T1.HelpContent_Description, T1.HelpContent_LanguageID, T1.HelpContent_IsDeleted)
    FROM (
        SELECT 
            T.HelpContentID AS HelpContent_HelpContentID, 
            T.Title AS HelpContent_Title, 
            T.HelpCategoryID AS HelpContent_HelpCategoryID, 
            T.Description AS HelpContent_Description, 
            T.LanguageID AS HelpContent_LanguageID, 
            T.IsDeleted AS HelpContent_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.HelpContent AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.ContactUs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView260()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ContactUs
        [IPSModel.Store.ContactUs](T1.ContactUs_ContactID, T1.ContactUs_Question, T1.ContactUs_Name, T1.ContactUs_Email, T1.ContactUs_Phone, T1.ContactUs_Comment)
    FROM (
        SELECT 
            T.ContactID AS ContactUs_ContactID, 
            T.Question AS ContactUs_Question, 
            T.Name AS ContactUs_Name, 
            T.Email AS ContactUs_Email, 
            T.Phone AS ContactUs_Phone, 
            T.Comment AS ContactUs_Comment, 
            True AS _from0
        FROM IPSData.ContactUs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.ContactUs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView261()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ContactUs
        [IPSModel.ContactU](T1.ContactU_ContactID, T1.ContactU_Question, T1.ContactU_Name, T1.ContactU_Email, T1.ContactU_Phone, T1.ContactU_Comment)
    FROM (
        SELECT 
            T.ContactID AS ContactU_ContactID, 
            T.Question AS ContactU_Question, 
            T.Name AS ContactU_Name, 
            T.Email AS ContactU_Email, 
            T.Phone AS ContactU_Phone, 
            T.Comment AS ContactU_Comment, 
            True AS _from0
        FROM IPSModelStoreContainer.ContactUs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.Testimonials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView262()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Testimonials
        [IPSModel.Store.Testimonials](T1.Testimonials_TestimonialID, T1.Testimonials_ClientName, T1.Testimonials_Comment, T1.Testimonials_Logo, T1.Testimonials_LanguageID)
    FROM (
        SELECT 
            T.TestimonialID AS Testimonials_TestimonialID, 
            T.ClientName AS Testimonials_ClientName, 
            T.Comment AS Testimonials_Comment, 
            T.Logo AS Testimonials_Logo, 
            T.LanguageID AS Testimonials_LanguageID, 
            True AS _from0
        FROM IPSData.Testimonials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.Testimonials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView263()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Testimonials
        [IPSModel.Testimonial](T1.Testimonial_TestimonialID, T1.Testimonial_ClientName, T1.Testimonial_Comment, T1.Testimonial_LanguageID, T1.Testimonial_Logo)
    FROM (
        SELECT 
            T.TestimonialID AS Testimonial_TestimonialID, 
            T.ClientName AS Testimonial_ClientName, 
            T.Comment AS Testimonial_Comment, 
            T.LanguageID AS Testimonial_LanguageID, 
            T.Logo AS Testimonial_Logo, 
            True AS _from0
        FROM IPSModelStoreContainer.Testimonials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.PortfolioCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView264()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PortfolioCategory
        [IPSModel.Store.PortfolioCategory](T1.PortfolioCategory_PortfolioCategoryID, T1.PortfolioCategory_Title, T1.PortfolioCategory_Description, T1.PortfolioCategory_LanguageID, T1.PortfolioCategory_IsDeleted, T1.PortfolioCategory_Image)
    FROM (
        SELECT 
            T.PortfolioCategoryID AS PortfolioCategory_PortfolioCategoryID, 
            T.Title AS PortfolioCategory_Title, 
            T.Description AS PortfolioCategory_Description, 
            T.LanguageID AS PortfolioCategory_LanguageID, 
            T.IsDeleted AS PortfolioCategory_IsDeleted, 
            T.Image AS PortfolioCategory_Image, 
            True AS _from0
        FROM IPSData.PortfolioCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.PortfolioImages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView265()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PortfolioImages
        [IPSModel.Store.PortfolioImages](T1.PortfolioImages_ProtfolioProjectImageID, T1.PortfolioImages_ImagePath, T1.PortfolioImages_DisplayOnTop, T1.PortfolioImages_PortfolioProjectID, T1.PortfolioImages_IsDeleted)
    FROM (
        SELECT 
            T.ProtfolioProjectImageID AS PortfolioImages_ProtfolioProjectImageID, 
            T.ImagePath AS PortfolioImages_ImagePath, 
            T.DisplayOnTop AS PortfolioImages_DisplayOnTop, 
            T.PortfolioProjectID AS PortfolioImages_PortfolioProjectID, 
            T.IsDeleted AS PortfolioImages_IsDeleted, 
            True AS _from0
        FROM IPSData.PortfolioImages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.PortfolioProjects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView266()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PortfolioProjects
        [IPSModel.Store.PortfolioProjects](T1.PortfolioProjects_PortfolioProjectID, T1.PortfolioProjects_PortfolioCategoryID, T1.PortfolioProjects_ProjectName, T1.PortfolioProjects_ProjectTitle, T1.PortfolioProjects_ProjectDate, T1.PortfolioProjects_AboutCompany, T1.PortfolioProjects_ProjectResult, T1.PortfolioProjects_ProjectUrl, T1.PortfolioProjects_isDeleted)
    FROM (
        SELECT 
            T.PortfolioProjectID AS PortfolioProjects_PortfolioProjectID, 
            T.PortfolioCategoryID AS PortfolioProjects_PortfolioCategoryID, 
            T.ProjectName AS PortfolioProjects_ProjectName, 
            T.ProjectTitle AS PortfolioProjects_ProjectTitle, 
            T.ProjectDate AS PortfolioProjects_ProjectDate, 
            T.AboutCompany AS PortfolioProjects_AboutCompany, 
            T.ProjectResult AS PortfolioProjects_ProjectResult, 
            T.ProjectUrl AS PortfolioProjects_ProjectUrl, 
            T.isDeleted AS PortfolioProjects_isDeleted, 
            True AS _from0
        FROM IPSData.PortfolioProjects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.PortfolioCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView267()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PortfolioCategories
        [IPSModel.PortfolioCategory](T1.PortfolioCategory_PortfolioCategoryID, T1.PortfolioCategory_Title, T1.PortfolioCategory_Description, T1.PortfolioCategory_LanguageID, T1.PortfolioCategory_IsDeleted, T1.PortfolioCategory_Image)
    FROM (
        SELECT 
            T.PortfolioCategoryID AS PortfolioCategory_PortfolioCategoryID, 
            T.Title AS PortfolioCategory_Title, 
            T.Description AS PortfolioCategory_Description, 
            T.LanguageID AS PortfolioCategory_LanguageID, 
            T.IsDeleted AS PortfolioCategory_IsDeleted, 
            T.Image AS PortfolioCategory_Image, 
            True AS _from0
        FROM IPSModelStoreContainer.PortfolioCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.PortfolioImages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView268()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PortfolioImages
        [IPSModel.PortfolioImage](T1.PortfolioImage_ProtfolioProjectImageID, T1.PortfolioImage_ImagePath, T1.PortfolioImage_DisplayOnTop, T1.PortfolioImage_PortfolioProjectID, T1.PortfolioImage_IsDeleted)
    FROM (
        SELECT 
            T.ProtfolioProjectImageID AS PortfolioImage_ProtfolioProjectImageID, 
            T.ImagePath AS PortfolioImage_ImagePath, 
            T.DisplayOnTop AS PortfolioImage_DisplayOnTop, 
            T.PortfolioProjectID AS PortfolioImage_PortfolioProjectID, 
            T.IsDeleted AS PortfolioImage_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.PortfolioImages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.PortfolioProjects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView269()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PortfolioProjects
        [IPSModel.PortfolioProject](T1.PortfolioProject_PortfolioProjectID, T1.PortfolioProject_PortfolioCategoryID, T1.PortfolioProject_ProjectName, T1.PortfolioProject_ProjectTitle, T1.PortfolioProject_ProjectDate, T1.PortfolioProject_AboutCompany, T1.PortfolioProject_ProjectResult, T1.PortfolioProject_ProjectUrl, T1.PortfolioProject_isDeleted)
    FROM (
        SELECT 
            T.PortfolioProjectID AS PortfolioProject_PortfolioProjectID, 
            T.PortfolioCategoryID AS PortfolioProject_PortfolioCategoryID, 
            T.ProjectName AS PortfolioProject_ProjectName, 
            T.ProjectTitle AS PortfolioProject_ProjectTitle, 
            T.ProjectDate AS PortfolioProject_ProjectDate, 
            T.AboutCompany AS PortfolioProject_AboutCompany, 
            T.ProjectResult AS PortfolioProject_ProjectResult, 
            T.ProjectUrl AS PortfolioProject_ProjectUrl, 
            T.isDeleted AS PortfolioProject_isDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.PortfolioProjects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TemplateCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView270()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateCategory
        [IPSModel.Store.TemplateCategory](T1.TemplateCategory_TemplateCategoryID, T1.TemplateCategory_TemplateTypeID, T1.TemplateCategory_Title, T1.TemplateCategory_Meta, T1.TemplateCategory_Icon, T1.TemplateCategory_KeyWord, T1.TemplateCategory_Description, T1.TemplateCategory_LanguageID, T1.TemplateCategory_IsParentCategory, T1.TemplateCategory_ParentCategoryID, T1.TemplateCategory_IsDeleted)
    FROM (
        SELECT 
            T.TemplateCategoryID AS TemplateCategory_TemplateCategoryID, 
            T.TemplateTypeID AS TemplateCategory_TemplateTypeID, 
            T.Title AS TemplateCategory_Title, 
            T.Meta AS TemplateCategory_Meta, 
            T.Icon AS TemplateCategory_Icon, 
            T.KeyWord AS TemplateCategory_KeyWord, 
            T.Description AS TemplateCategory_Description, 
            T.LanguageID AS TemplateCategory_LanguageID, 
            T.IsParentCategory AS TemplateCategory_IsParentCategory, 
            T.ParentCategoryID AS TemplateCategory_ParentCategoryID, 
            T.IsDeleted AS TemplateCategory_IsDeleted, 
            True AS _from0
        FROM IPSData.TemplateCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TemplateContent.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView271()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateContent
        [IPSModel.Store.TemplateContent](T1.TemplateContent_TemplateContentID, T1.TemplateContent_Title, T1.TemplateContent_TemplateCategoryID, T1.TemplateContent_Description, T1.TemplateContent_LanguageID, T1.TemplateContent_IsDeleted)
    FROM (
        SELECT 
            T.TemplateContentID AS TemplateContent_TemplateContentID, 
            T.Title AS TemplateContent_Title, 
            T.TemplateCategoryID AS TemplateContent_TemplateCategoryID, 
            T.Description AS TemplateContent_Description, 
            T.LanguageID AS TemplateContent_LanguageID, 
            T.IsDeleted AS TemplateContent_IsDeleted, 
            True AS _from0
        FROM IPSData.TemplateContents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.TemplateContentImage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView272()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateContentImage
        [IPSModel.Store.TemplateContentImage](T1.TemplateContentImage_TemplateImageID, T1.TemplateContentImage_TemplateContentID, T1.TemplateContentImage_ImagePath, T1.TemplateContentImage_IsPrimaryImage)
    FROM (
        SELECT 
            T.TemplateImageID AS TemplateContentImage_TemplateImageID, 
            T.TemplateContentID AS TemplateContentImage_TemplateContentID, 
            T.ImagePath AS TemplateContentImage_ImagePath, 
            T.IsPrimaryImage AS TemplateContentImage_IsPrimaryImage, 
            True AS _from0
        FROM IPSData.TemplateContentImages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TemplateCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView273()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateCategories
        [IPSModel.TemplateCategory](T1.TemplateCategory_TemplateCategoryID, T1.TemplateCategory_TemplateTypeID, T1.TemplateCategory_Title, T1.TemplateCategory_Meta, T1.TemplateCategory_Icon, T1.TemplateCategory_KeyWord, T1.TemplateCategory_Description, T1.TemplateCategory_LanguageID, T1.TemplateCategory_IsParentCategory, T1.TemplateCategory_ParentCategoryID, T1.TemplateCategory_IsDeleted)
    FROM (
        SELECT 
            T.TemplateCategoryID AS TemplateCategory_TemplateCategoryID, 
            T.TemplateTypeID AS TemplateCategory_TemplateTypeID, 
            T.Title AS TemplateCategory_Title, 
            T.Meta AS TemplateCategory_Meta, 
            T.Icon AS TemplateCategory_Icon, 
            T.KeyWord AS TemplateCategory_KeyWord, 
            T.Description AS TemplateCategory_Description, 
            T.LanguageID AS TemplateCategory_LanguageID, 
            T.IsParentCategory AS TemplateCategory_IsParentCategory, 
            T.ParentCategoryID AS TemplateCategory_ParentCategoryID, 
            T.IsDeleted AS TemplateCategory_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.TemplateCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TemplateContents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView274()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateContents
        [IPSModel.TemplateContent](T1.TemplateContent_TemplateContentID, T1.TemplateContent_Title, T1.TemplateContent_TemplateCategoryID, T1.TemplateContent_Description, T1.TemplateContent_LanguageID, T1.TemplateContent_IsDeleted)
    FROM (
        SELECT 
            T.TemplateContentID AS TemplateContent_TemplateContentID, 
            T.Title AS TemplateContent_Title, 
            T.TemplateCategoryID AS TemplateContent_TemplateCategoryID, 
            T.Description AS TemplateContent_Description, 
            T.LanguageID AS TemplateContent_LanguageID, 
            T.IsDeleted AS TemplateContent_IsDeleted, 
            True AS _from0
        FROM IPSModelStoreContainer.TemplateContent AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.TemplateContentImages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView275()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TemplateContentImages
        [IPSModel.TemplateContentImage](T1.TemplateContentImage_TemplateImageID, T1.TemplateContentImage_TemplateContentID, T1.TemplateContentImage_ImagePath, T1.TemplateContentImage_IsPrimaryImage)
    FROM (
        SELECT 
            T.TemplateImageID AS TemplateContentImage_TemplateImageID, 
            T.TemplateContentID AS TemplateContentImage_TemplateContentID, 
            T.ImagePath AS TemplateContentImage_ImagePath, 
            T.IsPrimaryImage AS TemplateContentImage_IsPrimaryImage, 
            True AS _from0
        FROM IPSModelStoreContainer.TemplateContentImage AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IpsEmails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView276()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsEmails
        [IPSModel.Store.IpsEmails](T1.IpsEmails_Id, T1.IpsEmails_Subject, T1.IpsEmails_Message, T1.IpsEmails_ToAddress, T1.IpsEmails_CCAddress, T1.IpsEmails_SentTime, T1.IpsEmails_FromAddress, T1.IpsEmails_FromUserId, T1.IpsEmails_ToUserId, T1.IpsEmails_BCCAddress, T1.IpsEmails_IsRead, T1.IpsEmails_ReadAt)
    FROM (
        SELECT 
            T.Id AS IpsEmails_Id, 
            T.Subject AS IpsEmails_Subject, 
            T.Message AS IpsEmails_Message, 
            T.ToAddress AS IpsEmails_ToAddress, 
            T.CCAddress AS IpsEmails_CCAddress, 
            T.SentTime AS IpsEmails_SentTime, 
            T.FromAddress AS IpsEmails_FromAddress, 
            T.FromUserId AS IpsEmails_FromUserId, 
            T.ToUserId AS IpsEmails_ToUserId, 
            T.BCCAddress AS IpsEmails_BCCAddress, 
            T.IsRead AS IpsEmails_IsRead, 
            T.ReadAt AS IpsEmails_ReadAt, 
            True AS _from0
        FROM IPSData.IpsEmails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.IPSEMailAttachments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView277()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSEMailAttachments
        [IPSModel.Store.IPSEMailAttachments](T1.IPSEMailAttachments_Id, T1.IPSEMailAttachments_FileName, T1.IPSEMailAttachments_IPSEmailId)
    FROM (
        SELECT 
            T.Id AS IPSEMailAttachments_Id, 
            T.FileName AS IPSEMailAttachments_FileName, 
            T.IPSEmailId AS IPSEMailAttachments_IPSEmailId, 
            True AS _from0
        FROM IPSData.IPSEMailAttachments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IpsEmails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView278()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IpsEmails
        [IPSModel.IpsEmail](T1.IpsEmail_Id, T1.IpsEmail_Subject, T1.IpsEmail_Message, T1.IpsEmail_ToAddress, T1.IpsEmail_CCAddress, T1.IpsEmail_SentTime, T1.IpsEmail_FromAddress, T1.IpsEmail_FromUserId, T1.IpsEmail_ToUserId, T1.IpsEmail_BCCAddress, T1.IpsEmail_IsRead, T1.IpsEmail_ReadAt)
    FROM (
        SELECT 
            T.Id AS IpsEmail_Id, 
            T.Subject AS IpsEmail_Subject, 
            T.Message AS IpsEmail_Message, 
            T.ToAddress AS IpsEmail_ToAddress, 
            T.CCAddress AS IpsEmail_CCAddress, 
            T.SentTime AS IpsEmail_SentTime, 
            T.FromAddress AS IpsEmail_FromAddress, 
            T.FromUserId AS IpsEmail_FromUserId, 
            T.ToUserId AS IpsEmail_ToUserId, 
            T.BCCAddress AS IpsEmail_BCCAddress, 
            T.IsRead AS IpsEmail_IsRead, 
            T.ReadAt AS IpsEmail_ReadAt, 
            True AS _from0
        FROM IPSModelStoreContainer.IpsEmails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.IPSEMailAttachments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView279()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IPSEMailAttachments
        [IPSModel.IPSEMailAttachment](T1.IPSEMailAttachment_Id, T1.IPSEMailAttachment_FileName, T1.IPSEMailAttachment_IPSEmailId)
    FROM (
        SELECT 
            T.Id AS IPSEMailAttachment_Id, 
            T.FileName AS IPSEMailAttachment_FileName, 
            T.IPSEmailId AS IPSEMailAttachment_IPSEmailId, 
            True AS _from0
        FROM IPSModelStoreContainer.IPSEMailAttachments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.DailyEvaluation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView280()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DailyEvaluation
        [IPSModel.Store.DailyEvaluation](T1.DailyEvaluation_Id, T1.DailyEvaluation_UserId, T1.DailyEvaluation_TimeStamp, T1.DailyEvaluation_Rating)
    FROM (
        SELECT 
            T.Id AS DailyEvaluation_Id, 
            T.UserId AS DailyEvaluation_UserId, 
            T.TimeStamp AS DailyEvaluation_TimeStamp, 
            T.Rating AS DailyEvaluation_Rating, 
            True AS _from0
        FROM IPSData.DailyEvaluations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.DailyEvaluations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView281()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DailyEvaluations
        [IPSModel.DailyEvaluation](T1.DailyEvaluation_Id, T1.DailyEvaluation_UserId, T1.DailyEvaluation_TimeStamp, T1.DailyEvaluation_Rating)
    FROM (
        SELECT 
            T.Id AS DailyEvaluation_Id, 
            T.UserId AS DailyEvaluation_UserId, 
            T.TimeStamp AS DailyEvaluation_TimeStamp, 
            T.Rating AS DailyEvaluation_Rating, 
            True AS _from0
        FROM IPSModelStoreContainer.DailyEvaluation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSModelStoreContainer.SensorData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView282()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SensorData
        [IPSModel.Store.SensorData](T1.SensorData_Id, T1.SensorData_TrainingId, T1.SensorData_UserId, T1.SensorData_TimeStamp, T1.SensorData_Yaw, T1.SensorData_Pitch, T1.SensorData_Roll)
    FROM (
        SELECT 
            T.Id AS SensorData_Id, 
            T.TrainingId AS SensorData_TrainingId, 
            T.UserId AS SensorData_UserId, 
            T.TimeStamp AS SensorData_TimeStamp, 
            T.Yaw AS SensorData_Yaw, 
            T.Pitch AS SensorData_Pitch, 
            T.Roll AS SensorData_Roll, 
            True AS _from0
        FROM IPSData.SensorDatas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for IPSData.SensorDatas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView283()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SensorDatas
        [IPSModel.SensorData](T1.SensorData_Id, T1.SensorData_TrainingId, T1.SensorData_UserId, T1.SensorData_TimeStamp, T1.SensorData_Yaw, T1.SensorData_Pitch, T1.SensorData_Roll)
    FROM (
        SELECT 
            T.Id AS SensorData_Id, 
            T.TrainingId AS SensorData_TrainingId, 
            T.UserId AS SensorData_UserId, 
            T.TimeStamp AS SensorData_TimeStamp, 
            T.Yaw AS SensorData_Yaw, 
            T.Pitch AS SensorData_Pitch, 
            T.Roll AS SensorData_Roll, 
            True AS _from0
        FROM IPSModelStoreContainer.SensorData AS T
    ) AS T1");
        }
    }
}
